{"version":3,"file":"seeder.js","sourceRoot":"","sources":["../../src/utils/seeder.ts"],"names":[],"mappings":";;;;;;AAAA,qCAAyC;AACzC,mDAA2C;AAC3C,wDAA8B;AAE9B,MAAM,WAAW,GAAG,EAAE,CAAC;AAEhB,MAAM,cAAc,GAAG,KAAK,IAAI,EAAE;IACvC,IAAI,CAAC;QACH,sBAAsB;QACtB,MAAM,IAAA,cAAS,GAAE,CAAC;QAElB,MAAM,cAAc,GAAG;YACrB,KAAK,EAAE,wBAAwB,EAAE,oCAAoC;YACrE,QAAQ,EAAE,gBAAgB,EAAE,mCAAmC;YAC/D,YAAY,EAAE,CAAC,aAAa,CAAC,EAAE,gCAAgC;YAC/D,SAAS,EAAE,OAAO;YAClB,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,aAAa;YACnB,QAAQ,EAAE,IAAI;SACf,CAAC;QAEF,sCAAsC;QACtC,MAAM,kBAAkB,GAAG,MAAM,gBAAI,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,CAAC;QACvE,IAAI,kBAAkB,EAAE,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;YAE1C,OAAO;QACT,CAAC;QAED,gBAAgB;QAChB,MAAM,cAAc,GAAG,MAAM,kBAAM,CAAC,IAAI,CACtC,cAAc,CAAC,QAAQ,EACvB,WAAW,CACZ,CAAC;QAEF,qBAAqB;QACrB,MAAM,UAAU,GAAG,MAAM,gBAAI,CAAC,MAAM,CAAC;YACnC,GAAG,cAAc;YACjB,QAAQ,EAAE,cAAc;YACxB,4CAA4C;SAC7C,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC;YACV,GAAG,EAAE,UAAU,CAAC,GAAG;YACnB,KAAK,EAAE,UAAU,CAAC,KAAK;YACvB,IAAI,EAAE,UAAU,CAAC,IAAI;YACrB,SAAS,EAAE,UAAU,CAAC,SAAS;SAChC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;QACnD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;AACH,CAAC,CAAC;AA/CW,QAAA,cAAc,kBA+CzB","sourcesContent":["import { connectDb } from \"../config/db\";\r\nimport { User } from \"../models/userModel\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nconst SALT_ROUNDS = 10;\r\n\r\nexport const seedSuperAdmin = async () => {\r\n  try {\r\n    // Connect to database\r\n    await connectDb();\r\n\r\n    const superAdminData = {\r\n      email: \"superadmin@example.com\", // Change this to your desired email\r\n      password: \"SuperAdmin@123\", // Change this to a strong password\r\n      phoneNumbers: [\"+1234567890\"], // Change to actual phone number\r\n      firstName: \"Super\",\r\n      lastName: \"Admin\",\r\n      role: \"super_admin\",\r\n      isActive: true,\r\n    };\r\n\r\n    // Check if super admin already exists\r\n    const existingSuperAdmin = await User.findOne({ role: \"super_admin\" });\r\n    if (existingSuperAdmin) {\r\n      console.log(\"Super admin already exists\");\r\n\r\n      return;\r\n    }\r\n\r\n    // Hash password\r\n    const hashedPassword = await bcrypt.hash(\r\n      superAdminData.password,\r\n      SALT_ROUNDS\r\n    );\r\n\r\n    // Create super admin\r\n    const superAdmin = await User.create({\r\n      ...superAdminData,\r\n      password: hashedPassword,\r\n      // No createdBy since this is the first user\r\n    });\r\n\r\n    console.log(\"Super admin created successfully:\");\r\n    console.log({\r\n      _id: superAdmin._id,\r\n      email: superAdmin.email,\r\n      role: superAdmin.role,\r\n      createdAt: superAdmin.createdAt,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error seeding super admin:\", error);\r\n    process.exit(1);\r\n  }\r\n};\r\n\r\n"]}