{"version":3,"file":"userController.js","sourceRoot":"","sources":["../../src/controllers/userController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { asyncHandler } from \"../utils/asyncHandler\";\r\nimport { ApiResponse } from \"../utils/apiHandlerHelpers\";\r\nimport { ApiError } from \"../utils/apiHandlerHelpers\";\r\nimport { User } from \"../models/userModel\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport {\r\n  deleteFileFromS3,\r\n  uploadEmiratesIdDocument,\r\n  uploadPassportDocument,\r\n  uploadSignatureImage,\r\n  uploadUserProfileImage,\r\n} from \"../utils/uploadConf\";\r\n\r\ninterface UploadedFiles {\r\n  profileImage?: Express.Multer.File[];\r\n  signatureImage?: Express.Multer.File[];\r\n  emiratesIdDocument?: Express.Multer.File[];\r\n  passportDocument?: Express.Multer.File[];\r\n}\r\n\r\nconst SALT_ROUNDS = 10;\r\n\r\nconst processFileUpload = async (\r\n  file: Express.Multer.File | undefined,\r\n  uploadFunction: any\r\n) => {\r\n  if (!file) return undefined;\r\n  const result = await uploadFunction(file);\r\n  return result.success && result.uploadData\r\n    ? result.uploadData.url\r\n    : undefined;\r\n};\r\n\r\nexport const createUser = asyncHandler(async (req: Request, res: Response) => {\r\n  const {\r\n    email,\r\n    password,\r\n    phoneNumbers,\r\n    firstName,\r\n    lastName,\r\n    role,\r\n    salary,\r\n    accountNumber,\r\n    emiratesId,\r\n    passportNumber,\r\n    iBANNumber,\r\n    address,\r\n  } = req.body;\r\n\r\n  // Only validate required fields\r\n  if (!email || !password || !firstName || !lastName) {\r\n    throw new ApiError(400, \"Email, password, first name, and last name are required\");\r\n  }\r\n\r\n  // Convert phoneNumbers to array if provided\r\n  let phoneNumbersArray: string[] = [];\r\n\r\n  if (phoneNumbers) {\r\n    try {\r\n      if (typeof phoneNumbers === \"string\") {\r\n        const cleanedPhoneNumbers = phoneNumbers.replace(/'/g, '\"');\r\n        phoneNumbersArray = JSON.parse(cleanedPhoneNumbers);\r\n      } else if (Array.isArray(phoneNumbers)) {\r\n        phoneNumbersArray = phoneNumbers;\r\n      } else {\r\n        phoneNumbersArray = [phoneNumbers];\r\n      }\r\n\r\n      phoneNumbersArray = phoneNumbersArray.map((num) => String(num).trim());\r\n      phoneNumbersArray = phoneNumbersArray.filter((num) => num.length > 0);\r\n    } catch (e) {\r\n      console.error(\"Error parsing phone numbers:\", e);\r\n      throw new ApiError(400, \"Invalid phone numbers format\");\r\n    }\r\n  }\r\n\r\n  // Validate salary only if role is provided and not admin/super_admin\r\n  if (role && ![\"super_admin\", \"admin\"].includes(role) && (salary === undefined || salary === null)) {\r\n    throw new ApiError(400, \"Salary is required for this role\");\r\n  }\r\n\r\n  const existingUser = await User.findOne({ email });\r\n  if (existingUser) {\r\n    throw new ApiError(400, \"Email already in use\");\r\n  }\r\n\r\n  const hashedPassword = await bcrypt.hash(password, SALT_ROUNDS);\r\n  const files = req.files as UploadedFiles;\r\n\r\n  const [\r\n    profileImageUrl,\r\n    signatureImageUrl,\r\n    emiratesIdDocumentUrl,\r\n    passportDocumentUrl,\r\n  ] = await Promise.all([\r\n    processFileUpload(files.profileImage?.[0], uploadUserProfileImage),\r\n    processFileUpload(files.signatureImage?.[0], uploadSignatureImage),\r\n    processFileUpload(files.emiratesIdDocument?.[0], uploadEmiratesIdDocument),\r\n    processFileUpload(files.passportDocument?.[0], uploadPassportDocument),\r\n  ]);\r\n\r\n  const userData: any = {\r\n    email,\r\n    password: hashedPassword,\r\n    firstName,\r\n    lastName,\r\n    createdBy: req.user?.userId,\r\n  };\r\n\r\n  // Add optional fields only if provided\r\n  if (phoneNumbersArray.length > 0) userData.phoneNumbers = phoneNumbersArray;\r\n  if (role) userData.role = role;\r\n  if (salary !== undefined && salary !== null && ![\"super_admin\", \"admin\"].includes(role || \"worker\")) {\r\n    userData.salary = salary;\r\n  }\r\n  if (accountNumber) userData.accountNumber = accountNumber;\r\n  if (emiratesId) userData.emiratesId = emiratesId;\r\n  if (passportNumber) userData.passportNumber = passportNumber;\r\n  if (iBANNumber) userData.iBANNumber = iBANNumber;\r\n  if (address) userData.address = address;\r\n  if (profileImageUrl) userData.profileImage = profileImageUrl;\r\n  if (signatureImageUrl) userData.signatureImage = signatureImageUrl;\r\n  if (emiratesIdDocumentUrl) userData.emiratesIdDocument = emiratesIdDocumentUrl;\r\n  if (passportDocumentUrl) userData.passportDocument = passportDocumentUrl;\r\n\r\n  const user = await User.create(userData);\r\n\r\n  res.status(201).json(new ApiResponse(201, user, \"User created successfully\"));\r\n});\r\n\r\n\r\nexport const getUsers = asyncHandler(async (req: Request, res: Response) => {\r\n  const page = parseInt(req.query.page as string) || 1;\r\n  const limit = parseInt(req.query.limit as string) || 10;\r\n  const skip = (page - 1) * limit;\r\n\r\n  const filter: any = {};\r\n  if (req.query.role) filter.role = req.query.role;\r\n  if (req.query.isActive) filter.isActive = req.query.isActive === \"true\";\r\n\r\n  if (req.query.search) {\r\n    const searchTerm = req.query.search as string;\r\n    filter.$or = [\r\n      { firstName: { $regex: searchTerm, $options: \"i\" } },\r\n      { lastName: { $regex: searchTerm, $options: \"i\" } },\r\n      { email: { $regex: searchTerm, $options: \"i\" } },\r\n      {\r\n        $expr: {\r\n          $regexMatch: {\r\n            input: { $concat: [\"$firstName\", \" \", \"$lastName\"] },\r\n            regex: searchTerm,\r\n            options: \"i\",\r\n          },\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  const total = await User.countDocuments(filter);\r\n  const users = await User.find(filter, { password: 0 })\r\n    .skip(skip)\r\n    .limit(limit)\r\n    .sort({ createdAt: -1 });\r\n\r\n  res.status(200).json(\r\n    new ApiResponse(\r\n      200,\r\n      {\r\n        users,\r\n        pagination: {\r\n          total,\r\n          page,\r\n          limit,\r\n          totalPages: Math.ceil(total / limit),\r\n          hasNextPage: page * limit < total,\r\n          hasPreviousPage: page > 1,\r\n        },\r\n      },\r\n      \"Users retrieved successfully\"\r\n    )\r\n  );\r\n});\r\nexport const getCurrentUser = asyncHandler(async (req: Request, res: Response) => {\r\n  // Get the authenticated user's ID from the request\r\n  const userId = req.user?.userId;\r\n  \r\n  if (!userId) {\r\n    throw new ApiError(401, \"Not authenticated\");\r\n  }\r\n\r\n  // Find the user and exclude the password field\r\n  const user = await User.findById(userId)\r\n    .select(\"-password\")\r\n    .lean();\r\n\r\n  if (!user) {\r\n    throw new ApiError(404, \"User not found\");\r\n  }\r\n\r\n  res.status(200).json(\r\n    new ApiResponse(\r\n      200,\r\n      {\r\n        user: {\r\n          ...user,\r\n          // Add any additional fields or transformations here if needed\r\n        }\r\n      },\r\n      \"Current user retrieved successfully\"\r\n    )\r\n  );\r\n});\r\nexport const getUser = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n  const user = await User.findById(id).select(\"-password\");\r\n\r\n  if (!user) throw new ApiError(404, \"User not found\");\r\n\r\n  if (\r\n    user._id.toString() !== req.user?.userId &&\r\n    req.user?.role !== \"admin\" &&\r\n    req.user?.role !== \"super_admin\"\r\n  ) {\r\n    throw new ApiError(403, \"Forbidden: Insufficient permissions\");\r\n  }\r\n\r\n  res\r\n    .status(200)\r\n    .json(new ApiResponse(200, user, \"User retrieved successfully\"));\r\n});\r\n\r\nexport const updateUser = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n  const updateData = req.body;\r\n  const files = req.files as UploadedFiles;\r\n\r\n  const user = await User.findById(id);\r\n  if (!user) throw new ApiError(404, \"User not found\");\r\n\r\n  if (\r\n    user._id.toString() !== req.user?.userId &&\r\n    req.user?.role !== \"admin\" &&\r\n    req.user?.role !== \"super_admin\"\r\n  ) {\r\n    throw new ApiError(403, \"Forbidden: Insufficient permissions\");\r\n  }\r\n\r\n  if (updateData.password) {\r\n    updateData.password = await bcrypt.hash(updateData.password, SALT_ROUNDS);\r\n  }\r\n\r\n  // Handle phone numbers update\r\n  if (updateData.phoneNumbers) {\r\n    let phoneNumbersArray: string[] = [];\r\n\r\n    try {\r\n      if (typeof updateData.phoneNumbers === \"string\") {\r\n        const cleanedPhoneNumbers = updateData.phoneNumbers.replace(/'/g, '\"');\r\n        phoneNumbersArray = JSON.parse(cleanedPhoneNumbers);\r\n      } else if (Array.isArray(updateData.phoneNumbers)) {\r\n        phoneNumbersArray = updateData.phoneNumbers;\r\n      }\r\n\r\n      phoneNumbersArray = phoneNumbersArray.map((num) => String(num).trim());\r\n      updateData.phoneNumbers = phoneNumbersArray.filter((num) => num.length > 0);\r\n    } catch (e) {\r\n      console.error(\"Error parsing phone numbers:\", e);\r\n      throw new ApiError(400, \"Invalid phone numbers format\");\r\n    }\r\n  }\r\n\r\n  // Process file uploads\r\n  if (files.profileImage?.[0]) {\r\n    const result = await uploadUserProfileImage(files.profileImage[0]);\r\n    if (result.success && result.uploadData) {\r\n      if (user.profileImage)\r\n        await deleteFileFromS3(user.profileImage).catch(console.error);\r\n      updateData.profileImage = result.uploadData.url;\r\n    }\r\n  }\r\n\r\n  if (files.signatureImage?.[0]) {\r\n    const result = await uploadSignatureImage(files.signatureImage[0]);\r\n    if (result.success && result.uploadData) {\r\n      if (user.signatureImage)\r\n        await deleteFileFromS3(user.signatureImage).catch(console.error);\r\n      updateData.signatureImage = result.uploadData.url;\r\n    }\r\n  }\r\n\r\n  if (files.emiratesIdDocument?.[0]) {\r\n    const result = await uploadEmiratesIdDocument(files.emiratesIdDocument[0]);\r\n    if (result.success && result.uploadData) {\r\n      if (user.emiratesIdDocument)\r\n        await deleteFileFromS3(user.emiratesIdDocument).catch(console.error);\r\n      updateData.emiratesIdDocument = result.uploadData.url;\r\n    }\r\n  }\r\n\r\n  if (files.passportDocument?.[0]) {\r\n    const result = await uploadPassportDocument(files.passportDocument[0]);\r\n    if (result.success && result.uploadData) {\r\n      if (user.passportDocument)\r\n        await deleteFileFromS3(user.passportDocument).catch(console.error);\r\n      updateData.passportDocument = result.uploadData.url;\r\n    }\r\n  }\r\n\r\n  // Handle document removals\r\n  if (updateData.removeProfileImage === \"true\") {\r\n    if (user.profileImage)\r\n      await deleteFileFromS3(user.profileImage).catch(console.error);\r\n    updateData.profileImage = undefined;\r\n    delete updateData.removeProfileImage;\r\n  }\r\n\r\n  if (updateData.removeSignatureImage === \"true\") {\r\n    if (user.signatureImage)\r\n      await deleteFileFromS3(user.signatureImage).catch(console.error);\r\n    updateData.signatureImage = undefined;\r\n    delete updateData.removeSignatureImage;\r\n  }\r\n\r\n  if (updateData.removeEmiratesIdDocument === \"true\") {\r\n    if (user.emiratesIdDocument)\r\n      await deleteFileFromS3(user.emiratesIdDocument).catch(console.error);\r\n    updateData.emiratesIdDocument = undefined;\r\n    delete updateData.removeEmiratesIdDocument;\r\n  }\r\n\r\n  if (updateData.removePassportDocument === \"true\") {\r\n    if (user.passportDocument)\r\n      await deleteFileFromS3(user.passportDocument).catch(console.error);\r\n    updateData.passportDocument = undefined;\r\n    delete updateData.removePassportDocument;\r\n  }\r\n\r\n  // Remove salary for admin/super_admin roles\r\n  if (updateData.role && [\"super_admin\", \"admin\"].includes(updateData.role)) {\r\n    updateData.salary = undefined;\r\n  }\r\n\r\n  const updatedUser = await User.findByIdAndUpdate(id, updateData, {\r\n    new: true,\r\n    select: \"-password\",\r\n  });\r\n\r\n  res\r\n    .status(200)\r\n    .json(new ApiResponse(200, updatedUser, \"User updated successfully\"));\r\n});\r\n\r\nexport const deleteUser = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n  const user = await User.findById(id);\r\n\r\n  if (!user) throw new ApiError(404, \"User not found\");\r\n  if (user._id.toString() === req.user?.userId) {\r\n    throw new ApiError(400, \"Cannot delete your own account\");\r\n  }\r\n\r\n  await User.findByIdAndDelete(id);\r\n  res.status(200).json(new ApiResponse(200, null, \"User deleted successfully\"));\r\n});\r\n\r\nexport const login = asyncHandler(async (req: Request, res: Response) => {\r\n  const { email, password } = req.body;\r\n\r\n  if (!email || !password)\r\n    throw new ApiError(400, \"Email and password are required\");\r\n\r\n  const user = await User.findOne({ email }).select(\"+password\");\r\n  if (!user) throw new ApiError(401, \"Invalid credentials\");\r\n  if (!user.isActive)\r\n    throw new ApiError(403, \"Account is inactive. Please contact admin.\");\r\n\r\n  const isPasswordValid = await bcrypt.compare(password, user.password);\r\n  if (!isPasswordValid) throw new ApiError(401, \"Invalid credentials\");\r\n\r\n  const token = jwt.sign(\r\n    { userId: user._id, email: user.email, role: user.role },\r\n    process.env.JWT_SECRET || \"alghaza_secret\",\r\n    { expiresIn: \"7d\" }\r\n  );\r\n\r\n  res.cookie(\"token\", token, {\r\n    httpOnly: true,\r\n    secure: process.env.NODE_ENV === \"production\",\r\n    maxAge: 1000 * 60 * 60 * 24 * 7,\r\n  });\r\n\r\n  res.status(200).json(\r\n    new ApiResponse(\r\n      200,\r\n      {\r\n        token,\r\n        user: {\r\n          role: user.role,\r\n          name: user.firstName,\r\n          email: user.email,\r\n        },\r\n      },\r\n      \"Login successful\"\r\n    )\r\n  );\r\n});\r\n\r\nexport const getActiveEngineers = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const engineers = await User.find({\r\n      role: \"engineer\",\r\n      isActive: true,\r\n    }).select(\"-v -password\");\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(200, { engineers }, \"Engineers retrieved successfully\")\r\n      );\r\n  }\r\n);\r\n\r\nexport const getActiveDrivers = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const drivers = await User.find({ role: \"driver\", isActive: true }).select(\r\n      \"-v -password\"\r\n    );\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(200, { drivers }, \"Drivers retrieved successfully\")\r\n      );\r\n  }\r\n);\r\n\r\nexport const getActiveWorkers = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const workers = await User.find({ role: \"worker\", isActive: true }).select(\r\n      \"-v -password\"\r\n    );\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(200, { workers }, \"Workers retrieved successfully\")\r\n      );\r\n  }\r\n);\r\n\r\nexport const exportUsersToCSV = asyncHandler(async (req: Request, res: Response) => {\r\n  // Get all users without pagination\r\n  const users = await User.find({}, { password: 0 }).sort({ createdAt: -1 });\r\n\r\n  if (!users || users.length === 0) {\r\n    throw new ApiError(404, \"No users found\");\r\n  }\r\n\r\n  // Define CSV headers\r\n  const headers = [\r\n    \"ID\",\r\n    \"First Name\",\r\n    \"Last Name\",\r\n    \"Email\",\r\n    \"Phone Numbers\",\r\n    \"Role\",\r\n    \"Salary\",\r\n    \"Status\",\r\n    \"Account Number\",\r\n    \"Emirates ID\",\r\n    \"Passport Number\",\r\n    \"Address\",\r\n    \"Created At\",\r\n  ];\r\n\r\n  // Map user data to CSV rows\r\n  const rows = users.map(user => [\r\n    user._id,\r\n    user.firstName,\r\n    user.lastName,\r\n    user.email,\r\n    Array.isArray(user.phoneNumbers) ? user.phoneNumbers.join(\", \") : \"N/A\",\r\n    user.role,\r\n    user.salary || \"N/A\",\r\n    user.isActive ? \"Active\" : \"Inactive\",\r\n    user.accountNumber || \"N/A\",\r\n    user.emiratesId || \"N/A\",\r\n    user.passportNumber || \"N/A\",\r\n    user.address || \"N/A\",\r\n    user.createdAt?.toISOString() || \"N/A\",\r\n  ]);\r\n\r\n  // Convert to CSV\r\n  let csv = headers.join(\",\") + \"\\n\";\r\n  rows.forEach(row => {\r\n    csv += row.map(field => {\r\n      // Escape fields that contain commas\r\n      if (typeof field === \"string\" && field.includes(\",\")) {\r\n        return `\"${field}\"`;\r\n      }\r\n      return field;\r\n    }).join(\",\") + \"\\n\";\r\n  });\r\n\r\n  // Set response headers for file download\r\n  res.setHeader(\"Content-Type\", \"text/csv\");\r\n  res.setHeader(\"Content-Disposition\", \"attachment; filename=users_export.csv\");\r\n  \r\n  // Send the CSV file\r\n  res.status(200).send(csv);\r\n});\r\n"]}