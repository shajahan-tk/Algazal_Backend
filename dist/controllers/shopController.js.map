{"version":3,"file":"shopController.js","sourceRoot":"","sources":["../../src/controllers/shopController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { asyncHandler } from \"../utils/asyncHandler\";\r\nimport { ApiResponse } from \"../utils/apiHandlerHelpers\";\r\nimport { ApiError } from \"../utils/apiHandlerHelpers\";\r\nimport { Shop } from \"../models/shopModel\";\r\nimport { Types } from \"mongoose\";\r\nimport {\r\n  handleMultipleFileUploads,\r\n  deleteFileFromS3,\r\n  getS3KeyFromUrl,\r\n} from \"../utils/uploadConf\";\r\n\r\nexport const createShop = asyncHandler(async (req: Request, res: Response) => {\r\n  const { shopName, shopNo, address, vat, ownerName, ownerEmail, contact } =\r\n    req.body;\r\n\r\n  // Validate required fields\r\n  if (!shopName || !shopNo || !address || !vat || !ownerName || !contact) {\r\n    throw new ApiError(400, \"All fields except ownerEmail are required\");\r\n  }\r\n\r\n  // Check if VAT number already exists\r\n  const existingShop = await Shop.findOne({ vat });\r\n  if (existingShop) {\r\n    throw new ApiError(400, \"Shop with this VAT number already exists\");\r\n  }\r\n\r\n  // Check if shop number already exists\r\n  const existingShopNo = await Shop.findOne({ shopNo });\r\n  if (existingShopNo) {\r\n    throw new ApiError(400, \"Shop with this number already exists\");\r\n  }\r\n\r\n  // Handle file uploads\r\n  let shopAttachments: {\r\n    fileName: string;\r\n    fileType: string;\r\n    filePath: string;\r\n  }[] = [];\r\n\r\n  // Fix for req.files type issue\r\n  const files = Array.isArray(req.files)\r\n    ? req.files\r\n    : req.files\r\n    ? Object.values(req.files).flat()\r\n    : [];\r\n\r\n  if (files.length > 0) {\r\n    const uploadResults = await handleMultipleFileUploads(files);\r\n    if (!uploadResults.success) {\r\n      throw new ApiError(500, \"Failed to upload shop attachments\");\r\n    }\r\n    shopAttachments =\r\n      uploadResults.uploadData?.map((file) => ({\r\n        fileName: file.key.split(\"/\").pop() || \"attachment\",\r\n        fileType: file.mimetype,\r\n        filePath: file.url,\r\n      })) || [];\r\n  }\r\n\r\n  const shop = await Shop.create({\r\n    shopName,\r\n    shopNo,\r\n    address,\r\n    vat,\r\n    ownerName,\r\n    ownerEmail,\r\n    contact,\r\n    shopAttachments,\r\n    createdBy: req.user?.userId,\r\n  });\r\n\r\n  res.status(201).json(new ApiResponse(201, shop, \"Shop created successfully\"));\r\n});\r\nexport const getShops = asyncHandler(async (req: Request, res: Response) => {\r\n  const page = parseInt(req.query.page as string) || 1;\r\n  const limit = parseInt(req.query.limit as string) || 10;\r\n  const skip = (page - 1) * limit;\r\n\r\n  const filter: any = {};\r\n\r\n  // Search functionality\r\n  if (req.query.search) {\r\n    filter.$or = [\r\n      { shopName: { $regex: req.query.search, $options: \"i\" } },\r\n      { vat: { $regex: req.query.search, $options: \"i\" } },\r\n      { contact: { $regex: req.query.search, $options: \"i\" } },\r\n      { ownerName: { $regex: req.query.search, $options: \"i\" } },\r\n      { shopNo: { $regex: req.query.search, $options: \"i\" } },\r\n      { address: { $regex: req.query.search, $options: \"i\" } },\r\n    ];\r\n  }\r\n\r\n  const total = await Shop.countDocuments(filter);\r\n  const shops = await Shop.find(filter)\r\n    .skip(skip)\r\n    .limit(limit)\r\n    .sort({ createdAt: -1 })\r\n    .populate(\"createdBy\", \"firstName lastName email\");\r\n\r\n  res.status(200).json(\r\n    new ApiResponse(\r\n      200,\r\n      {\r\n        shops,\r\n        pagination: {\r\n          total,\r\n          page,\r\n          limit,\r\n          totalPages: Math.ceil(total / limit),\r\n          hasNextPage: page * limit < total,\r\n          hasPreviousPage: page > 1,\r\n        },\r\n      },\r\n      \"Shops retrieved successfully\"\r\n    )\r\n  );\r\n});\r\n\r\nexport const getShop = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n\r\n  const shop = await Shop.findById(id).populate(\r\n    \"createdBy\",\r\n    \"firstName lastName email\"\r\n  );\r\n  if (!shop) {\r\n    throw new ApiError(404, \"Shop not found\");\r\n  }\r\n\r\n  res\r\n    .status(200)\r\n    .json(new ApiResponse(200, shop, \"Shop retrieved successfully\"));\r\n});\r\n\r\nexport const updateShop = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n  const { shopName, shopNo, address, vat, ownerName, ownerEmail, contact } =\r\n    req.body;\r\n\r\n  const shop = await Shop.findById(id);\r\n  if (!shop) {\r\n    throw new ApiError(404, \"Shop not found\");\r\n  }\r\n\r\n  // Check if VAT is being updated and conflicts with other shops\r\n  if (vat && vat !== shop.vat) {\r\n    const existingShop = await Shop.findOne({\r\n      vat,\r\n      _id: { $ne: id },\r\n    });\r\n\r\n    if (existingShop) {\r\n      throw new ApiError(400, \"Another shop already uses this VAT number\");\r\n    }\r\n  }\r\n\r\n  // Check if shop number is being updated and conflicts with other shops\r\n  if (shopNo && shopNo !== shop.shopNo) {\r\n    const existingShopNo = await Shop.findOne({\r\n      shopNo,\r\n      _id: { $ne: id },\r\n    });\r\n\r\n    if (existingShopNo) {\r\n      throw new ApiError(400, \"Another shop already uses this shop number\");\r\n    }\r\n  }\r\n\r\n  // Handle file uploads for new attachments\r\n  let newAttachments: {\r\n    fileName: string;\r\n    fileType: string;\r\n    filePath: string;\r\n  }[] = [];\r\n\r\n  // Fix for req.files type issue\r\n  const files = Array.isArray(req.files)\r\n    ? req.files\r\n    : req.files\r\n    ? Object.values(req.files).flat()\r\n    : [];\r\n\r\n  if (files.length > 0) {\r\n    const uploadResults = await handleMultipleFileUploads(files);\r\n    if (!uploadResults.success) {\r\n      throw new ApiError(500, \"Failed to upload new shop attachments\");\r\n    }\r\n    newAttachments =\r\n      uploadResults.uploadData?.map((file) => ({\r\n        fileName: file.key.split(\"/\").pop() || \"attachment\",\r\n        fileType: file.mimetype,\r\n        filePath: file.url,\r\n      })) || [];\r\n  }\r\n\r\n  const updatedShop = await Shop.findByIdAndUpdate(\r\n    id,\r\n    {\r\n      shopName: shopName || shop.shopName,\r\n      shopNo: shopNo || shop.shopNo,\r\n      address: address || shop.address,\r\n      vat: vat || shop.vat,\r\n      ownerName: ownerName || shop.ownerName,\r\n      ownerEmail: ownerEmail !== undefined ? ownerEmail : shop.ownerEmail,\r\n      contact: contact || shop.contact,\r\n      $push: { shopAttachments: { $each: newAttachments } },\r\n    },\r\n    { new: true }\r\n  );\r\n\r\n  if (!updatedShop) {\r\n    throw new ApiError(500, \"Failed to update shop\");\r\n  }\r\n\r\n  res\r\n    .status(200)\r\n    .json(new ApiResponse(200, updatedShop, \"Shop updated successfully\"));\r\n});\r\n\r\nexport const deleteShop = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n\r\n  const shop = await Shop.findById(id);\r\n  if (!shop) {\r\n    throw new ApiError(404, \"Shop not found\");\r\n  }\r\n\r\n  // Delete all associated files from S3\r\n  if (shop.shopAttachments && shop.shopAttachments.length > 0) {\r\n    await Promise.all(\r\n      shop.shopAttachments.map(async (attachment) => {\r\n        try {\r\n          const key = getS3KeyFromUrl(attachment.filePath);\r\n          await deleteFileFromS3(key);\r\n        } catch (error) {\r\n          console.error(\r\n            `Failed to delete file from S3: ${attachment.filePath}`,\r\n            error\r\n          );\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  await Shop.findByIdAndDelete(id);\r\n\r\n  res.status(200).json(new ApiResponse(200, null, \"Shop deleted successfully\"));\r\n});\r\n\r\nexport const getShopByVat = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { vatNumber } = req.params;\r\n\r\n    const shop = await Shop.findOne({ vat: vatNumber }).populate(\r\n      \"createdBy\",\r\n      \"firstName lastName email\"\r\n    );\r\n    if (!shop) {\r\n      throw new ApiError(404, \"Shop not found\");\r\n    }\r\n\r\n    res\r\n      .status(200)\r\n      .json(new ApiResponse(200, shop, \"Shop retrieved successfully\"));\r\n  }\r\n);\r\n\r\nexport const getShopsByPincode = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { pincode } = req.params;\r\n    const page = parseInt(req.query.page as string) || 1;\r\n    const limit = parseInt(req.query.limit as string) || 10;\r\n    const skip = (page - 1) * limit;\r\n\r\n    if (!/^[0-9]{6}$/.test(pincode)) {\r\n      throw new ApiError(400, \"Invalid pincode format\");\r\n    }\r\n\r\n    const total = await Shop.countDocuments({\r\n      address: { $regex: pincode, $options: \"i\" },\r\n    });\r\n\r\n    const shops = await Shop.find({\r\n      address: { $regex: pincode, $options: \"i\" },\r\n    })\r\n      .skip(skip)\r\n      .limit(limit)\r\n      .sort({ shopName: 1 })\r\n      .populate(\"createdBy\", \"firstName lastName email\");\r\n\r\n    res.status(200).json(\r\n      new ApiResponse(\r\n        200,\r\n        {\r\n          shops,\r\n          pagination: {\r\n            total,\r\n            page,\r\n            limit,\r\n            totalPages: Math.ceil(total / limit),\r\n            hasNextPage: page * limit < total,\r\n            hasPreviousPage: page > 1,\r\n          },\r\n        },\r\n        \"Shops retrieved successfully\"\r\n      )\r\n    );\r\n  }\r\n);\r\n\r\n// Additional helper methods if needed\r\nconst deleteShopAttachments = async (attachments: any[]) => {\r\n  if (!attachments || attachments.length === 0) return;\r\n\r\n  await Promise.all(\r\n    attachments.map(async (attachment) => {\r\n      try {\r\n        const key = getS3KeyFromUrl(attachment.filePath);\r\n        await deleteFileFromS3(key);\r\n      } catch (error) {\r\n        console.error(\r\n          `Failed to delete file from S3: ${attachment.filePath}`,\r\n          error\r\n        );\r\n      }\r\n    })\r\n  );\r\n};\r\n"]}