{"version":3,"file":"projectController.js","sourceRoot":"","sources":["../../src/controllers/projectController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { asyncHandler } from \"../utils/asyncHandler\";\r\nimport { ApiResponse } from \"../utils/apiHandlerHelpers\";\r\nimport { ApiError } from \"../utils/apiHandlerHelpers\";\r\nimport { IProject, Project } from \"../models/projectModel\";\r\nimport { Client, IClient } from \"../models/clientModel\";\r\nimport { Estimation } from \"../models/estimationModel\";\r\nimport { IUser, User } from \"../models/userModel\";\r\nimport { Quotation } from \"../models/quotationModel\";\r\nimport { mailer } from \"../utils/mailer\";\r\nimport { Comment } from \"../models/commentModel\";\r\nimport { LPO } from \"../models/lpoModel\";\r\nimport dayjs from \"dayjs\";\r\nimport mongoose, { Types } from \"mongoose\";\r\nimport { generateProjectNumber } from \"../utils/documentNumbers\";\r\nimport { WorkProgressTemplateParams } from \"../template/workProgressEmailTemplate\";\r\nimport { Expense } from \"../models/expenseModel\";\r\nimport puppeteer from \"puppeteer\";\r\nimport { FRONTEND_URL } from \"../config/constant\";\r\n\r\n// Status transition validation\r\nconst validStatusTransitions: Record<string, string[]> = {\r\n  draft: [\"estimation_prepared\"],\r\n  estimation_prepared: [\"quotation_sent\", \"on_hold\", \"cancelled\"],\r\n  quotation_sent: [\r\n    \"quotation_approved\",\r\n    \"quotation_rejected\",\r\n    \"on_hold\",\r\n    \"cancelled\",\r\n  ],\r\n  quotation_approved: [\"lpo_received\", \"on_hold\", \"cancelled\"],\r\n  lpo_received: [\"work_started\", \"on_hold\", \"cancelled\"],\r\n  work_started: [\"in_progress\", \"on_hold\", \"cancelled\"],\r\n  in_progress: [\"work_completed\", \"on_hold\", \"cancelled\"],\r\n  work_completed: [\"quality_check\", \"on_hold\"],\r\n  quality_check: [\"client_handover\", \"work_completed\"],\r\n  client_handover: [\"final_invoice_sent\", \"on_hold\"],\r\n  final_invoice_sent: [\"payment_received\", \"on_hold\"],\r\n  payment_received: [\"project_closed\"],\r\n  on_hold: [\"in_progress\", \"work_started\", \"cancelled\"],\r\n  cancelled: [],\r\n  project_closed: [],\r\n  team_assigned: [\"work_started\", \"on_hold\"],\r\n};\r\n\r\nexport const createProject = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const {\r\n      projectName,\r\n      projectDescription,\r\n      client,\r\n      location,\r\n      building,\r\n      apartmentNumber,\r\n      attention\r\n    } = req.body;\r\n    console.log(req.body);\r\n\r\n    if (!projectName || !client || !location || !building || !apartmentNumber) {\r\n      throw new ApiError(400, \"Required fields are missing\");\r\n    }\r\n\r\n    const clientExists = await Client.findById(client);\r\n    if (!clientExists) {\r\n      throw new ApiError(404, \"Client not found\");\r\n    }\r\n\r\n    const project = await Project.create({\r\n      projectName,\r\n      projectDescription,\r\n      client,\r\n      location,\r\n      building,\r\n      apartmentNumber,\r\n      projectNumber: await generateProjectNumber(),\r\n      status: \"draft\",\r\n      progress: 0,\r\n      createdBy: req.user?.userId,\r\n      attention\r\n    });\r\n\r\n    res\r\n      .status(201)\r\n      .json(new ApiResponse(201, project, \"Project created successfully\"));\r\n  }\r\n);\r\n\r\nexport const getProjects = asyncHandler(async (req: Request, res: Response) => {\r\n  const page = parseInt(req.query.page as string) || 1;\r\n  const limit = parseInt(req.query.limit as string) || 10;\r\n  const skip = (page - 1) * limit;\r\n\r\n  // Build filter\r\n  const filter: any = {};\r\n\r\n  // Status filter\r\n  if (req.query.status) {\r\n    filter.status = req.query.status;\r\n  }\r\n\r\n  // Client filter\r\n  if (req.query.client) {\r\n    filter.client = req.query.client;\r\n  }\r\n\r\n  // Search functionality\r\n  if (req.query.search) {\r\n    const searchTerm = req.query.search as string;\r\n    filter.$or = [\r\n      { projectName: { $regex: searchTerm, $options: \"i\" } },\r\n      { projectDescription: { $regex: searchTerm, $options: \"i\" } },\r\n      { location: { $regex: searchTerm, $options: \"i\" } },\r\n      { building: { $regex: searchTerm, $options: \"i\" } },\r\n      { apartmentNumber: { $regex: searchTerm, $options: \"i\" } },\r\n      { projectNumber: { $regex: searchTerm, $options: \"i\" } }, // Added projectNumber to search\r\n    ];\r\n  }\r\n\r\n  const total = await Project.countDocuments(filter);\r\n\r\n  const projects = await Project.find(filter)\r\n    .populate(\"client\", \"clientName clientAddress mobileNumber\")\r\n    .populate(\"createdBy\", \"firstName lastName email\")\r\n    .populate(\"updatedBy\", \"firstName lastName email\")\r\n    .skip(skip)\r\n    .limit(limit)\r\n    .sort({ createdAt: -1 });\r\n\r\n  res.status(200).json(\r\n    new ApiResponse(\r\n      200,\r\n      {\r\n        projects,\r\n        pagination: {\r\n          total,\r\n          page,\r\n          limit,\r\n          totalPages: Math.ceil(total / limit),\r\n          hasNextPage: page * limit < total,\r\n          hasPreviousPage: page > 1,\r\n        },\r\n      },\r\n      \"Projects retrieved successfully\"\r\n    )\r\n  );\r\n});\r\n\r\nexport const getEngineerProjects = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const userId = req.user?.userId;\r\n\r\n    // Validate engineer user\r\n    if (!userId) {\r\n      throw new ApiError(401, \"Unauthorized access\");\r\n    }\r\n\r\n    const page = parseInt(req.query.page as string) || 1;\r\n    const limit = parseInt(req.query.limit as string) || 10;\r\n    const skip = (page - 1) * limit;\r\n\r\n    // Build filter - only projects assigned to this engineer\r\n    const filter: any = { assignedTo: userId };\r\n\r\n    // Status filter\r\n    if (req.query.status) {\r\n      filter.status = req.query.status;\r\n    }\r\n\r\n    // Client filter\r\n    if (req.query.client) {\r\n      filter.client = req.query.client;\r\n    }\r\n\r\n    // Search functionality\r\n    if (req.query.search) {\r\n      const searchTerm = req.query.search as string;\r\n      filter.$or = [\r\n        { projectName: { $regex: searchTerm, $options: \"i\" } },\r\n        { projectDescription: { $regex: searchTerm, $options: \"i\" } },\r\n        { location: { $regex: searchTerm, $options: \"i\" } },\r\n        { building: { $regex: searchTerm, $options: \"i\" } },\r\n        { apartmentNumber: { $regex: searchTerm, $options: \"i\" } },\r\n      ];\r\n    }\r\n\r\n    const total = await Project.countDocuments(filter);\r\n\r\n    const projects = await Project.find(filter)\r\n      .populate(\"client\", \"clientName clientAddress mobileNumber\")\r\n      .populate(\"createdBy\", \"firstName lastName email\")\r\n      .populate(\"updatedBy\", \"firstName lastName email\")\r\n      .populate(\"assignedTo\", \"firstName lastName email\")\r\n      .skip(skip)\r\n      .limit(limit)\r\n      .sort({ createdAt: -1 });\r\n\r\n    res.status(200).json(\r\n      new ApiResponse(\r\n        200,\r\n        {\r\n          projects,\r\n          pagination: {\r\n            total,\r\n            page,\r\n            limit,\r\n            totalPages: Math.ceil(total / limit),\r\n            hasNextPage: page * limit < total,\r\n            hasPreviousPage: page > 1,\r\n          },\r\n        },\r\n        \"Projects retrieved successfully\"\r\n      )\r\n    );\r\n  }\r\n);\r\n\r\nexport const getProject = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n\r\n  const project = await Project.findById(id)\r\n    .populate(\"client\")\r\n    .populate(\"createdBy\", \"firstName lastName email\")\r\n    .populate(\"updatedBy\", \"firstName lastName email\")\r\n    .populate(\"assignedTo\", \"-password\");\r\n\r\n  if (!project) {\r\n    throw new ApiError(404, \"Project not found\");\r\n  }\r\n\r\n  // Check if an estimation exists for this project\r\n  const estimation = await Estimation.findOne({ project: id }).select(\r\n    \"_id isChecked isApproved\"\r\n  );\r\n  const quotation = await Quotation.findOne({ project: id }).select(\"_id\");\r\n  const Lpo = await LPO.findOne({ project: id }).select(\"_id\");\r\n  const expense = await Expense.findOne({ project: id }).select(\"_id\");\r\n  const responseData = {\r\n    ...project.toObject(),\r\n    estimationId: estimation?._id || null,\r\n    quotationId: quotation?._id || null,\r\n    lpoId: Lpo?._id || null,\r\n    isChecked: estimation?.isChecked || false,\r\n    isApproved: estimation?.isApproved || false,\r\n    expenseId: expense?._id || null,\r\n  };\r\n\r\n  res\r\n    .status(200)\r\n    .json(new ApiResponse(200, responseData, \"Project retrieved successfully\"));\r\n});\r\n\r\nexport const updateProject = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n    const updateData = req.body;\r\n    console.log(updateData);\r\n\r\n    // Add updatedBy automatically\r\n    updateData.updatedBy = req.user?.userId;\r\n\r\n    const project = await Project.findById(id);\r\n    if (!project) {\r\n      throw new ApiError(404, \"Project not found\");\r\n    }\r\n\r\n    // Validate progress (0-100)\r\n    if (updateData.progress !== undefined) {\r\n      if (updateData.progress < 0 || updateData.progress > 100) {\r\n        throw new ApiError(400, \"Progress must be between 0 and 100\");\r\n      }\r\n    }\r\n\r\n    // Update status with validation\r\n    if (updateData.status) {\r\n      if (\r\n        !validStatusTransitions[project.status]?.includes(updateData.status)\r\n      ) {\r\n        throw new ApiError(\r\n          400,\r\n          `Invalid status transition from ${project.status} to ${updateData.status}`\r\n        );\r\n      }\r\n    }\r\n\r\n    const updatedProject = await Project.findByIdAndUpdate(id, updateData, {\r\n      new: true,\r\n      runValidators: true,\r\n    })\r\n      .populate(\"client\", \"clientName clientAddress mobileNumber\")\r\n      .populate(\"updatedBy\", \"firstName lastName email\");\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(200, updatedProject, \"Project updated successfully\")\r\n      );\r\n  }\r\n);\r\n\r\nexport const updateProjectStatus = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n    const { status } = req.body;\r\n\r\n    if (!status) {\r\n      throw new ApiError(400, \"Status is required\");\r\n    }\r\n\r\n    const project = await Project.findById(id);\r\n    if (!project) {\r\n      throw new ApiError(404, \"Project not found\");\r\n    }\r\n\r\n    // Validate status transition\r\n    if (!validStatusTransitions[project.status]?.includes(status)) {\r\n      throw new ApiError(\r\n        400,\r\n        `Invalid status transition from ${project.status} to ${status}`\r\n      );\r\n    }\r\n\r\n    const updateData: any = {\r\n      status,\r\n      updatedBy: req.user?.userId,\r\n    };\r\n\r\n    const updatedProject = await Project.findByIdAndUpdate(id, updateData, {\r\n      new: true,\r\n    });\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(\r\n          200,\r\n          updatedProject,\r\n          \"Project status updated successfully\"\r\n        )\r\n      );\r\n  }\r\n);\r\n\r\nexport const assignProject = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n    const { assignedTo } = req.body;\r\n\r\n    // Validation\r\n    if (!assignedTo || !id) {\r\n      throw new ApiError(400, \"AssignedTo is required\");\r\n    }\r\n\r\n    // Find project\r\n    const project = await Project.findById(id);\r\n    if (!project) {\r\n      throw new ApiError(400, \"Project not found\");\r\n    }\r\n\r\n    // Find engineer\r\n    const engineer = await User.findById(assignedTo);\r\n    if (!engineer) {\r\n      throw new ApiError(400, \"Engineer not found\");\r\n    }\r\n\r\n    // Update project assignment\r\n    project.assignedTo = assignedTo;\r\n    await project.save();\r\n\r\n    try {\r\n      // Get all admin and super_admin users\r\n      const adminUsers = await User.find({\r\n        role: { $in: [\"admin\", \"super_admin\"] },\r\n        email: { $exists: true, $ne: \"\" }, // Only users with emails\r\n      }).select(\"email firstName\");\r\n\r\n      // Create list of all recipients (engineer + admins)\r\n      const allRecipients = [\r\n        engineer.email,\r\n        ...adminUsers.map((admin) => admin.email),\r\n      ];\r\n\r\n      // Remove duplicates (in case engineer is also an admin)\r\n      const uniqueRecipients = [...new Set(allRecipients)];\r\n\r\n      // Send single email to all recipients\r\n      await mailer.sendEmail({\r\n        to: uniqueRecipients.join(\",\"), // Comma-separated list\r\n        subject: `Project Assignment: ${project.projectName}`,\r\n        templateParams: {\r\n          userName: \"Team\", // Generic since we're sending to multiple people\r\n          actionUrl: `${FRONTEND_URL}/app/project-view/${project._id}`,\r\n          contactEmail: \"info@alghazalgroup.com\",\r\n          logoUrl:\r\n            \"https://agats.s3.ap-south-1.amazonaws.com/logo/alghlogo.jpg\",\r\n          projectName: project.projectName || \"the project\",\r\n        },\r\n        text: `Dear Team,\\n\\nEngineer ${\r\n          engineer.firstName || \"Engineer\"\r\n        } has been assigned to project \"${\r\n          project.projectName || \"the project\"\r\n        }\".\\n\\nView project details: ${FRONTEND_URL}/app/project-view/${\r\n          project._id\r\n        }\\n\\nBest regards,\\nTECHNICAL SERVICE TEAM`,\r\n        headers: {\r\n          \"X-Priority\": \"1\",\r\n          Importance: \"high\",\r\n        },\r\n      });\r\n\r\n      res\r\n        .status(200)\r\n        .json(\r\n          new ApiResponse(\r\n            200,\r\n            {},\r\n            \"Project assigned and notifications sent successfully\"\r\n          )\r\n        );\r\n    } catch (emailError) {\r\n      console.error(\"Email sending failed:\", emailError);\r\n      res\r\n        .status(200)\r\n        .json(\r\n          new ApiResponse(\r\n            200,\r\n            {},\r\n            \"Project assigned successfully but notification emails failed to send\"\r\n          )\r\n        );\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateProjectProgress = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n    const { progress, comment } = req.body;\r\n    const userId = req.user?.userId;\r\n\r\n    if (progress === undefined || progress < 0 || progress > 100) {\r\n      throw new ApiError(400, \"Progress must be between 0 and 100\");\r\n    }\r\n\r\n    const project = await Project.findById(id)\r\n      .populate<{ client: IClient }>(\"client\")\r\n      .populate<{ assignedTo: IUser }>(\"assignedTo\");\r\n\r\n    if (!project) {\r\n      throw new ApiError(404, \"Project not found\");\r\n    }\r\n\r\n    // Store old progress for comparison\r\n    const oldProgress = project.progress;\r\n\r\n    // Update project status based on progress\r\n    if (project.progress >= 0 && project.status === \"team_assigned\") {\r\n      project.status = \"work_started\";\r\n    }\r\n    if (project.progress > 0 && project.status === \"work_started\") {\r\n      project.status = \"in_progress\";\r\n    }\r\n\r\n    const updateData: any = {\r\n      progress,\r\n      updatedBy: userId,\r\n    };\r\n\r\n    // Auto-update status if progress reaches 100%\r\n    if (progress === 100 && project.status !== \"work_completed\") {\r\n      updateData.status = \"work_completed\";\r\n    }\r\n\r\n    await project.save(); // Save the project first to update its status\r\n    const updatedProject = await Project.findByIdAndUpdate(id, updateData, {\r\n      new: true,\r\n    });\r\n\r\n    // Create a progress update comment\r\n    if (comment || progress !== oldProgress) {\r\n      const commentContent =\r\n        comment || `Progress updated from ${oldProgress}% to ${progress}%`;\r\n\r\n      await Comment.create({\r\n        content: commentContent,\r\n        user: userId,\r\n        project: id,\r\n        actionType: \"progress_update\",\r\n        progress: progress,\r\n      });\r\n    }\r\n\r\n    // Send progress update email if progress changed\r\n    if (progress !== oldProgress) {\r\n      try {\r\n        // Get all recipients (client + assigned engineer + admins + super_admins)\r\n        const recipients = [];\r\n\r\n        // Add client if exists\r\n        if (\r\n          project.client &&\r\n          typeof project.client === \"object\" &&\r\n          \"email\" in project.client\r\n        ) {\r\n          recipients.push({\r\n            email: project.client.email,\r\n            name: (project.client as IClient).clientName || \"Client\",\r\n          });\r\n        }\r\n\r\n        // Add assigned engineer if exists\r\n        if (\r\n          project.assignedTo &&\r\n          typeof project.assignedTo === \"object\" &&\r\n          \"email\" in project.assignedTo\r\n        ) {\r\n          recipients.push({\r\n            email: project.assignedTo.email,\r\n            name: project.assignedTo.firstName || \"Engineer\",\r\n          });\r\n        }\r\n\r\n        // Add admins and super admins\r\n        const admins = await User.find({\r\n          role: { $in: [\"admin\", \"super_admin\"] },\r\n          email: { $exists: true, $ne: \"\" },\r\n        });\r\n        admins.forEach((admin) => {\r\n          recipients.push({\r\n            email: admin.email,\r\n            name: admin.firstName || \"Admin\",\r\n          });\r\n        });\r\n\r\n        // Remove duplicates\r\n        const uniqueRecipients = recipients.filter(\r\n          (recipient, index, self) =>\r\n            index === self.findIndex((r) => r.email === recipient.email)\r\n        );\r\n\r\n        // Get the user who updated the progress\r\n        const updatedByUser = await User.findById(userId);\r\n\r\n        // Prepare email content\r\n        const templateParams: WorkProgressTemplateParams = {\r\n          userName: \"Team\",\r\n          projectName: project.projectName,\r\n          progress: progress,\r\n          progressDetails: comment,\r\n          contactEmail: \"info@alghazalgroup.com\",\r\n          logoUrl:\r\n            \"https://agats.s3.ap-south-1.amazonaws.com/logo/alghlogo.jpg\",\r\n          actionUrl: `${FRONTEND_URL}/app/project-view/${project._id}`,\r\n        };\r\n\r\n        // Send email to all recipients\r\n        await mailer.sendEmail({\r\n          to: process.env.NOTIFICATION_INBOX || \"info@alghazalgroup.com\",\r\n          bcc: uniqueRecipients.map((r) => r.email).join(\",\"),\r\n          subject: `Progress Update: ${project.projectName} (${progress}% Complete)`,\r\n          templateParams,\r\n          text: `Dear Team,\\n\\nThe progress for project ${\r\n            project.projectName\r\n          } has been updated to ${progress}%.\\n\\n${\r\n            comment ? `Details: ${comment}\\n\\n` : \"\"\r\n          }View project: ${\r\n            templateParams.actionUrl\r\n          }\\n\\nBest regards,\\nTECHNICAL SERVICE TEAM`,\r\n          headers: {\r\n            \"X-Priority\": \"1\",\r\n            Importance: \"high\",\r\n          },\r\n        });\r\n      } catch (emailError) {\r\n        console.error(\"Failed to send progress update emails:\", emailError);\r\n        // Continue even if email fails\r\n      }\r\n    }\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(\r\n          200,\r\n          updatedProject,\r\n          \"Project progress updated successfully\"\r\n        )\r\n      );\r\n  }\r\n);\r\nexport const getProjectProgressUpdates = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { projectId } = req.params;\r\n\r\n    const progressUpdates = await Comment.find({\r\n      project: projectId,\r\n      actionType: \"progress_update\",\r\n    })\r\n      .populate(\"user\", \"firstName lastName profileImage\")\r\n      .sort({ createdAt: -1 });\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(\r\n          200,\r\n          progressUpdates,\r\n          \"Project progress updates retrieved successfully\"\r\n        )\r\n      );\r\n  }\r\n);\r\n\r\nexport const deleteProject = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n\r\n    const project = await Project.findById(id);\r\n    if (!project) {\r\n      throw new ApiError(404, \"Project not found\");\r\n    }\r\n\r\n    // Prevent deletion if project is beyond draft stage\r\n    if (project.status !== \"draft\") {\r\n      throw new ApiError(400, \"Cannot delete project that has already started\");\r\n    }\r\n\r\n    await Project.findByIdAndDelete(id);\r\n\r\n    res\r\n      .status(200)\r\n      .json(new ApiResponse(200, null, \"Project deleted successfully\"));\r\n  }\r\n);\r\nexport const generateInvoiceData = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { projectId } = req.params;\r\n\r\n    // Validate projectId\r\n    if (!projectId || !Types.ObjectId.isValid(projectId)) {\r\n      throw new ApiError(400, \"Valid project ID is required\");\r\n    }\r\n\r\n    // Get project data with proper type annotations for populated fields\r\n    const project = await Project.findById(projectId)\r\n      .populate<{ client: IClient }>(\r\n        \"client\",\r\n        \"clientName clientAddress mobileNumber contactPerson trnNumber pincode workStartDate workEndDate\"\r\n      )\r\n      .populate<{ createdBy: IUser }>(\"createdBy\", \"firstName lastName\")\r\n      .populate<{ assignedTo: IUser }>(\"assignedTo\", \"firstName lastName\")\r\n      .lean();\r\n\r\n    if (!project) {\r\n      throw new ApiError(404, \"Project not found\");\r\n    }\r\n\r\n    // Get quotation data with validation\r\n    const quotation = await Quotation.findOne({ project: projectId }).lean();\r\n    if (!quotation) {\r\n      throw new ApiError(404, \"Quotation not found for this project\");\r\n    }\r\n\r\n    // Get LPO data with validation\r\n    const lpo = await LPO.findOne({ project: projectId }).lean();\r\n    if (!lpo) {\r\n      throw new ApiError(404, \"LPO not found for this project\");\r\n    }\r\n\r\n    // Validate required fields\r\n    if (!quotation.items || quotation.items.length === 0) {\r\n      throw new ApiError(400, \"Quotation items are required\");\r\n    }\r\n\r\n    // Generate invoice number with better format\r\n    const invoiceNumber = `INV${project.projectNumber.slice(3,10)}`;\r\n\r\n\r\n    // Type-safe client data extraction\r\n    const clientData =\r\n      typeof project.client === \"object\" ? project.client : null;\r\n    const assignedToData =\r\n      typeof project.assignedTo === \"object\" ? project.assignedTo : null;\r\n    const createdByData =\r\n      typeof project.createdBy === \"object\" ? project.createdBy : null;\r\n\r\n    // Enhanced vendee information with proper type checking\r\n    const vendeeInfo = {\r\n      name: clientData?.clientName || \"IMDAAD LLC\",\r\n      contactPerson: assignedToData\r\n        ? `Mr. ${assignedToData.firstName} ${assignedToData.lastName}`\r\n        : clientData?.clientName || \"N/A\",\r\n      poBox: clientData?.pincode || \"18220\",\r\n      address: clientData?.clientAddress || \"DUBAI - UAE\",\r\n      phone: clientData?.mobileNumber || \"(04) 812 8888\",\r\n      fax: \"(04) 881 8405\",\r\n      trn: clientData?.trnNumber || \"100236819700003\",\r\n      grnNumber: project.grnNumber || \"N/A\",\r\n      supplierNumber: \"PO25IMD7595\",\r\n      servicePeriod: `${dayjs(project.createdAt).format(\r\n        \"DD-MM-YYYY\"\r\n      )} to ${dayjs().format(\"DD-MM-YYYY\")}`,\r\n    };\r\n\r\n    // Enhanced vendor information\r\n    const vendorInfo = {\r\n      name: \"AL GHAZAL AL ABYAD TECHNICAL SERVICES\",\r\n      poBox: \"63509\",\r\n      address: \"Dubai - UAE\",\r\n      phone: \"(04) 4102555\",\r\n      fax: \"\",\r\n      trn: \"104037793700003\",\r\n    };\r\n\r\n    // Enhanced products array\r\n    const products = quotation.items.map((item, index) => ({\r\n      sno: index + 1,\r\n      description: item.description || \"N/A\",\r\n      qty: item.quantity || 0,\r\n      unitPrice: item.unitPrice || 0,\r\n      total: item.totalPrice || 0,\r\n    }));\r\nfunction getDaysLeft(validUntil?: Date): string {\r\n  if (!validUntil) return \"N/A\";\r\n\r\n  const today = new Date();\r\n\r\n  // Calculate difference in ms\r\n  const diffTime = validUntil.getTime() - today.getTime();\r\n\r\n  // Convert ms → days\r\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n  if (diffDays < 0) return \"Expired\"; \r\n  if (diffDays === 0) return \"Today\";\r\n\r\n  return `${diffDays} days left`;\r\n}\r\n    // Enhanced response structure with type-safe checks\r\n    const response = {\r\n      _id: project._id.toString(),\r\n      invoiceNumber,\r\n      date: new Date().toISOString(),\r\n      orderNumber: lpo.lpoNumber || \"N/A\",\r\n      vendor: vendorInfo,\r\n      vendee: vendeeInfo,\r\n      subject: quotation.scopeOfWork?.join(\", \") || \"N/A\",\r\n      paymentTerms: getDaysLeft(quotation.validUntil) || \"N/A\",\r\n      amountInWords: convertToWords(quotation.netAmount || 0),\r\n      products,\r\n      summary: {\r\n        amount: quotation.subtotal || 0,\r\n        vat: quotation.vatAmount || 0,\r\n        totalReceivable: quotation.netAmount || 0,\r\n      },\r\n      preparedBy: {\r\n        _id: createdByData?._id.toString() || \"\",\r\n        firstName: createdByData?.firstName || \"N/A\",\r\n        lastName: createdByData?.lastName || \"N/A\",\r\n      },\r\n    };\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(200, response, \"Invoice data generated successfully\")\r\n      );\r\n  }\r\n);\r\n\r\n// Enhanced number to words conversion\r\nconst convertToWords = (num: number): string => {\r\n  const units = [\r\n    \"\",\r\n    \"one\",\r\n    \"two\",\r\n    \"three\",\r\n    \"four\",\r\n    \"five\",\r\n    \"six\",\r\n    \"seven\",\r\n    \"eight\",\r\n    \"nine\",\r\n  ];\r\n  const teens = [\r\n    \"ten\",\r\n    \"eleven\",\r\n    \"twelve\",\r\n    \"thirteen\",\r\n    \"fourteen\",\r\n    \"fifteen\",\r\n    \"sixteen\",\r\n    \"seventeen\",\r\n    \"eighteen\",\r\n    \"nineteen\",\r\n  ];\r\n  const tens = [\r\n    \"\",\r\n    \"ten\",\r\n    \"twenty\",\r\n    \"thirty\",\r\n    \"forty\",\r\n    \"fifty\",\r\n    \"sixty\",\r\n    \"seventy\",\r\n    \"eighty\",\r\n    \"ninety\",\r\n  ];\r\n\r\n  if (num === 0) return \"Zero UAE Dirhams\";\r\n\r\n  let words = \"\";\r\n  // Implementation of number conversion logic here...\r\n  // (Add your full number-to-words implementation)\r\n\r\n  return `${words} UAE Dirhams`;\r\n};\r\n\r\n// Add to projectController.ts\r\nexport const assignTeamAndDriver = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { projectId } = req.params;\r\n    const { workers, driverId } = req.body;\r\n\r\n    // Validation\r\n    if (!Array.isArray(workers) || workers.length === 0 || !driverId) {\r\n      throw new ApiError(400, \"Both workers array and driverId are required\");\r\n    }\r\n\r\n    const project = await Project.findById(projectId);\r\n    if (!project) throw new ApiError(404, \"Project not found\");\r\n\r\n    // Verify project is in correct state\r\n    if (project.status !== \"lpo_received\") {\r\n      throw new ApiError(400, \"Project must be in 'lpo_received' status\");\r\n    }\r\n\r\n    // Verify all workers are engineers\r\n    const validWorkers = await User.find({\r\n      _id: { $in: workers },\r\n      role: \"worker\",\r\n    });\r\n    if (validWorkers.length !== workers.length) {\r\n      throw new ApiError(400, \"All workers must be engineers\");\r\n    }\r\n\r\n    // Verify driver exists\r\n    const driver = await User.findOne({\r\n      _id: driverId,\r\n      role: \"driver\",\r\n    });\r\n    if (!driver) {\r\n      throw new ApiError(400, \"Valid driver ID is required\");\r\n    }\r\n\r\n    // Update project\r\n    project.assignedWorkers = workers;\r\n    project.assignedDriver = driverId;\r\n\r\n    project.status = \"team_assigned\";\r\n\r\n    project.updatedBy = req.user?.userId\r\n      ? new mongoose.Types.ObjectId(req.user.userId)\r\n      : undefined;\r\n    await project.save();\r\n\r\n    // Send notifications (implementation depends on your mailer service)\r\n    // await sendAssignmentNotifications(project, workers, driverId);\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(200, project, \"Team and driver assigned successfully\")\r\n      );\r\n  }\r\n);\r\n\r\n// Helper function for notifications\r\n// const sendAssignmentNotifications = async (\r\n//   project: IProject,\r\n//   workerIds: Types.ObjectId[],\r\n//   driverId: Types.ObjectId\r\n// ) => {\r\n//   try {\r\n//     // Get all involved users (workers + driver + admins)\r\n//     const usersToNotify = await User.find({\r\n//       $or: [\r\n//         { _id: { $in: workerIds } },\r\n//         { _id: driverId },\r\n//         { role: { $in: [\"admin\", \"super_admin\"] } },\r\n//       ],\r\n//     });\r\n\r\n//     // Send emails\r\n//     await mailer.sendEmail({\r\n//       to: usersToNotify.map((u) => u.email).join(\",\"),\r\n//       subject: `Team Assigned: ${project.projectName}`,\r\n//       templateParams: {\r\n//         projectName: project.projectName,\r\n//         actionUrl: `http://yourfrontend.com/projects/${project._id}`,\r\n//       },\r\n//       text: `You've been assigned to project ${project.projectName}`,\r\n//     });\r\n//   } catch (error) {\r\n//     console.error(\"Notification error:\", error);\r\n//   }\r\n// };\r\nexport const getAssignedTeam = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { projectId } = req.params;\r\n\r\n    const project = await Project.findById(projectId)\r\n      .populate(\"assignedWorkers\", \"firstName lastName profileImage\")\r\n      .populate(\"assignedDriver\", \"firstName lastName profileImage\");\r\n\r\n    if (!project) throw new ApiError(404, \"Project not found\");\r\n\r\n    res.status(200).json(\r\n      new ApiResponse(\r\n        200,\r\n        {\r\n          workers: project.assignedWorkers,\r\n          driver: project.assignedDriver,\r\n        },\r\n        \"Assigned team fetched successfully\"\r\n      )\r\n    );\r\n  }\r\n);\r\n// Update only workers and driver assignments\r\nexport const updateWorkersAndDriver = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n    const { workers, driver } = req.body;\r\n\r\n    // Validation\r\n    if (!id) {\r\n      throw new ApiError(400, \"Project ID is required\");\r\n    }\r\n\r\n    // At least one field should be provided\r\n    if (!workers && !driver) {\r\n      throw new ApiError(400, \"Either workers or driver must be provided\");\r\n    }\r\n\r\n    // Find project\r\n    const project = await Project.findById(id);\r\n    if (!project) {\r\n      throw new ApiError(400, \"Project not found\");\r\n    }\r\n\r\n    // Validate and update workers if provided\r\n    if (workers !== undefined) {\r\n      // Explicit check for undefined (empty array is valid)\r\n      if (!Array.isArray(workers)) {\r\n        throw new ApiError(400, \"Workers must be an array\");\r\n      }\r\n\r\n      // If workers array is provided (even empty), validate all IDs\r\n      const workersExist = await User.find({\r\n        _id: { $in: workers },\r\n        role: \"worker\",\r\n      });\r\n\r\n      if (workersExist.length !== workers.length) {\r\n        throw new ApiError(400, \"One or more workers not found or not workers\");\r\n      }\r\n\r\n      project.assignedWorkers = workers;\r\n    }\r\n\r\n    // Validate and update driver if provided\r\n    if (driver !== undefined) {\r\n      // Explicit check for undefined (null is valid to clear driver)\r\n      if (driver) {\r\n        const driverExists = await User.findOne({\r\n          _id: driver,\r\n          role: \"driver\",\r\n        });\r\n        if (!driverExists) {\r\n          throw new ApiError(400, \"Driver not found or not a driver\");\r\n        }\r\n        project.assignedDriver = driver;\r\n      } else {\r\n        // If driver is explicitly set to null/empty, clear it\r\n        project.assignedDriver = undefined;\r\n      }\r\n    }\r\n\r\n    const updatedProject = await project.save();\r\n\r\n    // Send notifications\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(\r\n          200,\r\n          updatedProject,\r\n          \"Workers and driver assignments updated successfully\"\r\n        )\r\n      );\r\n  }\r\n);\r\n\r\n// Notification helper specifically for workers/driver updates\r\n// const sendWorkersDriverNotification = async (project: any) => {\r\n//   try {\r\n//     // Get all admin and super_admin users\r\n//     const adminUsers = await User.find({\r\n//       role: { $in: [\"admin\", \"super_admin\"] },\r\n//       email: { $exists: true, $ne: \"\" },\r\n//     }).select(\"email firstName\");\r\n\r\n//     // Get all assigned workers and driver details\r\n//     const assignedUsers = await User.find({\r\n//       _id: {\r\n//         $in: [\r\n//           ...(project.driver ? [project.driver] : []),\r\n//           ...(project.workers || []),\r\n//         ].filter(Boolean),\r\n//       },\r\n//     }).select(\"email firstName role\");\r\n\r\n//     // Create list of all recipients (assigned users + admins)\r\n//     const allRecipients = [\r\n//       ...adminUsers.map((admin) => admin.email),\r\n//       ...assignedUsers.map((user) => user.email),\r\n//     ];\r\n\r\n//     // Remove duplicates\r\n//     const uniqueRecipients = [...new Set(allRecipients)];\r\n\r\n//     // Prepare assignment details for email\r\n//     const assignmentDetails = [];\r\n//     if (project.driver) {\r\n//       const driver = assignedUsers.find((u) => u._id.equals(project.driver));\r\n//       if (driver) {\r\n//         assignmentDetails.push(`Driver: ${driver.firstName}`);\r\n//       }\r\n//     }\r\n//     if (project.workers?.length) {\r\n//       const workers = assignedUsers.filter((u) =>\r\n//         project.workers.some((w: any) => u._id.equals(w))\r\n//       );\r\n//       if (workers.length) {\r\n//         assignmentDetails.push(\r\n//           `Workers: ${workers.map((w) => w.firstName).join(\", \")}`\r\n//         );\r\n//       }\r\n//     }\r\n\r\n//     // Send email if there are recipients and assignments\r\n//     if (uniqueRecipients.length && assignmentDetails.length) {\r\n//       await mailer.sendEmail({\r\n//         to: uniqueRecipients.join(\",\"),\r\n//         subject: `Project Team Update: ${project.projectName}`,\r\n//         templateParams: {\r\n//           userName: \"Team\",\r\n//           actionUrl: `${process.env.FRONTEND_URL}/app/project-view/${project._id}`,\r\n//           contactEmail: \"propertymanagement@alhamra.ae\",\r\n//           logoUrl: process.env.LOGO_URL,\r\n//           projectName: project.projectName || \"the project\",\r\n//           assignmentDetails: assignmentDetails.join(\"\\n\"),\r\n//         },\r\n//         text: `Dear Team,\\n\\nThe team for project \"${\r\n//           project.projectName\r\n//         }\" has been updated:\\n\\n${assignmentDetails.join(\r\n//           \"\\n\"\r\n//         )}\\n\\nView project details: ${\r\n//           process.env.FRONTEND_URL\r\n//         }/app/project-view/${\r\n//           project._id\r\n//         }\\n\\nBest regards,\\nTECHNICAL SERVICE TEAM`,\r\n//         headers: {\r\n//           \"X-Priority\": \"1\",\r\n//           Importance: \"high\",\r\n//         },\r\n//       });\r\n//     }\r\n//   } catch (error) {\r\n//     console.error(\"Error in sendWorkersDriverNotification:\", error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\nexport const getDriverProjects = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const driverId = req.user?.userId;\r\n\r\n    if (!driverId) {\r\n      throw new ApiError(401, \"Unauthorized access\");\r\n    }\r\n\r\n    const page = parseInt(req.query.page as string) || 1;\r\n    const limit = parseInt(req.query.limit as string) || 10;\r\n    const skip = (page - 1) * limit;\r\n\r\n    // Build filter - only projects assigned to this driver\r\n    const filter: any = { assignedDriver: driverId };\r\n\r\n    // Status filter\r\n    if (req.query.status) {\r\n      filter.status = req.query.status;\r\n    }\r\n\r\n    // Search functionality\r\n    if (req.query.search) {\r\n      const searchTerm = req.query.search as string;\r\n      filter.$or = [\r\n        { projectName: { $regex: searchTerm, $options: \"i\" } },\r\n        { projectDescription: { $regex: searchTerm, $options: \"i\" } },\r\n        { location: { $regex: searchTerm, $options: \"i\" } },\r\n        { building: { $regex: searchTerm, $options: \"i\" } },\r\n        { apartmentNumber: { $regex: searchTerm, $options: \"i\" } },\r\n        { projectNumber: { $regex: searchTerm, $options: \"i\" } },\r\n      ];\r\n    }\r\n\r\n    const total = await Project.countDocuments(filter);\r\n\r\n    const projects = await Project.find(filter)\r\n      .populate(\"client\", \"clientName clientAddress mobileNumber\")\r\n      .populate(\"assignedWorkers\", \"firstName lastName profileImage\")\r\n      .populate(\"assignedDriver\", \"firstName lastName profileImage\")\r\n      .skip(skip)\r\n      .limit(limit)\r\n      .sort({ createdAt: -1 });\r\n\r\n    res.status(200).json(\r\n      new ApiResponse(\r\n        200,\r\n        {\r\n          projects,\r\n          pagination: {\r\n            total,\r\n            page,\r\n            limit,\r\n            totalPages: Math.ceil(total / limit),\r\n            hasNextPage: page * limit < total,\r\n            hasPreviousPage: page > 1,\r\n          },\r\n        },\r\n        \"Driver projects retrieved successfully\"\r\n      )\r\n    );\r\n  }\r\n);\r\n\r\nexport const generateInvoicePdf = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { projectId } = req.params;\r\n\r\n    // Validate projectId\r\n    if (!projectId || !Types.ObjectId.isValid(projectId)) {\r\n      throw new ApiError(400, \"Valid project ID is required\");\r\n    }\r\n\r\n    // Get project data with populated fields\r\n    const project = await Project.findById(projectId)\r\n      .populate<{ client: IClient }>({\r\n        path: \"client\",\r\n        select: \"clientName clientAddress mobileNumber telephoneNumber email trnNumber\",\r\n      })\r\n      .populate<{ createdBy: IUser }>(\r\n        \"createdBy\",\r\n        \"firstName lastName signatureImage\"\r\n      );\r\n\r\n    if (!project) {\r\n      throw new ApiError(404, \"Project not found\");\r\n    }\r\n\r\n    // Get quotation for this project\r\n    const quotation = await Quotation.findOne({ project: projectId });\r\n    if (!quotation) {\r\n      throw new ApiError(404, \"Quotation not found for this project\");\r\n    }\r\n\r\n    // Get LPO data if exists\r\n    const lpo = await LPO.findOne({ project: projectId });\r\n\r\n    // Type-safe access to populated fields\r\n    const client = project.client as IClient;\r\n    const createdBy = project.createdBy as IUser;\r\n\r\n    // Generate invoice number\r\n    const invoiceNumber = `INV${project.projectNumber.slice(3,10)}`;\r\n\r\n    \r\n    // Format dates\r\n    const formatDate = (date: Date | string | undefined): string => {\r\n      if (!date) return 'N/A';\r\n      const d = new Date(date);\r\n      return isNaN(d.getTime()) ? 'N/A' : d.toLocaleDateString('en-GB', {\r\n        day: '2-digit',\r\n        month: 'short',\r\n        year: 'numeric'\r\n      });\r\n    };\r\n\r\n    // Calculate amounts\r\n    const subtotal = quotation.items.reduce(\r\n      (sum, item) => sum + (item.totalPrice || 0),\r\n      0\r\n    );\r\n    const vatAmount = subtotal * (quotation.vatPercentage / 100);\r\n    const totalAmount = subtotal + vatAmount;\r\n\r\n    // Helper function to convert amount to words\r\n    const convertToWords = (num: number): string => {\r\n      if (num === 0) return 'Zero AED only';\r\n      \r\n      const units = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'];\r\n      const teens = ['Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\r\n      const tens = ['', 'Ten', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\r\n      const scales = ['', 'Thousand', 'Million', 'Billion', 'Trillion'];\r\n\r\n      const convertChunk = (n: number): string => {\r\n        if (n === 0) return '';\r\n        let chunkWords = [];\r\n        \r\n        const hundred = Math.floor(n / 100);\r\n        if (hundred > 0) {\r\n          chunkWords.push(units[hundred] + ' Hundred');\r\n        }\r\n        \r\n        const remainder = n % 100;\r\n        if (remainder > 0) {\r\n          if (remainder < 10) {\r\n            chunkWords.push(units[remainder]);\r\n          } else if (remainder < 20) {\r\n            chunkWords.push(teens[remainder - 10]);\r\n          } else {\r\n            const ten = Math.floor(remainder / 10);\r\n            const unit = remainder % 10;\r\n            chunkWords.push(tens[ten]);\r\n            if (unit > 0) {\r\n              chunkWords.push(units[unit]);\r\n            }\r\n          }\r\n        }\r\n        \r\n        return chunkWords.join(' ');\r\n      };\r\n\r\n      const numStr = Math.floor(num).toString();\r\n      const chunks = [];\r\n      for (let i = numStr.length; i > 0; i -= 3) {\r\n        chunks.push(parseInt(numStr.substring(Math.max(0, i - 3), i), 10));\r\n      }\r\n\r\n      let words = [];\r\n      for (let i = 0; i < chunks.length; i++) {\r\n        const chunkWords = convertChunk(chunks[i]);\r\n        if (chunkWords) {\r\n          words.unshift(chunkWords + (scales[i] ? ' ' + scales[i] : ''));\r\n        }\r\n      }\r\n\r\n      const decimal = Math.round((num - Math.floor(num)) * 100);\r\n      let decimalWords = '';\r\n      if (decimal > 0) {\r\n        decimalWords = ' and ' + convertChunk(decimal) + ' Fils';\r\n      }\r\n\r\n      const result = words.join(' ') + decimalWords;\r\n      return result.charAt(0).toUpperCase() + result.slice(1).toLowerCase();\r\n    };\r\n\r\n    // Main HTML content\r\n    const htmlContent = `\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n  <style type=\"text/css\">\r\n    @page {\r\n      size: A4;\r\n      margin: 1cm;\r\n    }\r\n    body {\r\n      font-family: 'Arial', sans-serif;\r\n      font-size: 11pt; /* Increased from 10pt for better readability */\r\n      line-height: 1.5; /* Increased line height for better readability */\r\n      color: #333;\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n    .header {\r\n      display: flex;\r\n      align-items: flex-start;\r\n      margin-bottom: 20px; /* Increased spacing */\r\n      gap: 20px;\r\n    }\r\n    .logo {\r\n      height: 60px; /* Slightly larger logo */\r\n      width: auto;\r\n      max-width: 200px;\r\n    }\r\n    .header-content {\r\n      flex-grow: 1;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n    }\r\n    .document-title {\r\n      font-size: 18pt; /* Larger and more prominent */\r\n      font-weight: bold;\r\n      margin: 0;\r\n      text-align: right;\r\n      color: #000;\r\n      padding-top: 5px;\r\n    }\r\n    .invoice-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin-bottom: 20px;\r\n      padding-bottom: 15px;\r\n      border-bottom: 2px solid #94d7f4;\r\n      align-items: flex-start;\r\n    }\r\n    .invoice-info {\r\n      text-align: right;\r\n      font-size: 10pt; /* Consistent font size */\r\n    }\r\n    .invoice-info p {\r\n      margin: 3px 0; /* Tighter paragraph spacing */\r\n    }\r\n    .service-period {\r\n      margin: 10px 0 15px 0;\r\n      padding: 8px 0;\r\n      font-weight: bold;\r\n      font-size: 10.5pt; /* Slightly larger than body text */\r\n      border-bottom: 1px solid #eee;\r\n      background-color: #f8f9fa;\r\n      padding: 8px 12px;\r\n      border-radius: 4px;\r\n    }\r\n    .client-info-container {\r\n      display: flex;\r\n      margin-bottom: 25px;\r\n      gap: 25px;\r\n    }\r\n    .client-info, .company-info {\r\n      flex: 1;\r\n      padding: 12px 15px;\r\n      border: 1px solid #ddd;\r\n      border-radius: 5px;\r\n      font-size: 10.5pt; /* Slightly larger for better readability */\r\n    }\r\n    .client-info h3, .company-info h3 {\r\n      font-size: 12pt; /* Larger section headers */\r\n      margin: 0 0 10px 0;\r\n      color: #2c3e50;\r\n      border-bottom: 1px solid #94d7f4;\r\n      padding-bottom: 5px;\r\n    }\r\n    .section {\r\n      margin-bottom: 20px;\r\n      page-break-inside: avoid;\r\n    }\r\n    .section-title {\r\n      font-size: 13pt; /* Larger section titles */\r\n      font-weight: bold;\r\n      padding: 8px 0;\r\n      margin: 15px 0 8px 0;\r\n      border-bottom: 2px solid #94d7f4;\r\n      color: #2c3e50;\r\n    }\r\n    table {\r\n      width: 100%;\r\n      border-collapse: collapse;\r\n      margin-bottom: 20px;\r\n      page-break-inside: avoid;\r\n      font-size: 10.5pt; /* Better table font size */\r\n    }\r\n    th {\r\n      background-color: #94d7f4;\r\n      color: #000;\r\n      font-weight: bold;\r\n      padding: 8px 10px; /* More padding for better readability */\r\n      text-align: left;\r\n      border: 1px solid #ddd;\r\n      font-size: 10.5pt;\r\n    }\r\n    td {\r\n      padding: 8px 10px; /* More padding for better readability */\r\n      border: 1px solid #ddd;\r\n      vertical-align: top;\r\n      font-size: 10.5pt;\r\n    }\r\n    .amount-summary {\r\n      margin-top: 15px;\r\n      width: 100%;\r\n      text-align: right;\r\n      font-size: 11pt;\r\n    }\r\n    .amount-summary-row {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      margin-bottom: 6px;\r\n    }\r\n    .amount-label {\r\n      width: 180px; /* Slightly wider for better alignment */\r\n      font-weight: bold;\r\n      text-align: right;\r\n      padding-right: 15px;\r\n      font-size: 10.5pt;\r\n    }\r\n    .amount-value {\r\n      width: 120px; /* Slightly wider for better alignment */\r\n      text-align: right;\r\n      font-size: 10.5pt;\r\n    }\r\n    .net-amount-row {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      background-color: #94d7f4;\r\n      color: #000;\r\n      font-weight: bold;\r\n      font-size: 12pt; /* Larger for emphasis */\r\n      margin-top: 8px;\r\n      padding: 8px 0;\r\n      border-top: 2px solid #333;\r\n    }\r\n    .terms-box {\r\n      border: 1px solid #000;\r\n      padding: 12px;\r\n      margin-top: 20px;\r\n      display: inline-block;\r\n      width: auto;\r\n      min-width: 50%;\r\n      font-size: 10.5pt;\r\n    }\r\n    .bank-details {\r\n      margin-top: 25px;\r\n      padding: 15px;\r\n      border: 1px solid #ddd;\r\n      border-radius: 5px;\r\n      background-color: #f8f9fa;\r\n      font-size: 10.5pt;\r\n    }\r\n    .bank-details h3 {\r\n      font-size: 12pt;\r\n      margin: 0 0 12px 0;\r\n      color: #2c3e50;\r\n    }\r\n    .text-center {\r\n      text-align: center;\r\n    }\r\n    .text-right {\r\n      text-align: right;\r\n    }\r\n    .terms-page {\r\n      page-break-before: always;\r\n      padding-top: 20px;\r\n    }\r\n    .footer {\r\n      font-size: 9.5pt; /* Slightly larger footer */\r\n      color: #555;\r\n      text-align: center;\r\n      border-top: 2px solid #ddd;\r\n      padding-top: 15px;\r\n      margin-top: 35px;\r\n      line-height: 1.6;\r\n    }\r\n    .tagline {\r\n      text-align: center;\r\n      font-weight: bold;\r\n      font-size: 13pt; /* More prominent tagline */\r\n      margin: 25px 0 15px 0;\r\n      color: #2c3e50;\r\n    }\r\n    p {\r\n      margin: 6px 0; /* Consistent paragraph spacing */\r\n      line-height: 1.5;\r\n    }\r\n    h3 {\r\n      margin: 0 0 12px 0;\r\n      color: #2c3e50;\r\n      font-size: 12pt;\r\n    }\r\n    strong {\r\n      font-weight: 600; /* Slightly bolder strong text */\r\n    }\r\n    /* Ensure no text is too small */\r\n    .no-small-text {\r\n      font-size: 10pt !important;\r\n      min-font-size: 10pt;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <div class=\"header\">\r\n    <img class=\"logo\" src=\"https://agats.s3.ap-south-1.amazonaws.com/logo/logo.jpeg\" alt=\"Company Logo\">\r\n    <div class=\"header-content\">\r\n      <div class=\"document-title\">TAX INVOICE</div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"invoice-header\">\r\n    <div class=\"no-small-text\">\r\n      <p><strong>Invoice #:</strong> ${invoiceNumber}</p>\r\n      <p><strong>Date:</strong> ${formatDate(new Date())}</p>\r\n      ${lpo ? `<p><strong>LPO #:</strong> ${lpo.lpoNumber}</p>` : ''}\r\n      ${project.grnNumber ? `<p><strong>GRN #:</strong> ${project.grnNumber}</p>` : ''}\r\n    </div>\r\n    <div class=\"invoice-info no-small-text\">\r\n      <p><strong>Project:</strong> ${project.projectName || \"N/A\"}</p>\r\n      <!-- Service Period moved to top below project name -->\r\n      <div class=\"service-period\">\r\n        <strong>Service Period:</strong> ${formatDate(project.workStartDate)} - ${formatDate(project.workEndDate || new Date())}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"client-info-container\">\r\n    <div class=\"client-info\">\r\n      <h3>BILL TO:</h3>\r\n      <p><strong>CLIENT:</strong> ${client.clientName || \"N/A\"}</p>\r\n      <p><strong>ADDRESS:</strong> ${client.clientAddress || \"N/A\"}</p>\r\n      <p><strong>CONTACT:</strong> ${client.mobileNumber || client.telephoneNumber || \"N/A\"}</p>\r\n      <p><strong>EMAIL:</strong> ${client.email || \"N/A\"}</p>\r\n      <p><strong>TRN:</strong> ${client.trnNumber || \"N/A\"}</p>\r\n    </div>\r\n\r\n    <div class=\"company-info\">\r\n      <h3>AL GHAZAL AL ABYAD TECHNICAL SERVICES</h3>\r\n      <p>Office No:04, R09-France Cluster</p>\r\n      <p>International City-Dubai</p>\r\n      <p>P.O.Box:262760, Dubai-U.A.E</p>\r\n      <p>Tel: 044102555</p>\r\n      <p>TRN: 104037793700003</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"section\">\r\n    <div class=\"section-title\">INVOICE ITEMS</div>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th width=\"5%\">No.</th>\r\n          <th width=\"45%\">Description</th>\r\n          <th width=\"10%\">UOM</th>\r\n          <th width=\"10%\">Qty</th>\r\n          <th width=\"15%\">Unit Price (AED)</th>\r\n          <th width=\"15%\" class=\"text-right\">Total (AED)</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        ${quotation.items.map((item, index) => `\r\n          <tr>\r\n            <td class=\"text-center\">${index + 1}</td>\r\n            <td>${item.description}</td>\r\n            <td class=\"text-center\">${item.uom || \"NOS\"}</td>\r\n            <td class=\"text-center\">${item.quantity.toFixed(2)}</td>\r\n            <td class=\"text-right\">${item.unitPrice.toFixed(2)}</td>\r\n            <td class=\"text-right\">${item.totalPrice.toFixed(2)}</td>\r\n          </tr>\r\n        `).join(\"\")}\r\n      </tbody>\r\n    </table>\r\n\r\n    <div class=\"amount-summary\">\r\n      <div class=\"amount-summary-row\">\r\n        <div class=\"amount-label\">SUBTOTAL:</div>\r\n        <div class=\"amount-value\">${subtotal.toFixed(2)} AED</div>\r\n      </div>\r\n      <div class=\"amount-summary-row\">\r\n        <div class=\"amount-label\">VAT ${quotation.vatPercentage}%:</div>\r\n        <div class=\"amount-value\">${vatAmount.toFixed(2)} AED</div>\r\n      </div>\r\n      <div class=\"net-amount-row\">\r\n        <div class=\"amount-label\">TOTAL AMOUNT:</div>\r\n        <div class=\"amount-value\">${totalAmount.toFixed(2)} AED</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"bank-details\">\r\n    <h3>BANK DETAILS</h3>\r\n    <p><strong>Bank Name:</strong> Emirates NBD</p>\r\n    <p><strong>Account Name:</strong> AL GHAZAL AL ABYAD TECHNICAL SERVICES</p>\r\n    <p><strong>Account Number:</strong> 1015489374101</p>\r\n    <p><strong>IBAN:</strong> AE580260001015489374101</p>\r\n    <p><strong>Swift Code:</strong> EBILAEAD</p>\r\n  </div>\r\n\r\n  <div class=\"section\">\r\n    <p><strong>Amount in words:</strong> ${convertToWords(totalAmount)} AED only</p>\r\n    <p><strong>Payment Terms:</strong> ${\"30 days from invoice date\"}</p>\r\n  </div>\r\n    \r\n  <div class=\"footer\">\r\n    <div class=\"tagline\">We work U Relax</div>\r\n    <p><strong>AL GHAZAL AL ABYAD TECHNICAL SERVICES</strong></p>\r\n    <p>Office No:04, R09-France Cluster, International City-Dubai | P.O.Box:262760, Dubai-U.A.E</p>\r\n    <p>Tel: 044102555 | <a href=\"http://www.alghazalgroup.com/\">www.alghazalgroup.com</a></p>\r\n    <p>Generated on ${formatDate(new Date())}</p>\r\n  </div>\r\n</body>\r\n</html>\r\n`;\r\n\r\n    const browser = await puppeteer.launch({\r\n      headless: \"shell\",\r\n      args: [\"--no-sandbox\", \"--disable-setuid-sandbox\", \"--font-render-hinting=none\"],\r\n    });\r\n\r\n    try {\r\n      const page = await browser.newPage();\r\n      \r\n      // Set viewport for consistent rendering\r\n      await page.setViewport({ width: 1200, height: 1600 });\r\n      \r\n      await page.setContent(htmlContent, {\r\n        waitUntil: [\"load\", \"networkidle0\", \"domcontentloaded\"],\r\n        timeout: 30000,\r\n      });\r\n\r\n      const pdfBuffer = await page.pdf({\r\n        format: \"A4\",\r\n        printBackground: true,\r\n        margin: {\r\n          top: \"1cm\",\r\n          right: \"1cm\",\r\n          bottom: \"1cm\",\r\n          left: \"1cm\",\r\n        },\r\n        displayHeaderFooter: false,\r\n        preferCSSPageSize: true,\r\n      });\r\n\r\n      res.setHeader(\"Content-Type\", \"application/pdf\");\r\n      res.setHeader(\r\n        \"Content-Disposition\",\r\n        `attachment; filename=invoice-${invoiceNumber}.pdf`\r\n      );\r\n      res.send(pdfBuffer);\r\n    } catch (error) {\r\n      console.error(\"PDF generation error:\", error);\r\n      throw new ApiError(500, \"Failed to generate PDF\");\r\n    } finally {\r\n      await browser.close();\r\n    }\r\n  }\r\n);\r\n// Helper function to convert numbers to words\r\nfunction convertToWords1(num: number): string {\r\n  const single = [\r\n    \"Zero\",\r\n    \"One\",\r\n    \"Two\",\r\n    \"Three\",\r\n    \"Four\",\r\n    \"Five\",\r\n    \"Six\",\r\n    \"Seven\",\r\n    \"Eight\",\r\n    \"Nine\",\r\n  ];\r\n  const double = [\r\n    \"Ten\",\r\n    \"Eleven\",\r\n    \"Twelve\",\r\n    \"Thirteen\",\r\n    \"Fourteen\",\r\n    \"Fifteen\",\r\n    \"Sixteen\",\r\n    \"Seventeen\",\r\n    \"Eighteen\",\r\n    \"Nineteen\",\r\n  ];\r\n  const tens = [\r\n    \"\",\r\n    \"Ten\",\r\n    \"Twenty\",\r\n    \"Thirty\",\r\n    \"Forty\",\r\n    \"Fifty\",\r\n    \"Sixty\",\r\n    \"Seventy\",\r\n    \"Eighty\",\r\n    \"Ninety\",\r\n  ];\r\n  const formatTenth = (digit: number, prev: number) => {\r\n    return 0 == digit ? \"\" : \" \" + (1 == digit ? double[prev] : tens[digit]);\r\n  };\r\n  const formatOther = (digit: number, next: string, denom: string) => {\r\n    return (\r\n      (0 != digit && 1 != digit\r\n        ? \" \" + single[digit] + \" \"\r\n        : \" \" + single[digit]) +\r\n      (0 != digit ? \" \" + denom : \"\") +\r\n      next\r\n    );\r\n  };\r\n\r\n  let str = \"\";\r\n  let rupees = Math.floor(num);\r\n  let paise = Math.floor((num - rupees) * 100);\r\n\r\n  if (rupees > 0) {\r\n    const strRupees = rupees.toString();\r\n    const len = strRupees.length;\r\n    let x = 0;\r\n\r\n    while (x < len) {\r\n      const digit = parseInt(strRupees[x]);\r\n      const place = len - x;\r\n      switch (place) {\r\n        case 4: // Thousands\r\n          str += formatOther(digit, \"\", \"Thousand\");\r\n          break;\r\n        case 3: // Hundreds\r\n          if (digit > 0) {\r\n            str += formatOther(digit, \"\", \"Hundred\");\r\n          }\r\n          break;\r\n        case 2: // Tens\r\n          if (digit > 1) {\r\n            str += formatTenth(digit, parseInt(strRupees[x + 1]));\r\n            x++;\r\n          } else if (digit == 1) {\r\n            str += formatTenth(digit, parseInt(strRupees[x + 1]));\r\n            x++;\r\n          }\r\n          break;\r\n        case 1: // Ones\r\n          if (digit > 0) {\r\n            str += \" \" + single[digit];\r\n          }\r\n          break;\r\n      }\r\n      x++;\r\n    }\r\n    str += \" Dirhams\";\r\n  }\r\n\r\n  if (paise > 0) {\r\n    if (str !== \"\") {\r\n      str += \" and \";\r\n    }\r\n    if (paise < 10) {\r\n      str += single[paise] + \" Fils\";\r\n    } else if (paise < 20) {\r\n      str += double[paise - 10] + \" Fils\";\r\n    } else {\r\n      str +=\r\n        tens[Math.floor(paise / 10)] +\r\n        (paise % 10 > 0 ? \" \" + single[paise % 10] : \"\") +\r\n        \" Fils\";\r\n    }\r\n  }\r\n\r\n  return str.trim() || \"Zero Dirhams\";\r\n}\r\n\r\nexport const addGrnNumber = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const projectId = req.params.projectId;\r\n\r\n    if (!projectId) {\r\n      res\r\n        .status(400)\r\n        .json({ message: \"projectId is required\", success: false });\r\n      return;\r\n    }\r\n\r\n    const { grnNumber } = req.body;\r\n\r\n    if (!grnNumber) {\r\n      res\r\n        .status(400)\r\n        .json({ message: \"grnNumber is required\", success: false });\r\n      return;\r\n    }\r\n    const project = await Project.findById(projectId);\r\n    if (!project) {\r\n      res.status(400).json({ message: \"project not found\", success: false });\r\n      return;\r\n    }\r\n    const updatedProject = await Project.findByIdAndUpdate(\r\n      projectId,\r\n      { grnNumber: grnNumber },\r\n      { new: true }\r\n    );\r\n\r\n    if (!updateProject) {\r\n      res\r\n        .status(402)\r\n        .json({ message: \"grn Number update failed\", success: false });\r\n      return;\r\n    } else {\r\n    }\r\n    res\r\n      .status(200)\r\n      .json({ message: \"grn Number update successfully\", success: true });\r\n  }\r\n);\r\n\r\n// Set work start date\r\nexport const setWorkStartDate = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n    const { workStartDate } = req.body;\r\n\r\n    if (!workStartDate) {\r\n      throw new ApiError(400, \"workStartDate is required\");\r\n    }\r\n\r\n    const project = await Project.findById(id);\r\n    if (!project) {\r\n      throw new ApiError(404, \"Project not found\");\r\n    }\r\n\r\n    const parsedDate = new Date(workStartDate);\r\n    if (isNaN(parsedDate.getTime())) {\r\n      throw new ApiError(400, \"Invalid date format\");\r\n    }\r\n\r\n    const updatedProject = await Project.findByIdAndUpdate(\r\n      id,\r\n      {\r\n        workStartDate: parsedDate,\r\n        updatedBy: req.user?.userId,\r\n      },\r\n      { new: true, runValidators: true }\r\n    );\r\n    console.log(updatedProject);\r\n    \r\n\r\n    res.status(200).json(\r\n      new ApiResponse(200, updatedProject, \"Work start date set successfully\")\r\n    );\r\n  }\r\n);\r\n\r\n// Set work end date\r\nexport const setWorkEndDate = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n    const { workEndDate } = req.body;\r\n\r\n    if (!workEndDate) {\r\n      throw new ApiError(400, \"workEndDate is required\");\r\n    }\r\n\r\n    const project = await Project.findById(id);\r\n    if (!project) {\r\n      throw new ApiError(404, \"Project not found\");\r\n    }\r\n\r\n    const parsedDate = new Date(workEndDate);\r\n    if (isNaN(parsedDate.getTime())) {\r\n      throw new ApiError(400, \"Invalid date format\");\r\n    }\r\n\r\n    const updatedProject = await Project.findByIdAndUpdate(\r\n      id,\r\n      {\r\n        workEndDate: parsedDate,\r\n        updatedBy: req.user?.userId,\r\n      },\r\n      { new: true, runValidators: true }\r\n    );\r\n\r\n    res.status(200).json(\r\n      new ApiResponse(200, updatedProject, \"Work end date set successfully\")\r\n    );\r\n  }\r\n);\r\n\r\n// Get work duration information\r\nexport const getWorkDuration = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n\r\n    const project = await Project.findById(id);\r\n    if (!project) {\r\n      throw new ApiError(404, \"Project not found\");\r\n    }\r\n\r\n    let durationInDays: number | null = null;\r\n    let isCompleted = false;\r\n    let isInProgress = false;\r\n\r\n    if (project.workStartDate) {\r\n      const start = new Date(project.workStartDate);\r\n      const now = new Date();\r\n\r\n      if (project.workEndDate) {\r\n        const end = new Date(project.workEndDate);\r\n        durationInDays = Math.floor(\r\n          (end.getTime() - start.getTime()) / (1000 * 3600 * 24)\r\n        );\r\n        isCompleted = true;\r\n      } else {\r\n        durationInDays = Math.floor(\r\n          (now.getTime() - start.getTime()) / (1000 * 3600 * 24)\r\n        );\r\n        isInProgress = true;\r\n      }\r\n    }\r\n\r\n    res.status(200).json(\r\n      new ApiResponse(\r\n        200,\r\n        {\r\n          workStartDate: project.workStartDate,\r\n          workEndDate: project.workEndDate,\r\n          durationInDays,\r\n          isCompleted,\r\n          isInProgress,\r\n        },\r\n        \"Work duration information retrieved successfully\"\r\n      )\r\n    );\r\n  }\r\n);\r\n"]}