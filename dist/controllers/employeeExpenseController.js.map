{"version":3,"file":"employeeExpenseController.js","sourceRoot":"","sources":["../../src/controllers/employeeExpenseController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { asyncHandler } from \"../utils/asyncHandler\";\r\nimport { ApiResponse } from \"../utils/apiHandlerHelpers\";\r\nimport { ApiError } from \"../utils/apiHandlerHelpers\";\r\nimport { EmployeeExpense } from \"../models/employeeExpenseModel\";\r\nimport { IUser, User } from \"../models/userModel\";\r\nimport ExcelJS from \"exceljs\";\r\nimport { Types } from \"mongoose\";\r\n\r\nexport const createEmployeeExpense = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const {\r\n      employee,\r\n      designation,\r\n      country,\r\n      basicSalary,\r\n      allowance,\r\n      twoYearSalary,\r\n      perYearExpenses,\r\n      perMonthExpenses,\r\n      perDayExpenses,\r\n      totalExpensesPerPerson,\r\n      visaExpenses,\r\n      twoYearUniform,\r\n      shoes,\r\n      twoYearAccommodation,\r\n      sewaBills,\r\n      dewaBills,\r\n      insurance,\r\n      transport,\r\n      water,\r\n      thirdPartyLiabilities,\r\n      fairmontCertificate,\r\n      leaveSalary,\r\n      ticket,\r\n      gratuity,\r\n      customExpenses\r\n    } = req.body;\r\n\r\n    // Validate required fields\r\n    if (!employee || !designation || !country || basicSalary === undefined) {\r\n      throw new ApiError(400, \"Required fields are missing\");\r\n    }\r\n\r\n    // Check if employee exists\r\n    const employeeExists = await User.findById(employee);\r\n    if (!employeeExists) {\r\n      throw new ApiError(404, \"Employee not found\");\r\n    }\r\n\r\n    // Calculate total salary if not provided\r\n    const totalSalary = basicSalary + (allowance || 0);\r\n\r\n    const expenseRecord = await EmployeeExpense.create({\r\n      employee,\r\n      designation,\r\n      country,\r\n      basicSalary,\r\n      allowance: allowance || 0,\r\n      totalSalary,\r\n      twoYearSalary,\r\n      perYearExpenses,\r\n      perMonthExpenses,\r\n      perDayExpenses,\r\n      totalExpensesPerPerson,\r\n      visaExpenses,\r\n      twoYearUniform,\r\n      shoes,\r\n      twoYearAccommodation,\r\n      sewaBills,\r\n      dewaBills,\r\n      insurance,\r\n      transport,\r\n      water,\r\n      thirdPartyLiabilities,\r\n      fairmontCertificate,\r\n      leaveSalary,\r\n      ticket,\r\n      gratuity,\r\n      customExpenses: customExpenses || [],\r\n      createdBy: req.user?.userId\r\n    });\r\n\r\n    res.status(201).json(\r\n      new ApiResponse(201, expenseRecord, \"Employee expense record created successfully\")\r\n    );\r\n  }\r\n);\r\n\r\nexport const getEmployeeExpenses = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { \r\n      employee, \r\n      designation, \r\n      country, \r\n      minSalary, \r\n      maxSalary,\r\n      startDate,\r\n      endDate,\r\n      month,\r\n      year,\r\n      page = 1, \r\n      limit = 10 \r\n    } = req.query;\r\n\r\n    const filter: any = {};\r\n    \r\n    // Basic filters\r\n    if (employee) filter.employee = employee;\r\n    if (designation) filter.designation = { $regex: designation as string, $options: \"i\" };\r\n    if (country) filter.country = { $regex: country as string, $options: \"i\" };\r\n    \r\n    // Salary range filter\r\n    if (minSalary || maxSalary) {\r\n      filter.totalSalary = {};\r\n      if (minSalary) filter.totalSalary.$gte = Number(minSalary);\r\n      if (maxSalary) filter.totalSalary.$lte = Number(maxSalary);\r\n    }\r\n\r\n    // Date range filter (takes precedence over year/month)\r\n    if (startDate && endDate) {\r\n      filter.createdAt = {\r\n        $gte: new Date(startDate as string),\r\n        $lte: new Date(endDate as string),\r\n      };\r\n    } else {\r\n      // Year filter\r\n      if (year) {\r\n        const yearNum = parseInt(year as string);\r\n        if (isNaN(yearNum)) {\r\n          throw new ApiError(400, \"Invalid year value\");\r\n        }\r\n        filter.createdAt = {\r\n          $gte: new Date(yearNum, 0, 1),\r\n          $lte: new Date(yearNum + 1, 0, 1),\r\n        };\r\n      }\r\n\r\n      // Month filter (works with year filter)\r\n      if (month) {\r\n        const monthNum = parseInt(month as string);\r\n        if (isNaN(monthNum) || monthNum < 1 || monthNum > 12) {\r\n          throw new ApiError(400, \"Invalid month value (1-12)\");\r\n        }\r\n\r\n        if (!filter.createdAt) {\r\n          // If no year specified, use current year\r\n          const currentYear = new Date().getFullYear();\r\n          filter.createdAt = {\r\n            $gte: new Date(currentYear, monthNum - 1, 1),\r\n            $lt: new Date(currentYear, monthNum, 1),\r\n          };\r\n        } else {\r\n          // Adjust existing year filter to specific month\r\n          const startDate = new Date(filter.createdAt.$gte);\r\n          startDate.setMonth(monthNum - 1);\r\n          startDate.setDate(1);\r\n\r\n          const endDate = new Date(startDate);\r\n          endDate.setMonth(monthNum);\r\n\r\n          filter.createdAt.$gte = startDate;\r\n          filter.createdAt.$lte = endDate;\r\n        }\r\n      }\r\n    }\r\n\r\n    const skip = (Number(page) - 1) * Number(limit);\r\n    const total = await EmployeeExpense.countDocuments(filter);\r\n\r\n    const expenses = await EmployeeExpense.find(filter)\r\n      .skip(skip)\r\n      .limit(Number(limit))\r\n      .sort({ createdAt: -1 })\r\n      .populate(\"employee\", \"firstName lastName email\")\r\n      .populate(\"createdBy\", \"firstName lastName\");\r\n\r\n    res.status(200).json(\r\n      new ApiResponse(\r\n        200,\r\n        {\r\n          expenses,\r\n          pagination: {\r\n            total,\r\n            page: Number(page),\r\n            limit: Number(limit),\r\n            totalPages: Math.ceil(total / Number(limit)),\r\n            hasNextPage: Number(page) * Number(limit) < total,\r\n            hasPreviousPage: Number(page) > 1,\r\n          },\r\n        },\r\n        \"Employee expenses retrieved successfully\"\r\n      )\r\n    );\r\n  }\r\n);\r\n\r\nexport const getEmployeeExpense = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n\r\n    const expense = await EmployeeExpense.findById(id)\r\n      .populate(\"employee\", \"firstName lastName email designation salary\")\r\n      .populate(\"createdBy\", \"firstName lastName\");\r\n\r\n    if (!expense) {\r\n      throw new ApiError(404, \"Employee expense record not found\");\r\n    }\r\n\r\n    res.status(200).json(\r\n      new ApiResponse(200, expense, \"Employee expense retrieved successfully\")\r\n    );\r\n  }\r\n);\r\n\r\nexport const updateEmployeeExpense = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n    const updateData = req.body;\r\n\r\n    const expense = await EmployeeExpense.findById(id);\r\n    if (!expense) {\r\n      throw new ApiError(404, \"Employee expense record not found\");\r\n    }\r\n\r\n    // Recalculate total salary if basicSalary or allowance is updated\r\n    if (updateData.basicSalary || updateData.allowance) {\r\n      updateData.totalSalary = \r\n        (updateData.basicSalary || expense.basicSalary) + \r\n        (updateData.allowance || expense.allowance);\r\n    }\r\n\r\n    const updatedExpense = await EmployeeExpense.findByIdAndUpdate(\r\n      id,\r\n      updateData,\r\n      { new: true }\r\n    )\r\n      .populate(\"employee\", \"firstName lastName email\")\r\n      .populate(\"createdBy\", \"firstName lastName\");\r\n\r\n    res.status(200).json(\r\n      new ApiResponse(200, updatedExpense, \"Employee expense updated successfully\")\r\n    );\r\n  }\r\n);\r\n\r\nexport const deleteEmployeeExpense = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n\r\n    const expense = await EmployeeExpense.findByIdAndDelete(id);\r\n    if (!expense) {\r\n      throw new ApiError(404, \"Employee expense record not found\");\r\n    }\r\n\r\n    res.status(200).json(\r\n      new ApiResponse(200, null, \"Employee expense deleted successfully\")\r\n    );\r\n  }\r\n);\r\n\r\nexport const exportEmployeeExpensesToExcel = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    try {\r\n      const { search, employee, designation, country, month, year, minSalary, maxSalary, startDate, endDate } = req.query;\r\n      \r\n      const filter: any = {};\r\n\r\n      // Search filter\r\n      if (search) {\r\n        const searchRegex = new RegExp(search as string, \"i\");\r\n        filter.$or = [\r\n          { designation: searchRegex },\r\n          { country: searchRegex },\r\n        ];\r\n      }\r\n\r\n      // Employee filter (if filtering by specific employee ID)\r\n      if (employee) {\r\n        filter.employee = employee;\r\n      }\r\n\r\n      // Designation filter\r\n      if (designation) {\r\n        filter.designation = new RegExp(designation as string, \"i\");\r\n      }\r\n\r\n      // Country filter\r\n      if (country) {\r\n        filter.country = new RegExp(country as string, \"i\");\r\n      }\r\n\r\n      // Date range filter - Handle both startDate/endDate and month/year\r\n      if (startDate && endDate) {\r\n        // Use startDate and endDate if provided\r\n        filter.createdAt = {\r\n          $gte: new Date(startDate as string),\r\n          $lte: new Date(endDate as string)\r\n        };\r\n      } else if (month && year) {\r\n        // Use month/year filtering\r\n        const monthNum = parseInt(month as string);\r\n        const yearNum = parseInt(year as string);\r\n        \r\n        if (isNaN(monthNum) || monthNum < 1 || monthNum > 12) {\r\n          throw new ApiError(400, \"Invalid month value (1-12)\");\r\n        }\r\n        if (isNaN(yearNum)) {\r\n          throw new ApiError(400, \"Invalid year value\");\r\n        }\r\n\r\n        const startDateCalc = new Date(yearNum, monthNum - 1, 1);\r\n        const endDateCalc = new Date(yearNum, monthNum, 0);\r\n        \r\n        // Add time to make sure we capture the full day\r\n        startDateCalc.setHours(0, 0, 0, 0);\r\n        endDateCalc.setHours(23, 59, 59, 999);\r\n        \r\n        filter.createdAt = {\r\n          $gte: startDateCalc,\r\n          $lte: endDateCalc\r\n        };\r\n\r\n        // Debug logging\r\n        console.log(\"Date Filter Applied:\");\r\n        console.log(\"Month:\", monthNum, \"Year:\", yearNum);\r\n        console.log(\"Start Date:\", startDateCalc);\r\n        console.log(\"End Date:\", endDateCalc);\r\n        console.log(\"Filter:\", JSON.stringify(filter.createdAt));\r\n      } else if (year && !month) {\r\n        const yearNum = parseInt(year as string);\r\n        if (isNaN(yearNum)) {\r\n          throw new ApiError(400, \"Invalid year value\");\r\n        }\r\n\r\n        const startDateCalc = new Date(yearNum, 0, 1, 0, 0, 0, 0);\r\n        const endDateCalc = new Date(yearNum, 11, 31, 23, 59, 59, 999);\r\n        \r\n        filter.createdAt = {\r\n          $gte: startDateCalc,\r\n          $lte: endDateCalc\r\n        };\r\n      } else if (month && !year) {\r\n        const monthNum = parseInt(month as string);\r\n        const currentYear = new Date().getFullYear();\r\n        \r\n        if (isNaN(monthNum) || monthNum < 1 || monthNum > 12) {\r\n          throw new ApiError(400, \"Invalid month value (1-12)\");\r\n        }\r\n\r\n        const startDateCalc = new Date(currentYear, monthNum - 1, 1, 0, 0, 0, 0);\r\n        const endDateCalc = new Date(currentYear, monthNum, 0, 23, 59, 59, 999);\r\n        \r\n        filter.createdAt = {\r\n          $gte: startDateCalc,\r\n          $lte: endDateCalc\r\n        };\r\n      }\r\n\r\n      // Salary range filter (using basicSalary)\r\n      if (minSalary || maxSalary) {\r\n        filter.basicSalary = {};\r\n        if (minSalary) {\r\n          const min = parseFloat(minSalary as string);\r\n          if (!isNaN(min)) filter.basicSalary.$gte = min;\r\n        }\r\n        if (maxSalary) {\r\n          const max = parseFloat(maxSalary as string);\r\n          if (!isNaN(max)) filter.basicSalary.$lte = max;\r\n        }\r\n      }\r\n\r\n      // Debug: Log the final filter\r\n      console.log(\"Final MongoDB Filter:\", JSON.stringify(filter, null, 2));\r\n\r\n      // Fetch filtered expenses with populated employee data\r\n      const expenses = await EmployeeExpense.find(filter)\r\n        .sort({ createdAt: -1 })\r\n        .populate<{ employee: IUser }>(\"employee\", \"firstName lastName\")\r\n        .lean();\r\n      console.log('====================================');\r\n      console.log(expenses);\r\n      console.log('====================================');\r\n      // Debug: Log results count and sample dates\r\n      console.log(`Found ${expenses.length} expenses`);\r\n      if (expenses.length > 0) {\r\n        console.log(\"Sample expense dates:\");\r\n        expenses.slice(0, 3).forEach((expense, i) => {\r\n          console.log(`${i + 1}. Created: ${expense.createdAt}, Updated: ${expense.updatedAt}`);\r\n        });\r\n      }\r\n\r\n      if (expenses.length === 0) {\r\n        // Instead of throwing an error, return an empty Excel file with headers\r\n        console.log(\"No expenses found - creating empty Excel file\");\r\n      }\r\n\r\n      // Create workbook and worksheet\r\n      const workbook = new ExcelJS.Workbook();\r\n      const worksheet = workbook.addWorksheet(\"Employee Expenses\");\r\n\r\n      // Define all columns\r\n      worksheet.columns = [\r\n        { header: \"SNO\", key: \"sno\", width: 5 },\r\n        { header: \"Employee\", key: \"employee\", width: 25 },\r\n        { header: \"Designation\", key: \"designation\", width: 20 },\r\n        { header: \"Country\", key: \"country\", width: 15 },\r\n        { header: \"Basic Salary\", key: \"basicSalary\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"Allowance\", key: \"allowance\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"Total Salary\", key: \"totalSalary\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"2 Year Salary\", key: \"twoYearSalary\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"Per Year Expenses\", key: \"perYearExpenses\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"Per Month Expenses\", key: \"perMonthExpenses\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"Per Day Expenses\", key: \"perDayExpenses\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"Total Expenses\", key: \"totalExpensesPerPerson\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"Visa Expenses\", key: \"visaExpenses\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"2 Year Uniform\", key: \"twoYearUniform\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"Shoes\", key: \"shoes\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"2 Year Accommodation\", key: \"twoYearAccommodation\", width: 20, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"SEWA Bills\", key: \"sewaBills\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"DEWA Bills\", key: \"dewaBills\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"Insurance\", key: \"insurance\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"Transport\", key: \"transport\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"Water\", key: \"water\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"3rd Party Liabilities\", key: \"thirdPartyLiabilities\", width: 20, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"Fairmont Certificate\", key: \"fairmontCertificate\", width: 20, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"Leave Salary\", key: \"leaveSalary\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"Ticket\", key: \"ticket\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { header: \"Gratuity\", key: \"gratuity\", width: 15, style: { numFmt: \"#,##0.00\" }},\r\n        { \r\n          header: \"Custom Expenses\", \r\n          key: \"customExpenses\", \r\n          width: 30,\r\n          style: { alignment: { wrapText: true } }\r\n        },\r\n        { header: \"Created Date\", key: \"createdAt\", width: 15, style: { numFmt: \"dd-mm-yyyy\" }}\r\n      ];\r\n\r\n      // Add data rows\r\n      expenses.forEach((expense, index) => {\r\n        const rowData = {\r\n          sno: index + 1,\r\n          employee: expense.employee \r\n            ? `${expense.employee.firstName} ${expense.employee.lastName}`\r\n            : 'N/A',\r\n          designation: expense.designation,\r\n          country: expense.country,\r\n          basicSalary: expense.basicSalary,\r\n          allowance: expense.allowance,\r\n          totalSalary: expense.totalSalary,\r\n          twoYearSalary: expense.twoYearSalary,\r\n          perYearExpenses: expense.perYearExpenses,\r\n          perMonthExpenses: expense.perMonthExpenses,\r\n          perDayExpenses: expense.perDayExpenses,\r\n          totalExpensesPerPerson: expense.totalExpensesPerPerson,\r\n          visaExpenses: expense.visaExpenses,\r\n          twoYearUniform: expense.twoYearUniform,\r\n          shoes: expense.shoes,\r\n          twoYearAccommodation: expense.twoYearAccommodation,\r\n          sewaBills: expense.sewaBills,\r\n          dewaBills: expense.dewaBills,\r\n          insurance: expense.insurance,\r\n          transport: expense.transport,\r\n          water: expense.water,\r\n          thirdPartyLiabilities: expense.thirdPartyLiabilities,\r\n          fairmontCertificate: expense.fairmontCertificate,\r\n          leaveSalary: expense.leaveSalary,\r\n          ticket: expense.ticket,\r\n          gratuity: expense.gratuity,\r\n          customExpenses: expense.customExpenses\r\n            ? expense.customExpenses.map(ce => `${ce.name}: ${ce.amount}`).join('\\n')\r\n            : 'None',\r\n          createdAt: expense.createdAt || expense.updatedAt\r\n        };\r\n\r\n        worksheet.addRow(rowData);\r\n      });\r\n\r\n      // Style header row\r\n      worksheet.getRow(1).eachCell((cell) => {\r\n        cell.font = { bold: true };\r\n        cell.fill = {\r\n          type: \"pattern\",\r\n          pattern: \"solid\",\r\n          fgColor: { argb: \"FFD3D3D3\" },\r\n        };\r\n        cell.border = {\r\n          top: { style: \"thin\" },\r\n          left: { style: \"thin\" },\r\n          bottom: { style: \"thin\" },\r\n          right: { style: \"thin\" },\r\n        };\r\n      });\r\n\r\n      // Freeze the header row\r\n      worksheet.views = [{ state: \"frozen\", ySplit: 1 }];\r\n\r\n      // Add summary/totals section if there are expenses\r\n      if (expenses.length > 0) {\r\n        const totalExpenses = expenses.reduce((sum, expense) => sum + (expense.totalExpensesPerPerson || 0), 0);\r\n        const totalBasicSalary = expenses.reduce((sum, expense) => sum + (expense.basicSalary || 0), 0);\r\n        const totalAllowance = expenses.reduce((sum, expense) => sum + (expense.allowance || 0), 0);\r\n\r\n        worksheet.addRow([]); // Empty row\r\n        const summaryRow = worksheet.addRow({\r\n          sno: \"\",\r\n          employee: \"TOTALS\",\r\n          designation: `${expenses.length} employees`,\r\n          basicSalary: totalBasicSalary,\r\n          allowance: totalAllowance,\r\n          totalExpensesPerPerson: totalExpenses\r\n        });\r\n\r\n        // Style summary row\r\n        summaryRow.eachCell((cell) => {\r\n          cell.font = { bold: true };\r\n          cell.fill = {\r\n            type: \"pattern\",\r\n            pattern: \"solid\",\r\n            fgColor: { argb: \"FFF2F2F2\" },\r\n          };\r\n        });\r\n      }\r\n\r\n      // Set response headers\r\n      res.setHeader(\r\n        \"Content-Type\",\r\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n      );\r\n      res.setHeader(\r\n        \"Content-Disposition\",\r\n        `attachment; filename=employee_expenses_${new Date().toISOString().split(\"T\")[0]}.xlsx`\r\n      );\r\n\r\n      // Write to response\r\n      await workbook.xlsx.write(res);\r\n      res.end();\r\n\r\n    } catch (error) {\r\n      console.error(\"Error exporting employee expenses:\", error);\r\n      throw new ApiError(500, \"Failed to generate Excel export\");\r\n    }\r\n  }\r\n);"]}