{"version":3,"file":"billController.js","sourceRoot":"","sources":["../../src/controllers/billController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { asyncHandler } from \"../utils/asyncHandler\";\r\nimport { ApiResponse } from \"../utils/apiHandlerHelpers\";\r\nimport { ApiError } from \"../utils/apiHandlerHelpers\";\r\nimport { Bill, BillType } from \"../models/billModel\";\r\nimport { Shop } from \"../models/shopModel\";\r\nimport { Vehicle } from \"../models/vehicleModel\";\r\nimport { Category } from \"../models/categoryModel\";\r\nimport {\r\n  handleMultipleFileUploads,\r\n  deleteFileFromS3,\r\n  getS3KeyFromUrl,\r\n} from \"../utils/uploadConf\";\r\nimport ExcelJS from \"exceljs\";\r\nimport { Types } from \"mongoose\";\r\n\r\nexport const createBill = asyncHandler(async (req: Request, res: Response) => {\r\n  const {\r\n    billType,\r\n    billDate,\r\n    paymentMethod,\r\n    amount,\r\n    category,\r\n    shop,\r\n    invoiceNo,\r\n    remarks,\r\n    description,\r\n    vehicle,\r\n    vehicles,\r\n    kilometer,\r\n    liter,\r\n    purpose,\r\n    roomNo,\r\n    note,\r\n  } = req.body;\r\n\r\n  if (!billType || !billDate || !paymentMethod || !amount) {\r\n    throw new ApiError(400, \"Required fields are missing\");\r\n  }\r\n\r\n  switch (billType) {\r\n    case \"general\":\r\n      if (!category || !shop) {\r\n        throw new ApiError(\r\n          400,\r\n          \"Category and shop are required for general bills\"\r\n        );\r\n      }\r\n      break;\r\n    case \"fuel\":\r\n      if (\r\n        !description ||\r\n        (!vehicle && (!vehicles || vehicles.length === 0)) ||\r\n        kilometer === undefined ||\r\n        liter === undefined\r\n      ) {\r\n        throw new ApiError(\r\n          400,\r\n          \"Description, vehicle(s), kilometer and liter are required for fuel bills\"\r\n        );\r\n      }\r\n      break;\r\n    case \"mess\":\r\n      if (!shop) {\r\n        throw new ApiError(400, \"Shop is required for mess bills\");\r\n      }\r\n      break;\r\n    case \"vehicle\":\r\n      if (!purpose || !vehicles || !shop) {\r\n        throw new ApiError(\r\n          400,\r\n          \"Purpose, vehicles and shop are required for vehicle bills\"\r\n        );\r\n      }\r\n      break;\r\n    case \"accommodation\":\r\n      if (!shop || !roomNo) {\r\n        throw new ApiError(\r\n          400,\r\n          \"Shop and roomNo are required for accommodation bills\"\r\n        );\r\n      }\r\n      break;\r\n    case \"commission\":\r\n      break;\r\n    default:\r\n      throw new ApiError(400, \"Invalid bill type\");\r\n  }\r\n\r\n  if (shop) {\r\n    const shopExists = await Shop.findById(shop);\r\n    if (!shopExists) {\r\n      throw new ApiError(404, \"Shop not found\");\r\n    }\r\n  }\r\n\r\n  if (category) {\r\n    const categoryExists = await Category.findById(category);\r\n    if (!categoryExists) {\r\n      throw new ApiError(404, \"Category not found\");\r\n    }\r\n  }\r\n\r\n  if (billType === \"fuel\") {\r\n    let vehicleIds = [];\r\n    if (vehicles && Array.isArray(vehicles)) {\r\n      vehicleIds = vehicles;\r\n    } else if (vehicle) {\r\n      vehicleIds = [vehicle];\r\n    }\r\n\r\n    if (vehicleIds.length > 0) {\r\n      const vehiclesExist = await Vehicle.find({ _id: { $in: vehicleIds } });\r\n      if (vehiclesExist.length !== vehicleIds.length) {\r\n        throw new ApiError(404, \"One or more vehicles not found\");\r\n      }\r\n    }\r\n  }\r\n\r\n  if (vehicle && billType !== \"fuel\") {\r\n    const vehicleExists = await Vehicle.findById(vehicle);\r\n    if (!vehicleExists) {\r\n      throw new ApiError(404, \"Vehicle not found\");\r\n    }\r\n  }\r\n\r\n  if (vehicles && vehicles.length > 0 && billType === \"vehicle\") {\r\n    const vehiclesExist = await Vehicle.find({ _id: { $in: vehicles } });\r\n    if (vehiclesExist.length !== vehicles.length) {\r\n      throw new ApiError(404, \"One or more vehicles not found\");\r\n    }\r\n  }\r\n\r\n  let attachments: Array<{\r\n    fileName: string;\r\n    fileType: string;\r\n    filePath: string;\r\n  }> = [];\r\n\r\n  const files = Array.isArray(req.files)\r\n    ? req.files\r\n    : req.files\r\n      ? Object.values(req.files).flat()\r\n      : [];\r\n\r\n  if (files.length > 0) {\r\n    const uploadResults = await handleMultipleFileUploads(files);\r\n    if (!uploadResults.success) {\r\n      throw new ApiError(500, \"Failed to upload bill attachments\");\r\n    }\r\n    attachments =\r\n      uploadResults.uploadData?.map((file) => ({\r\n        fileName: file.key.split(\"/\").pop() || \"attachment\",\r\n        fileType: file.mimetype,\r\n        filePath: file.url,\r\n      })) || [];\r\n  }\r\n\r\n  const billData: any = {\r\n    billType,\r\n    billDate: new Date(billDate),\r\n    paymentMethod,\r\n    amount,\r\n    attachments,\r\n    createdBy: req.user?.userId,\r\n    category,\r\n    shop,\r\n    invoiceNo,\r\n    remarks,\r\n    description,\r\n    kilometer,\r\n    liter,\r\n    purpose,\r\n    roomNo,\r\n    note,\r\n  };\r\n\r\n  if (billType === \"fuel\") {\r\n    if (vehicles && Array.isArray(vehicles)) {\r\n      billData.vehicles = vehicles;\r\n    } else if (vehicle) {\r\n      billData.vehicles = [vehicle];\r\n    }\r\n  } else if (billType === \"vehicle\") {\r\n    billData.vehicles = vehicles;\r\n  } else {\r\n    billData.vehicle = vehicle;\r\n  }\r\n\r\n  const bill = await Bill.create(billData);\r\n\r\n  res.status(201).json(new ApiResponse(201, bill, \"Bill created successfully\"));\r\n});\r\n\r\nexport const getBills = asyncHandler(async (req: Request, res: Response) => {\r\n    const page = parseInt(req.query.page as string) || 1;\r\n    const limit = parseInt(req.query.limit as string) || 10;\r\n    const skip = (page - 1) * limit;\r\n\r\n    const matchConditions: any = {};\r\n\r\n    // Bill type filter\r\n    if (req.query.billType) {\r\n        matchConditions.billType = req.query.billType;\r\n    }\r\n\r\n    // Date filters - Don't combine date range with month/year\r\n    if (req.query.startDate && req.query.endDate) {\r\n        const startDate = new Date(req.query.startDate as string);\r\n        const endDate = new Date(req.query.endDate as string);\r\n        endDate.setHours(23, 59, 59, 999);\r\n        \r\n        matchConditions.billDate = {\r\n            $gte: startDate,\r\n            $lte: endDate,\r\n        };\r\n    } else if (req.query.month && req.query.year) {\r\n        const month = parseInt(req.query.month as string) - 1;\r\n        const year = parseInt(req.query.year as string);\r\n        \r\n        const startOfMonth = new Date(year, month, 1);\r\n        startOfMonth.setHours(0, 0, 0, 0);\r\n        \r\n        const endOfMonth = new Date(year, month + 1, 0);\r\n        endOfMonth.setHours(23, 59, 59, 999);\r\n        \r\n        matchConditions.billDate = {\r\n            $gte: startOfMonth,\r\n            $lte: endOfMonth,\r\n        };\r\n    } else if (req.query.year && !req.query.month) {\r\n        const year = parseInt(req.query.year as string);\r\n        \r\n        const startOfYear = new Date(year, 0, 1);\r\n        startOfYear.setHours(0, 0, 0, 0);\r\n        \r\n        const endOfYear = new Date(year, 11, 31);\r\n        endOfYear.setHours(23, 59, 59, 999);\r\n        \r\n        matchConditions.billDate = {\r\n            $gte: startOfYear,\r\n            $lte: endOfYear,\r\n        };\r\n    }\r\n\r\n    // FIXED: Convert string IDs to ObjectId for proper matching\r\n    if (req.query.shop) {\r\n        try {\r\n            matchConditions.shop = new Types.ObjectId(req.query.shop as string);\r\n        } catch (error) {\r\n            throw new ApiError(400, \"Invalid shop ID format\");\r\n        }\r\n    }\r\n    \r\n    if (req.query.category) {\r\n        try {\r\n            matchConditions.category = new Types.ObjectId(req.query.category as string);\r\n        } catch (error) {\r\n            throw new ApiError(400, \"Invalid category ID format\");\r\n        }\r\n    }\r\n    \r\n    if (req.query.paymentMethod) {\r\n        matchConditions.paymentMethod = req.query.paymentMethod;\r\n    }\r\n    \r\n    if (req.query.vehicle) {\r\n        try {\r\n            const vehicleId = new Types.ObjectId(req.query.vehicle as string);\r\n            matchConditions.$or = [\r\n                { vehicle: vehicleId },\r\n                { vehicles: vehicleId },\r\n            ];\r\n        } catch (error) {\r\n            throw new ApiError(400, \"Invalid vehicle ID format\");\r\n        }\r\n    }\r\n\r\n    console.log('Match Conditions:', JSON.stringify(matchConditions, null, 2));\r\n\r\n    const pipeline: any[] = [];\r\n\r\n    if (Object.keys(matchConditions).length > 0) {\r\n        pipeline.push({ $match: matchConditions });\r\n    }\r\n\r\n    pipeline.push(\r\n        {\r\n            $lookup: {\r\n                from: \"shops\",\r\n                localField: \"shop\",\r\n                foreignField: \"_id\",\r\n                as: \"shopData\",\r\n            },\r\n        },\r\n        {\r\n            $lookup: {\r\n                from: \"vehicles\",\r\n                localField: \"vehicle\",\r\n                foreignField: \"_id\",\r\n                as: \"vehicleData\",\r\n            },\r\n        },\r\n        {\r\n            $lookup: {\r\n                from: \"vehicles\",\r\n                localField: \"vehicles\",\r\n                foreignField: \"_id\",\r\n                as: \"vehiclesData\",\r\n            },\r\n        },\r\n        {\r\n            $lookup: {\r\n                from: \"categories\",\r\n                localField: \"category\",\r\n                foreignField: \"_id\",\r\n                as: \"categoryData\",\r\n            },\r\n        },\r\n        {\r\n            $lookup: {\r\n                from: \"users\",\r\n                localField: \"createdBy\",\r\n                foreignField: \"_id\",\r\n                as: \"createdByData\",\r\n            },\r\n        }\r\n    );\r\n\r\n    if (req.query.search) {\r\n        const searchTerm = req.query.search as string;\r\n        const searchRegex = { $regex: searchTerm, $options: \"i\" };\r\n\r\n        pipeline.push({\r\n            $match: {\r\n                $or: [\r\n                    { invoiceNo: searchRegex },\r\n                    { description: searchRegex },\r\n                    { purpose: searchRegex },\r\n                    { remarks: searchRegex },\r\n                    { roomNo: searchRegex },\r\n                    { note: searchRegex },\r\n                    { \"shopData.shopName\": searchRegex },\r\n                    { \"shopData.shopNo\": searchRegex },\r\n                    { \"shopData.ownerName\": searchRegex },\r\n                    { \"vehicleData.vehicleNumber\": searchRegex },\r\n                    { \"vehicleData.make\": searchRegex },\r\n                    { \"vehicleData.vechicleModel\": searchRegex },\r\n                    { \"vehiclesData.vehicleNumber\": searchRegex },\r\n                    { \"vehiclesData.make\": searchRegex },\r\n                    { \"vehiclesData.vechicleModel\": searchRegex },\r\n                    { \"categoryData.name\": searchRegex },\r\n                    { \"categoryData.description\": searchRegex },\r\n                ],\r\n            },\r\n        });\r\n    }\r\n\r\n    pipeline.push({\r\n        $facet: {\r\n            data: [\r\n                { $sort: { billDate: -1 } },\r\n                { $skip: skip },\r\n                { $limit: limit },\r\n                {\r\n                    $project: {\r\n                        _id: 1,\r\n                        billType: 1,\r\n                        billDate: 1,\r\n                        paymentMethod: 1,\r\n                        amount: 1,\r\n                        attachments: 1,\r\n                        invoiceNo: 1,\r\n                        description: 1,\r\n                        purpose: 1,\r\n                        remarks: 1,\r\n                        roomNo: 1,\r\n                        note: 1,\r\n                        kilometer: 1,\r\n                        liter: 1,\r\n                        createdAt: 1,\r\n                        updatedAt: 1,\r\n                        category: {\r\n                            $arrayElemAt: [\r\n                                {\r\n                                    $map: {\r\n                                        input: \"$categoryData\",\r\n                                        as: \"cat\",\r\n                                        in: {\r\n                                            _id: \"$$cat._id\",\r\n                                            name: \"$$cat.name\",\r\n                                            description: \"$$cat.description\",\r\n                                        },\r\n                                    },\r\n                                },\r\n                                0,\r\n                            ],\r\n                        },\r\n                        shop: {\r\n                            $arrayElemAt: [\r\n                                {\r\n                                    $map: {\r\n                                        input: \"$shopData\",\r\n                                        as: \"shop\",\r\n                                        in: {\r\n                                            _id: \"$$shop._id\",\r\n                                            shopName: \"$$shop.shopName\",\r\n                                            shopNo: \"$$shop.shopNo\",\r\n                                            ownerName: \"$$shop.ownerName\",\r\n                                        },\r\n                                    },\r\n                                },\r\n                                0,\r\n                            ],\r\n                        },\r\n                        vehicle: {\r\n                            $arrayElemAt: [\r\n                                {\r\n                                    $map: {\r\n                                        input: \"$vehicleData\",\r\n                                        as: \"vehicle\",\r\n                                        in: {\r\n                                            _id: \"$$vehicle._id\",\r\n                                            vehicleNumber: \"$$vehicle.vehicleNumber\",\r\n                                            make: \"$$vehicle.make\",\r\n                                            vechicleModel: \"$$vehicle.vechicleModel\",\r\n                                        },\r\n                                    },\r\n                                },\r\n                                0,\r\n                            ],\r\n                        },\r\n                        vehicles: {\r\n                            $map: {\r\n                                input: \"$vehiclesData\",\r\n                                as: \"vehicle\",\r\n                                in: {\r\n                                    _id: \"$$vehicle._id\",\r\n                                    vehicleNumber: \"$$vehicle.vehicleNumber\",\r\n                                    make: \"$$vehicle.make\",\r\n                                    vechicleModel: \"$$vehicle.vechicleModel\",\r\n                                },\r\n                            },\r\n                        },\r\n                        createdBy: {\r\n                            $arrayElemAt: [\r\n                                {\r\n                                    $map: {\r\n                                        input: \"$createdByData\",\r\n                                        as: \"user\",\r\n                                        in: {\r\n                                            _id: \"$$user._id\",\r\n                                            firstName: \"$$user.firstName\",\r\n                                            lastName: \"$$user.lastName\",\r\n                                            email: \"$$user.email\",\r\n                                        },\r\n                                    },\r\n                                },\r\n                                0,\r\n                            ],\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n            totalCount: [{ $count: \"count\" }],\r\n            totalAmount: [{ $group: { _id: null, total: { $sum: \"$amount\" } } }],\r\n        },\r\n    });\r\n\r\n    const result = await Bill.aggregate(pipeline);\r\n    \r\n    const bills = result[0].data;\r\n    const total = result[0].totalCount[0]?.count || 0;\r\n    const totalAmount = result[0].totalAmount[0]?.total || 0;\r\n\r\n    console.log('Query Results:', {\r\n        totalBills: total,\r\n        returnedBills: bills.length,\r\n        totalAmount: totalAmount\r\n    });\r\n\r\n    res.status(200).json(\r\n        new ApiResponse(\r\n            200,\r\n            {\r\n                bills,\r\n                totalAmount,\r\n                pagination: {\r\n                    total,\r\n                    page,\r\n                    limit,\r\n                    totalPages: Math.ceil(total / limit),\r\n                    hasNextPage: page * limit < total,\r\n                    hasPreviousPage: page > 1,\r\n                },\r\n            },\r\n            \"Bills retrieved successfully\"\r\n        )\r\n    );\r\n});\r\n\r\nexport const getBill = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n\r\n  const bill = await Bill.findById(id)\r\n    .populate(\"category\", \"name description\")\r\n    .populate(\"shop\", \"shopName shopNo\")\r\n    .populate(\"vehicle\", \"vehicleNumber make model\")\r\n    .populate(\"vehicles\", \"vehicleNumber make model\")\r\n    .populate(\"createdBy\", \"firstName lastName email\");\r\n\r\n  if (!bill) {\r\n    throw new ApiError(404, \"Bill not found\");\r\n  }\r\n\r\n  res\r\n    .status(200)\r\n    .json(new ApiResponse(200, bill, \"Bill retrieved successfully\"));\r\n});\r\n\r\nexport const updateBill = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n  const updateData = req.body;\r\n\r\n  const bill = await Bill.findById(id);\r\n  if (!bill) {\r\n    throw new ApiError(404, \"Bill not found\");\r\n  }\r\n\r\n  if (updateData.shop) {\r\n    const shopExists = await Shop.findById(updateData.shop);\r\n    if (!shopExists) {\r\n      throw new ApiError(404, \"Shop not found\");\r\n    }\r\n  }\r\n\r\n  if (updateData.category) {\r\n    const categoryExists = await Category.findById(updateData.category);\r\n    if (!categoryExists) {\r\n      throw new ApiError(404, \"Category not found\");\r\n    }\r\n  }\r\n\r\n  if (bill.billType === \"fuel\") {\r\n    if (updateData.vehicles && updateData.vehicles.length > 0) {\r\n      const vehiclesExist = await Vehicle.find({\r\n        _id: { $in: updateData.vehicles },\r\n      });\r\n      if (vehiclesExist.length !== updateData.vehicles.length) {\r\n        throw new ApiError(404, \"One or more vehicles not found\");\r\n      }\r\n    } else if (updateData.vehicle) {\r\n      const vehicleExists = await Vehicle.findById(updateData.vehicle);\r\n      if (!vehicleExists) {\r\n        throw new ApiError(404, \"Vehicle not found\");\r\n      }\r\n      updateData.vehicles = [updateData.vehicle];\r\n      delete updateData.vehicle;\r\n    }\r\n  } else {\r\n    if (updateData.vehicle) {\r\n      const vehicleExists = await Vehicle.findById(updateData.vehicle);\r\n      if (!vehicleExists) {\r\n        throw new ApiError(404, \"Vehicle not found\");\r\n      }\r\n    }\r\n\r\n    if (updateData.vehicles && updateData.vehicles.length > 0) {\r\n      const vehiclesExist = await Vehicle.find({\r\n        _id: { $in: updateData.vehicles },\r\n      });\r\n      if (vehiclesExist.length !== updateData.vehicles.length) {\r\n        throw new ApiError(404, \"One or more vehicles not found\");\r\n      }\r\n    }\r\n  }\r\n\r\n  let newAttachments: Array<{\r\n    fileName: string;\r\n    fileType: string;\r\n    filePath: string;\r\n  }> = [];\r\n\r\n  const files = Array.isArray(req.files)\r\n    ? req.files\r\n    : req.files\r\n      ? Object.values(req.files).flat()\r\n      : [];\r\n\r\n  if (files.length > 0) {\r\n    const uploadResults = await handleMultipleFileUploads(files);\r\n    if (!uploadResults.success) {\r\n      throw new ApiError(500, \"Failed to upload new bill attachments\");\r\n    }\r\n    newAttachments =\r\n      uploadResults.uploadData?.map((file) => ({\r\n        fileName: file.key.split(\"/\").pop() || \"attachment\",\r\n        fileType: file.mimetype,\r\n        filePath: file.url,\r\n      })) || [];\r\n  }\r\n\r\n  if (\r\n    updateData.deletedAttachments &&\r\n    updateData.deletedAttachments.length > 0\r\n  ) {\r\n    await Promise.all(\r\n      updateData.deletedAttachments.map(async (attachmentId: string) => {\r\n        const attachment = bill.attachments.id(attachmentId);\r\n        if (attachment) {\r\n          try {\r\n            const key = getS3KeyFromUrl(attachment.filePath);\r\n            await deleteFileFromS3(key);\r\n            bill.attachments.pull(attachmentId);\r\n          } catch (error) {\r\n            console.error(\r\n              `Failed to delete file from S3: ${attachment.filePath}`,\r\n              error\r\n            );\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  const updatePayload: any = {\r\n    ...updateData,\r\n    $push: { attachments: { $each: newAttachments } },\r\n  };\r\n\r\n  if (updateData.billDate) {\r\n    updatePayload.billDate = new Date(updateData.billDate);\r\n  }\r\n\r\n  const updatedBill = await Bill.findByIdAndUpdate(id, updatePayload, {\r\n    new: true,\r\n  })\r\n    .populate(\"category\", \"name description\")\r\n    .populate(\"shop\", \"shopName shopNo\")\r\n    .populate(\"vehicle\", \"vehicleNumber make model\")\r\n    .populate(\"vehicles\", \"vehicleNumber make model\")\r\n    .populate(\"createdBy\", \"firstName lastName email\");\r\n\r\n  if (!updatedBill) {\r\n    throw new ApiError(500, \"Failed to update bill\");\r\n  }\r\n\r\n  res\r\n    .status(200)\r\n    .json(new ApiResponse(200, updatedBill, \"Bill updated successfully\"));\r\n});\r\n\r\nexport const deleteBill = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n\r\n  const bill = await Bill.findById(id);\r\n  if (!bill) {\r\n    throw new ApiError(404, \"Bill not found\");\r\n  }\r\n\r\n  if (bill.attachments && bill.attachments.length > 0) {\r\n    await Promise.all(\r\n      bill.attachments.map(async (attachment) => {\r\n        try {\r\n          const key = getS3KeyFromUrl(attachment.filePath);\r\n          await deleteFileFromS3(key);\r\n        } catch (error) {\r\n          console.error(\r\n            `Failed to delete file from S3: ${attachment.filePath}`,\r\n            error\r\n          );\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  await Bill.findByIdAndDelete(id);\r\n\r\n  res.status(200).json(new ApiResponse(200, null, \"Bill deleted successfully\"));\r\n});\r\n\r\nexport const getFinancialSummary = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { startDate, endDate, groupBy } = req.query;\r\n\r\n    const match: any = {};\r\n    if (startDate && endDate) {\r\n      match.billDate = {\r\n        $gte: new Date(startDate as string),\r\n        $lte: new Date(endDate as string),\r\n      };\r\n    }\r\n\r\n    let groupStage: any;\r\n    switch (groupBy) {\r\n      case \"month\":\r\n        groupStage = {\r\n          $group: {\r\n            _id: {\r\n              year: { $year: \"$billDate\" },\r\n              month: { $month: \"$billDate\" },\r\n              billType: \"$billType\",\r\n            },\r\n            totalAmount: { $sum: \"$amount\" },\r\n            count: { $sum: 1 },\r\n          },\r\n        };\r\n        break;\r\n      case \"billType\":\r\n        groupStage = {\r\n          $group: {\r\n            _id: \"$billType\",\r\n            totalAmount: { $sum: \"$amount\" },\r\n            count: { $sum: 1 },\r\n          },\r\n        };\r\n        break;\r\n      case \"category\":\r\n        groupStage = {\r\n          $group: {\r\n            _id: \"$category\",\r\n            totalAmount: { $sum: \"$amount\" },\r\n            count: { $sum: 1 },\r\n          },\r\n        };\r\n        break;\r\n      case \"shop\":\r\n        groupStage = {\r\n          $group: {\r\n            _id: \"$shop\",\r\n            totalAmount: { $sum: \"$amount\" },\r\n            count: { $sum: 1 },\r\n          },\r\n        };\r\n        break;\r\n      default:\r\n        groupStage = {\r\n          $group: {\r\n            _id: null,\r\n            totalAmount: { $sum: \"$amount\" },\r\n            count: { $sum: 1 },\r\n          },\r\n        };\r\n    }\r\n\r\n    const pipeline: any[] = [{ $match: match }, groupStage];\r\n\r\n    if (groupBy === \"shop\" || groupBy === \"category\") {\r\n      const lookupCollection = groupBy === \"shop\" ? \"shops\" : \"categories\";\r\n      const fieldName = groupBy === \"shop\" ? \"shopDetails\" : \"categoryDetails\";\r\n\r\n      pipeline.push({\r\n        $lookup: {\r\n          from: lookupCollection,\r\n          localField: \"_id\",\r\n          foreignField: \"_id\",\r\n          as: fieldName,\r\n        },\r\n      });\r\n      pipeline.push({ $unwind: `$${fieldName}` });\r\n\r\n      const projection: any = {\r\n        _id: 1,\r\n        totalAmount: 1,\r\n        count: 1,\r\n      };\r\n\r\n      if (groupBy === \"shop\") {\r\n        projection.shopName = `$${fieldName}.shopName`;\r\n        projection.shopNo = `$${fieldName}.shopNo`;\r\n      } else {\r\n        projection.categoryName = `$${fieldName}.name`;\r\n        projection.categoryDescription = `$${fieldName}.description`;\r\n      }\r\n\r\n      pipeline.push({ $project: projection });\r\n    }\r\n\r\n    pipeline.push({ $sort: { _id: 1 } });\r\n\r\n    const summary = await Bill.aggregate(pipeline);\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(\r\n          200,\r\n          summary,\r\n          \"Financial summary retrieved successfully\"\r\n        )\r\n      );\r\n  }\r\n);\r\n\r\nexport const getBillStatistics = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { startDate, endDate } = req.query;\r\n\r\n    const match: any = {};\r\n    if (startDate && endDate) {\r\n      match.billDate = {\r\n        $gte: new Date(startDate as string),\r\n        $lte: new Date(endDate as string),\r\n      };\r\n    }\r\n\r\n    const stats = await Bill.aggregate([\r\n      { $match: match },\r\n      {\r\n        $facet: {\r\n          totalAmount: [{ $group: { _id: null, total: { $sum: \"$amount\" } } }],\r\n          byType: [\r\n            { $group: { _id: \"$billType\", total: { $sum: \"$amount\" } } },\r\n          ],\r\n          byMonth: [\r\n            {\r\n              $group: {\r\n                _id: {\r\n                  year: { $year: \"$billDate\" },\r\n                  month: { $month: \"$billDate\" },\r\n                },\r\n                total: { $sum: \"$amount\" },\r\n              },\r\n            },\r\n            { $sort: { \"_id.year\": 1, \"_id.month\": 1 } },\r\n          ],\r\n          topCategories: [\r\n            {\r\n              $group: {\r\n                _id: \"$category\",\r\n                total: { $sum: \"$amount\" },\r\n                count: { $sum: 1 },\r\n              },\r\n            },\r\n            { $sort: { total: -1 } },\r\n            { $limit: 5 },\r\n            {\r\n              $lookup: {\r\n                from: \"categories\",\r\n                localField: \"_id\",\r\n                foreignField: \"_id\",\r\n                as: \"categoryDetails\",\r\n              },\r\n            },\r\n            { $unwind: \"$categoryDetails\" },\r\n            {\r\n              $project: {\r\n                _id: 1,\r\n                total: 1,\r\n                count: 1,\r\n                categoryName: \"$categoryDetails.name\",\r\n                categoryDescription: \"$categoryDetails.description\",\r\n              },\r\n            },\r\n          ],\r\n          topShops: [\r\n            {\r\n              $group: {\r\n                _id: \"$shop\",\r\n                total: { $sum: \"$amount\" },\r\n                count: { $sum: 1 },\r\n              },\r\n            },\r\n            { $sort: { total: -1 } },\r\n            { $limit: 5 },\r\n            {\r\n              $lookup: {\r\n                from: \"shops\",\r\n                localField: \"_id\",\r\n                foreignField: \"_id\",\r\n                as: \"shopDetails\",\r\n              },\r\n            },\r\n            { $unwind: \"$shopDetails\" },\r\n            {\r\n              $project: {\r\n                _id: 1,\r\n                total: 1,\r\n                count: 1,\r\n                shopName: \"$shopDetails.shopName\",\r\n                shopNo: \"$shopDetails.shopNo\",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    ]);\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(200, stats[0], \"Bill statistics retrieved successfully\")\r\n      );\r\n  }\r\n);\r\n\r\nexport const exportBillsToExcel = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const filter: any = {};\r\n\r\n    if (req.query.billType) {\r\n      filter.billType = req.query.billType;\r\n    }\r\n\r\n    if (req.query.startDate && req.query.endDate) {\r\n      const startDate = new Date(req.query.startDate as string);\r\n      const endDate = new Date(req.query.endDate as string);\r\n      \r\n      startDate.setHours(0, 0, 0, 0);\r\n      endDate.setHours(23, 59, 59, 999);\r\n      \r\n      filter.billDate = {\r\n        $gte: startDate,\r\n        $lte: endDate,\r\n      };\r\n    } else if (req.query.month && req.query.year) {\r\n      const month = parseInt(req.query.month as string) - 1;\r\n      const year = parseInt(req.query.year as string);\r\n      \r\n      const startOfMonth = new Date(year, month, 1);\r\n      startOfMonth.setHours(0, 0, 0, 0);\r\n      \r\n      const endOfMonth = new Date(year, month + 1, 0);\r\n      endOfMonth.setHours(23, 59, 59, 999);\r\n      \r\n      filter.billDate = {\r\n        $gte: startOfMonth,\r\n        $lte: endOfMonth,\r\n      };\r\n    } else if (req.query.year && !req.query.month) {\r\n      const year = parseInt(req.query.year as string);\r\n      \r\n      const startOfYear = new Date(year, 0, 1);\r\n      startOfYear.setHours(0, 0, 0, 0);\r\n      \r\n      const endOfYear = new Date(year, 11, 31);\r\n      endOfYear.setHours(23, 59, 59, 999);\r\n      \r\n      filter.billDate = {\r\n        $gte: startOfYear,\r\n        $lte: endOfYear,\r\n      };\r\n    }\r\n\r\n    // FIXED: Convert string IDs to ObjectId\r\n    if (req.query.shop) {\r\n      try {\r\n        filter.shop = new Types.ObjectId(req.query.shop as string);\r\n      } catch (error) {\r\n        throw new ApiError(400, \"Invalid shop ID format\");\r\n      }\r\n    }\r\n\r\n    if (req.query.category) {\r\n      try {\r\n        filter.category = new Types.ObjectId(req.query.category as string);\r\n      } catch (error) {\r\n        throw new ApiError(400, \"Invalid category ID format\");\r\n      }\r\n    }\r\n\r\n    if (req.query.paymentMethod) {\r\n      filter.paymentMethod = req.query.paymentMethod;\r\n    }\r\n\r\n    if (req.query.vehicle) {\r\n      try {\r\n        const vehicleId = new Types.ObjectId(req.query.vehicle as string);\r\n        filter.$or = [\r\n          { vehicle: vehicleId },\r\n          { vehicles: vehicleId },\r\n        ];\r\n      } catch (error) {\r\n        throw new ApiError(400, \"Invalid vehicle ID format\");\r\n      }\r\n    }\r\n\r\n    if (req.query.minAmount || req.query.maxAmount) {\r\n      filter.amount = {};\r\n      if (req.query.minAmount) {\r\n        filter.amount.$gte = parseFloat(req.query.minAmount as string);\r\n      }\r\n      if (req.query.maxAmount) {\r\n        filter.amount.$lte = parseFloat(req.query.maxAmount as string);\r\n      }\r\n    }\r\n\r\n    if (req.query.search) {\r\n      const searchFilters = [\r\n        { invoiceNo: { $regex: req.query.search, $options: \"i\" } },\r\n        { description: { $regex: req.query.search, $options: \"i\" } },\r\n        { purpose: { $regex: req.query.search, $options: \"i\" } },\r\n        { remarks: { $regex: req.query.search, $options: \"i\" } },\r\n      ];\r\n      \r\n      if (filter.$or) {\r\n        filter.$and = [\r\n          { $or: filter.$or },\r\n          { $or: searchFilters }\r\n        ];\r\n        delete filter.$or;\r\n      } else {\r\n        filter.$or = searchFilters;\r\n      }\r\n    }\r\n\r\n    console.log('Export Filter:', JSON.stringify(filter, null, 2));\r\n\r\n    const bills = await Bill.find(filter)\r\n      .sort({ billDate: -1 })\r\n      .populate<{\r\n        category: { name: string } | null,\r\n        shop: { shopName: string, shopNo: string } | null,\r\n        vehicle: { vehicleNumber: string } | null,\r\n        vehicles: { vehicleNumber: string }[],\r\n        createdBy: { firstName: string, lastName: string } | null\r\n      }>([\r\n        { path: 'category', select: 'name' },\r\n        { path: 'shop', select: 'shopName shopNo' },\r\n        { path: 'vehicle', select: 'vehicleNumber' },\r\n        { path: 'vehicles', select: 'vehicleNumber' },\r\n        { path: 'createdBy', select: 'firstName lastName' }\r\n      ]);\r\n\r\n    console.log('Bills found for export:', bills.length);\r\n\r\n    const workbook = new ExcelJS.Workbook();\r\n    const worksheet = workbook.addWorksheet(\"Bills\");\r\n\r\n    const billTypeColumns: Record<BillType, any[]> = {\r\n      general: [\r\n        { header: \"SNO\", key: \"sno\", width: 5 },\r\n        { header: \"DATE\", key: \"billDate\", width: 12, style: { numFmt: \"dd-mm-yyyy\" } },\r\n        { header: \"CATEGORY\", key: \"category\", width: 20 },\r\n        { header: \"SHOP NAME\", key: \"shopName\", width: 25 },\r\n        { header: \"SHOP NUMBER\", key: \"shopNo\", width: 15 },\r\n        { header: \"INVOICE NO\", key: \"invoiceNo\", width: 15 },\r\n        { header: \"PAYMENT METHOD\", key: \"paymentMethod\", width: 15 },\r\n        { header: \"AMOUNT\", key: \"amount\", width: 12, style: { numFmt: \"#,##0.00\" } },\r\n        { header: \"REMARKS\", key: \"remarks\", width: 30 }\r\n      ],\r\n      mess: [\r\n        { header: \"SNO\", key: \"sno\", width: 5 },\r\n        { header: \"DATE\", key: \"billDate\", width: 12, style: { numFmt: \"dd-mm-yyyy\" } },\r\n        { header: \"SHOP NAME\", key: \"shopName\", width: 25 },\r\n        { header: \"SHOP NUMBER\", key: \"shopNo\", width: 15 },\r\n        { header: \"INVOICE NO\", key: \"invoiceNo\", width: 15 },\r\n        { header: \"PAYMENT METHOD\", key: \"paymentMethod\", width: 15 },\r\n        { header: \"AMOUNT\", key: \"amount\", width: 12, style: { numFmt: \"#,##0.00\" } },\r\n        { header: \"REMARKS\", key: \"remarks\", width: 30 }\r\n      ],\r\n      accommodation: [\r\n        { header: \"SNO\", key: \"sno\", width: 5 },\r\n        { header: \"DATE\", key: \"billDate\", width: 12, style: { numFmt: \"dd-mm-yyyy\" } },\r\n        { header: \"CATEGORY\", key: \"category\", width: 20 },\r\n        { header: \"COMPANY NAME\", key: \"shopName\", width: 25 },\r\n        { header: \"ROOM NO\", key: \"roomNo\", width: 10 },\r\n        { header: \"INVOICE NO\", key: \"invoiceNo\", width: 15 },\r\n        { header: \"PAYMENT METHOD\", key: \"paymentMethod\", width: 15 },\r\n        { header: \"AMOUNT\", key: \"amount\", width: 12, style: { numFmt: \"#,##0.00\" } },\r\n        { header: \"NOTE\", key: \"note\", width: 30 },\r\n        { header: \"REMARKS\", key: \"remarks\", width: 30 }\r\n      ],\r\n      fuel: [\r\n        { header: \"SNO\", key: \"sno\", width: 5 },\r\n        { header: \"DATE\", key: \"billDate\", width: 12, style: { numFmt: \"dd-mm-yyyy\" } },\r\n        { header: \"DESCRIPTION\", key: \"description\", width: 30 },\r\n        { header: \"VEHICLE NO\", key: \"vehicles\", width: 20 },\r\n        { header: \"PAYMENT METHOD\", key: \"paymentMethod\", width: 15 },\r\n        { header: \"AMOUNT\", key: \"amount\", width: 12, style: { numFmt: \"#,##0.00\" } },\r\n        { header: \"KILO METERS\", key: \"kilometer\", width: 10 },\r\n        { header: \"LITER\", key: \"liter\", width: 10 },\r\n        { header: \"REMARKS\", key: \"remarks\", width: 30 }\r\n      ],\r\n      vehicle: [\r\n        { header: \"SNO\", key: \"sno\", width: 5 },\r\n        { header: \"DATE\", key: \"billDate\", width: 12, style: { numFmt: \"dd-mm-yyyy\" } },\r\n        { header: \"PURPOSE OF USE\", key: \"purpose\", width: 20 },\r\n        { header: \"VEHICLE NO\", key: \"vehicles\", width: 20 },\r\n        { header: \"INVOICE NO\", key: \"invoiceNo\", width: 15 },\r\n        { header: \"PAYMENT METHOD\", key: \"paymentMethod\", width: 15 },\r\n        { header: \"AMOUNT\", key: \"amount\", width: 12, style: { numFmt: \"#,##0.00\" } },\r\n        { header: \"SHOP NAME\", key: \"shopName\", width: 25 },\r\n        { header: \"LITER\", key: \"liter\", width: 10 },\r\n        { header: \"REMARKS\", key: \"remarks\", width: 30 }\r\n      ],\r\n      commission: [\r\n        { header: \"SNO\", key: \"sno\", width: 5 },\r\n        { header: \"DATE\", key: \"billDate\", width: 12, style: { numFmt: \"dd-mm-yyyy\" } },\r\n        { header: \"PAYMENT METHOD\", key: \"paymentMethod\", width: 15 },\r\n        { header: \"AMOUNT\", key: \"amount\", width: 12, style: { numFmt: \"#,##0.00\" } },\r\n        { header: \"REMARKS\", key: \"remarks\", width: 30 }\r\n      ]\r\n    };\r\n\r\n    let columns: any[] = [];\r\n    if (req.query.billType && typeof req.query.billType === \"string\") {\r\n      const billType = req.query.billType as BillType;\r\n      columns = billTypeColumns[billType];\r\n    } else {\r\n      const allColumns = Object.values(billTypeColumns).flat();\r\n      const uniqueColumns = allColumns.filter(\r\n        (col, index, self) => index === self.findIndex((c) => c.key === col.key)\r\n      );\r\n      columns = uniqueColumns;\r\n    }\r\n\r\n    worksheet.columns = columns;\r\n\r\n    bills.forEach((bill, index) => {\r\n      const rowData: any = {\r\n        sno: index + 1,\r\n        billDate: bill.billDate,\r\n        amount: bill.amount,\r\n        paymentMethod: bill.paymentMethod,\r\n        remarks: bill.remarks || \"\",\r\n      };\r\n\r\n      if (bill.shop && typeof bill.shop === 'object') {\r\n        rowData.shopName = bill.shop.shopName;\r\n        rowData.shopNo = bill.shop.shopNo;\r\n      }\r\n\r\n      switch (bill.billType) {\r\n        case \"general\":\r\n          rowData.category = bill.category && typeof bill.category === 'object'\r\n            ? bill.category.name\r\n            : \"\";\r\n          rowData.invoiceNo = bill.invoiceNo || \"\";\r\n          break;\r\n        case \"mess\":\r\n          rowData.invoiceNo = bill.invoiceNo || \"\";\r\n          break;\r\n        case \"accommodation\":\r\n          rowData.category = bill.category && typeof bill.category === 'object'\r\n            ? bill.category.name\r\n            : \"\";\r\n          rowData.roomNo = bill.roomNo || \"\";\r\n          rowData.note = bill.note || \"\";\r\n          rowData.invoiceNo = bill.invoiceNo || \"\";\r\n          break;\r\n        case \"fuel\":\r\n          rowData.description = bill.description || \"\";\r\n          rowData.vehicles = bill.vehicles && Array.isArray(bill.vehicles)\r\n            ? bill.vehicles.map(v => typeof v === 'object' ? v.vehicleNumber : \"\").join(\", \")\r\n            : \"\";\r\n          rowData.kilometer = bill.kilometer || \"\";\r\n          rowData.liter = bill.liter || \"\";\r\n          break;\r\n        case \"vehicle\":\r\n          rowData.purpose = bill.purpose || \"\";\r\n          rowData.vehicles = bill.vehicles && Array.isArray(bill.vehicles)\r\n            ? bill.vehicles.map(v => typeof v === 'object' ? v.vehicleNumber : \"\").join(\", \")\r\n            : \"\";\r\n          rowData.invoiceNo = bill.invoiceNo || \"\";\r\n          rowData.liter = bill.liter || \"\";\r\n          break;\r\n        case \"commission\":\r\n          break;\r\n      }\r\n\r\n      worksheet.addRow(rowData);\r\n    });\r\n\r\n    worksheet.getRow(1).eachCell((cell) => {\r\n      cell.font = { bold: true };\r\n      cell.fill = {\r\n        type: \"pattern\",\r\n        pattern: \"solid\",\r\n        fgColor: { argb: \"FFD3D3D3\" },\r\n      };\r\n      cell.border = {\r\n        top: { style: \"thin\" },\r\n        left: { style: \"thin\" },\r\n        bottom: { style: \"thin\" },\r\n        right: { style: \"thin\" },\r\n      };\r\n    });\r\n\r\n    worksheet.views = [{ state: \"frozen\", ySplit: 1 }];\r\n\r\n    res.setHeader(\r\n      \"Content-Type\",\r\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n    );\r\n    res.setHeader(\r\n      \"Content-Disposition\",\r\n      `attachment; filename=bills_export_${new Date().toISOString().split(\"T\")[0]}.xlsx`\r\n    );\r\n\r\n    await workbook.xlsx.write(res);\r\n    res.end();\r\n  }\r\n);"]}