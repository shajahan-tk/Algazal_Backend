{"version":3,"file":"billController.js","sourceRoot":"","sources":["../../src/controllers/billController.ts"],"names":[],"mappings":"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","sourcesContent":["  import { Request, Response } from \"express\";\r\n  import { asyncHandler } from \"../utils/asyncHandler\";\r\n  import { ApiResponse } from \"../utils/apiHandlerHelpers\";\r\n  import { ApiError } from \"../utils/apiHandlerHelpers\";\r\n  import { Bill, BillType } from \"../models/billModel\";\r\n  import { Shop } from \"../models/shopModel\";\r\n  import { Vehicle } from \"../models/vehicleModel\";\r\n  import { Category } from \"../models/categoryModel\";\r\n  import {\r\n    handleMultipleFileUploads,\r\n    deleteFileFromS3,\r\n    getS3KeyFromUrl,\r\n  } from \"../utils/uploadConf\";\r\n  import ExcelJS from \"exceljs\";\r\n\r\n\r\n  export const createBill = asyncHandler(async (req: Request, res: Response) => {\r\n    const {\r\n      billType,\r\n      billDate,\r\n      paymentMethod,\r\n      amount,\r\n      // General fields\r\n      category,\r\n      shop,\r\n      invoiceNo,\r\n      remarks,\r\n      // Fuel fields\r\n      description,\r\n      vehicle,\r\n      kilometer,\r\n      liter,\r\n      // Vehicle fields\r\n      purpose,\r\n      vehicles,\r\n      // Accommodation fields\r\n      roomNo,\r\n      note,\r\n    } = req.body;\r\n\r\n    // Validate required fields\r\n    if (!billType || !billDate || !paymentMethod || !amount) {\r\n      throw new ApiError(400, \"Required fields are missing\");\r\n    }\r\n\r\n    // Validate bill type specific fields\r\n    switch (billType) {\r\n      case \"general\":\r\n        if (!category || !shop) {\r\n          throw new ApiError(\r\n            400,\r\n            \"Category and shop are required for general bills\"\r\n          );\r\n        }\r\n        break;\r\n      case \"fuel\":\r\n        if (\r\n          !description ||\r\n          !vehicle ||\r\n          kilometer === undefined ||\r\n          liter === undefined\r\n        ) {\r\n          throw new ApiError(\r\n            400,\r\n            \"Description, vehicle, kilometer and liter are required for fuel bills\"\r\n          );\r\n        }\r\n        break;\r\n      case \"mess\":\r\n        if (!shop) {\r\n          throw new ApiError(400, \"Shop is required for mess bills\");\r\n        }\r\n        break;\r\n      case \"vehicle\":\r\n        if (!purpose || !vehicles || !shop) {\r\n          throw new ApiError(\r\n            400,\r\n            \"Purpose, vehicles and shop are required for vehicle bills\"\r\n          );\r\n        }\r\n        break;\r\n      case \"accommodation\":\r\n        if (!shop || !roomNo) {\r\n          throw new ApiError(\r\n            400,\r\n            \"Shop and roomNo are required for accommodation bills\"\r\n          );\r\n        }\r\n        break;\r\n      case \"commission\":\r\n        // No additional fields required for commission bills\r\n        break;\r\n      default:\r\n        throw new ApiError(400, \"Invalid bill type\");\r\n    }\r\n\r\n    // Check references\r\n    if (shop) {\r\n      const shopExists = await Shop.findById(shop);\r\n      if (!shopExists) {\r\n        throw new ApiError(404, \"Shop not found\");\r\n      }\r\n    }\r\n\r\n    if (category) {\r\n      const categoryExists = await Category.findById(category);\r\n      if (!categoryExists) {\r\n        throw new ApiError(404, \"Category not found\");\r\n      }\r\n    }\r\n\r\n    if (vehicle) {\r\n      const vehicleExists = await Vehicle.findById(vehicle);\r\n      if (!vehicleExists) {\r\n        throw new ApiError(404, \"Vehicle not found\");\r\n      }\r\n    }\r\n\r\n    if (vehicles && vehicles.length > 0) {\r\n      const vehiclesExist = await Vehicle.find({ _id: { $in: vehicles } });\r\n      if (vehiclesExist.length !== vehicles.length) {\r\n        throw new ApiError(404, \"One or more vehicles not found\");\r\n      }\r\n    }\r\n\r\n    // Handle file uploads with proper typing\r\n    let attachments: Array<{\r\n      fileName: string;\r\n      fileType: string;\r\n      filePath: string;\r\n    }> = [];\r\n\r\n    // Fix for req.files type issue\r\n    const files = Array.isArray(req.files)\r\n      ? req.files\r\n      : req.files\r\n      ? Object.values(req.files).flat()\r\n      : [];\r\n\r\n    if (files.length > 0) {\r\n      const uploadResults = await handleMultipleFileUploads(files);\r\n      if (!uploadResults.success) {\r\n        throw new ApiError(500, \"Failed to upload bill attachments\");\r\n      }\r\n      attachments =\r\n        uploadResults.uploadData?.map((file) => ({\r\n          fileName: file.key.split(\"/\").pop() || \"attachment\",\r\n          fileType: file.mimetype,\r\n          filePath: file.url,\r\n        })) || [];\r\n    }\r\n\r\n    // Create the bill with proper typing\r\n    const bill = await Bill.create({\r\n      billType,\r\n      billDate: new Date(billDate),\r\n      paymentMethod,\r\n      amount,\r\n      attachments,\r\n      createdBy: req.user?.userId,\r\n      // General fields\r\n      category,\r\n      shop,\r\n      invoiceNo,\r\n      remarks,\r\n      // Fuel fields\r\n      description,\r\n      vehicle,\r\n      kilometer,\r\n      liter,\r\n      // Vehicle fields\r\n      purpose,\r\n      vehicles,\r\n      // Accommodation fields\r\n      roomNo,\r\n      note,\r\n    });\r\n\r\n    res.status(201).json(new ApiResponse(201, bill, \"Bill created successfully\"));\r\n  });\r\n\r\n  // Get all bills with filters\r\n  export const getBills = asyncHandler(async (req: Request, res: Response) => {\r\n    const page = parseInt(req.query.page as string) || 1;\r\n    const limit = parseInt(req.query.limit as string) || 10;\r\n    const skip = (page - 1) * limit;\r\n\r\n    const filter: any = {};\r\n\r\n    // Bill type filter\r\n    if (req.query.billType) {\r\n      filter.billType = req.query.billType;\r\n    }\r\n\r\n    // Date range filter (takes precedence over year/month)\r\n    if (req.query.startDate && req.query.endDate) {\r\n      filter.billDate = {\r\n        $gte: new Date(req.query.startDate as string),\r\n        $lte: new Date(req.query.endDate as string),\r\n      };\r\n    } else {\r\n      // Year filter\r\n      if (req.query.year) {\r\n        const year = parseInt(req.query.year as string);\r\n        if (isNaN(year)) {\r\n          throw new ApiError(400, \"Invalid year value\");\r\n        }\r\n        filter.billDate = {\r\n          $gte: new Date(year, 0, 1),\r\n          $lte: new Date(year + 1, 0, 1),\r\n        };\r\n      }\r\n\r\n      // Month filter (works with year filter)\r\n      if (req.query.month) {\r\n        const month = parseInt(req.query.month as string);\r\n        if (isNaN(month) || month < 1 || month > 12) {\r\n          throw new ApiError(400, \"Invalid month value (1-12)\");\r\n        }\r\n\r\n        if (!filter.billDate) {\r\n          // If no year specified, use current year\r\n          const currentYear = new Date().getFullYear();\r\n          filter.billDate = {\r\n            $gte: new Date(currentYear, month - 1, 1),\r\n            $lt: new Date(currentYear, month, 1),\r\n          };\r\n        } else {\r\n          // Adjust existing year filter to specific month\r\n          const startDate = new Date(filter.billDate.$gte);\r\n          startDate.setMonth(month - 1);\r\n          startDate.setDate(1);\r\n\r\n          const endDate = new Date(startDate);\r\n          endDate.setMonth(month);\r\n\r\n          filter.billDate.$gte = startDate;\r\n          filter.billDate.$lte = endDate;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Shop filter\r\n    if (req.query.shop) {\r\n      filter.shop = req.query.shop;\r\n    }\r\n\r\n    // Category filter\r\n    if (req.query.category) {\r\n      filter.category = req.query.category;\r\n    }\r\n    if (req.query.paymentMethod) {\r\n      filter.paymentMethod = req.query.paymentMethod;\r\n    }\r\n\r\n    // Vehicle filter\r\n    if (req.query.vehicle) {\r\n      filter.$or = [\r\n        { vehicle: req.query.vehicle },\r\n        { vehicles: req.query.vehicle },\r\n      ];\r\n    }\r\n\r\n    // Amount range filter\r\n    if (req.query.minAmount || req.query.maxAmount) {\r\n      filter.amount = {};\r\n      if (req.query.minAmount) {\r\n        filter.amount.$gte = parseFloat(req.query.minAmount as string);\r\n      }\r\n      if (req.query.maxAmount) {\r\n        filter.amount.$lte = parseFloat(req.query.maxAmount as string);\r\n      }\r\n    }\r\n\r\n    // Search by invoice number or description\r\n    if (req.query.search) {\r\n      filter.$or = [\r\n        { invoiceNo: { $regex: req.query.search, $options: \"i\" } },\r\n        { description: { $regex: req.query.search, $options: \"i\" } },\r\n        { purpose: { $regex: req.query.search, $options: \"i\" } },\r\n      ];\r\n    }\r\n\r\n    const total = await Bill.countDocuments(filter);\r\n\r\n    // Calculate total amount of all matching bills\r\n    const totalAmountResult = await Bill.aggregate([\r\n      { $match: filter },\r\n      { $group: { _id: null, totalAmount: { $sum: \"$amount\" } } },\r\n    ]);\r\n    const totalAmount = totalAmountResult[0]?.totalAmount || 0;\r\n\r\n    const bills = await Bill.find(filter)\r\n      .skip(skip)\r\n      .limit(limit)\r\n      .sort({ billDate: -1 })\r\n      .populate(\"category\", \"name description\")\r\n      .populate(\"shop\", \"shopName shopNo\")\r\n      .populate(\"vehicle\", \"vehicleNumber make model\")\r\n      .populate(\"vehicles\", \"vehicleNumber make model\")\r\n      .populate(\"createdBy\", \"firstName lastName email\");\r\n\r\n    res.status(200).json(\r\n      new ApiResponse(\r\n        200,\r\n        {\r\n          bills,\r\n          totalAmount,\r\n          pagination: {\r\n            total,\r\n            page,\r\n            limit,\r\n            totalPages: Math.ceil(total / limit),\r\n            hasNextPage: page * limit < total,\r\n            hasPreviousPage: page > 1,\r\n          },\r\n        },\r\n        \"Bills retrieved successfully\"\r\n      )\r\n    );\r\n  });\r\n\r\n  // Get a single bill by ID\r\n  export const getBill = asyncHandler(async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n\r\n    const bill = await Bill.findById(id)\r\n      .populate(\"category\", \"name description\")\r\n      .populate(\"shop\", \"shopName shopNo\")\r\n      .populate(\"vehicle\", \"vehicleNumber make model\")\r\n      .populate(\"vehicles\", \"vehicleNumber make model\")\r\n      .populate(\"createdBy\", \"firstName lastName email\");\r\n\r\n    if (!bill) {\r\n      throw new ApiError(404, \"Bill not found\");\r\n    }\r\n\r\n    res\r\n      .status(200)\r\n      .json(new ApiResponse(200, bill, \"Bill retrieved successfully\"));\r\n  });\r\n\r\n  export const updateBill = asyncHandler(async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n    const updateData = req.body;\r\n\r\n    const bill = await Bill.findById(id);\r\n    if (!bill) {\r\n      throw new ApiError(404, \"Bill not found\");\r\n    }\r\n\r\n    // Check references if being updated\r\n    if (updateData.shop) {\r\n      const shopExists = await Shop.findById(updateData.shop);\r\n      if (!shopExists) {\r\n        throw new ApiError(404, \"Shop not found\");\r\n      }\r\n    }\r\n\r\n    if (updateData.category) {\r\n      const categoryExists = await Category.findById(updateData.category);\r\n      if (!categoryExists) {\r\n        throw new ApiError(404, \"Category not found\");\r\n      }\r\n    }\r\n\r\n    if (updateData.vehicle) {\r\n      const vehicleExists = await Vehicle.findById(updateData.vehicle);\r\n      if (!vehicleExists) {\r\n        throw new ApiError(404, \"Vehicle not found\");\r\n      }\r\n    }\r\n\r\n    if (updateData.vehicles && updateData.vehicles.length > 0) {\r\n      const vehiclesExist = await Vehicle.find({\r\n        _id: { $in: updateData.vehicles },\r\n      });\r\n      if (vehiclesExist.length !== updateData.vehicles.length) {\r\n        throw new ApiError(404, \"One or more vehicles not found\");\r\n      }\r\n    }\r\n\r\n    // Handle file uploads for new attachments\r\n    let newAttachments: Array<{\r\n      fileName: string;\r\n      fileType: string;\r\n      filePath: string;\r\n    }> = [];\r\n\r\n    // Fix for req.files type issue\r\n    const files = Array.isArray(req.files)\r\n      ? req.files\r\n      : req.files\r\n      ? Object.values(req.files).flat()\r\n      : [];\r\n\r\n    if (files.length > 0) {\r\n      const uploadResults = await handleMultipleFileUploads(files);\r\n      if (!uploadResults.success) {\r\n        throw new ApiError(500, \"Failed to upload new bill attachments\");\r\n      }\r\n      newAttachments =\r\n        uploadResults.uploadData?.map((file) => ({\r\n          fileName: file.key.split(\"/\").pop() || \"attachment\",\r\n          fileType: file.mimetype,\r\n          filePath: file.url,\r\n        })) || [];\r\n    }\r\n\r\n    // Handle attachment deletions if specified\r\n    if (\r\n      updateData.deletedAttachments &&\r\n      updateData.deletedAttachments.length > 0\r\n    ) {\r\n      await Promise.all(\r\n        updateData.deletedAttachments.map(async (attachmentId: string) => {\r\n          const attachment = bill.attachments.id(attachmentId);\r\n          if (attachment) {\r\n            try {\r\n              const key = getS3KeyFromUrl(attachment.filePath);\r\n              await deleteFileFromS3(key);\r\n              bill.attachments.pull(attachmentId);\r\n            } catch (error) {\r\n              console.error(\r\n                `Failed to delete file from S3: ${attachment.filePath}`,\r\n                error\r\n              );\r\n            }\r\n          }\r\n        })\r\n      );\r\n    }\r\n\r\n    // Prepare update payload\r\n    const updatePayload: any = {\r\n      ...updateData,\r\n      $push: { attachments: { $each: newAttachments } },\r\n    };\r\n\r\n    // Convert dates if they exist in updateData\r\n    if (updateData.billDate) {\r\n      updatePayload.billDate = new Date(updateData.billDate);\r\n    }\r\n\r\n    // Update the bill\r\n    const updatedBill = await Bill.findByIdAndUpdate(id, updatePayload, {\r\n      new: true,\r\n    })\r\n      .populate(\"category\", \"name description\")\r\n      .populate(\"shop\", \"shopName shopNo\")\r\n      .populate(\"vehicle\", \"vehicleNumber make model\")\r\n      .populate(\"vehicles\", \"vehicleNumber make model\")\r\n      .populate(\"createdBy\", \"firstName lastName email\");\r\n\r\n    if (!updatedBill) {\r\n      throw new ApiError(500, \"Failed to update bill\");\r\n    }\r\n\r\n    res\r\n      .status(200)\r\n      .json(new ApiResponse(200, updatedBill, \"Bill updated successfully\"));\r\n  });\r\n  // Delete a bill\r\n  export const deleteBill = asyncHandler(async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n\r\n    const bill = await Bill.findById(id);\r\n    if (!bill) {\r\n      throw new ApiError(404, \"Bill not found\");\r\n    }\r\n\r\n    // Delete all associated files from S3\r\n    if (bill.attachments && bill.attachments.length > 0) {\r\n      await Promise.all(\r\n        bill.attachments.map(async (attachment) => {\r\n          try {\r\n            const key = getS3KeyFromUrl(attachment.filePath);\r\n            await deleteFileFromS3(key);\r\n          } catch (error) {\r\n            console.error(\r\n              `Failed to delete file from S3: ${attachment.filePath}`,\r\n              error\r\n            );\r\n          }\r\n        })\r\n      );\r\n    }\r\n\r\n    await Bill.findByIdAndDelete(id);\r\n\r\n    res.status(200).json(new ApiResponse(200, null, \"Bill deleted successfully\"));\r\n  });\r\n\r\n  // Get financial summary\r\n  export const getFinancialSummary = asyncHandler(\r\n    async (req: Request, res: Response) => {\r\n      const { startDate, endDate, groupBy } = req.query;\r\n\r\n      const match: any = {};\r\n      if (startDate && endDate) {\r\n        match.billDate = {\r\n          $gte: new Date(startDate as string),\r\n          $lte: new Date(endDate as string),\r\n        };\r\n      }\r\n\r\n      let groupStage: any;\r\n      switch (groupBy) {\r\n        case \"month\":\r\n          groupStage = {\r\n            $group: {\r\n              _id: {\r\n                year: { $year: \"$billDate\" },\r\n                month: { $month: \"$billDate\" },\r\n                billType: \"$billType\",\r\n              },\r\n              totalAmount: { $sum: \"$amount\" },\r\n              count: { $sum: 1 },\r\n            },\r\n          };\r\n          break;\r\n        case \"billType\":\r\n          groupStage = {\r\n            $group: {\r\n              _id: \"$billType\",\r\n              totalAmount: { $sum: \"$amount\" },\r\n              count: { $sum: 1 },\r\n            },\r\n          };\r\n          break;\r\n        case \"category\":\r\n          groupStage = {\r\n            $group: {\r\n              _id: \"$category\",\r\n              totalAmount: { $sum: \"$amount\" },\r\n              count: { $sum: 1 },\r\n            },\r\n          };\r\n          break;\r\n        case \"shop\":\r\n          groupStage = {\r\n            $group: {\r\n              _id: \"$shop\",\r\n              totalAmount: { $sum: \"$amount\" },\r\n              count: { $sum: 1 },\r\n            },\r\n          };\r\n          break;\r\n        default:\r\n          groupStage = {\r\n            $group: {\r\n              _id: null,\r\n              totalAmount: { $sum: \"$amount\" },\r\n              count: { $sum: 1 },\r\n            },\r\n          };\r\n      }\r\n\r\n      const pipeline: any[] = [{ $match: match }, groupStage];\r\n\r\n      if (groupBy === \"shop\" || groupBy === \"category\") {\r\n        const lookupCollection = groupBy === \"shop\" ? \"shops\" : \"categories\";\r\n        const fieldName = groupBy === \"shop\" ? \"shopDetails\" : \"categoryDetails\";\r\n\r\n        pipeline.push({\r\n          $lookup: {\r\n            from: lookupCollection,\r\n            localField: \"_id\",\r\n            foreignField: \"_id\",\r\n            as: fieldName,\r\n          },\r\n        });\r\n        pipeline.push({ $unwind: `$${fieldName}` });\r\n\r\n        const projection: any = {\r\n          _id: 1,\r\n          totalAmount: 1,\r\n          count: 1,\r\n        };\r\n\r\n        if (groupBy === \"shop\") {\r\n          projection.shopName = `$${fieldName}.shopName`;\r\n          projection.shopNo = `$${fieldName}.shopNo`;\r\n        } else {\r\n          projection.categoryName = `$${fieldName}.name`;\r\n          projection.categoryDescription = `$${fieldName}.description`;\r\n        }\r\n\r\n        pipeline.push({ $project: projection });\r\n      }\r\n\r\n      pipeline.push({ $sort: { _id: 1 } });\r\n\r\n      const summary = await Bill.aggregate(pipeline);\r\n\r\n      res\r\n        .status(200)\r\n        .json(\r\n          new ApiResponse(\r\n            200,\r\n            summary,\r\n            \"Financial summary retrieved successfully\"\r\n          )\r\n        );\r\n    }\r\n  );\r\n\r\n  // Get bill statistics\r\n  export const getBillStatistics = asyncHandler(\r\n    async (req: Request, res: Response) => {\r\n      const { startDate, endDate } = req.query;\r\n\r\n      const match: any = {};\r\n      if (startDate && endDate) {\r\n        match.billDate = {\r\n          $gte: new Date(startDate as string),\r\n          $lte: new Date(endDate as string),\r\n        };\r\n      }\r\n\r\n      const stats = await Bill.aggregate([\r\n        { $match: match },\r\n        {\r\n          $facet: {\r\n            totalAmount: [{ $group: { _id: null, total: { $sum: \"$amount\" } } }],\r\n            byType: [\r\n              { $group: { _id: \"$billType\", total: { $sum: \"$amount\" } } },\r\n            ],\r\n            byMonth: [\r\n              {\r\n                $group: {\r\n                  _id: {\r\n                    year: { $year: \"$billDate\" },\r\n                    month: { $month: \"$billDate\" },\r\n                  },\r\n                  total: { $sum: \"$amount\" },\r\n                },\r\n              },\r\n              { $sort: { \"_id.year\": 1, \"_id.month\": 1 } },\r\n            ],\r\n            topCategories: [\r\n              {\r\n                $group: {\r\n                  _id: \"$category\",\r\n                  total: { $sum: \"$amount\" },\r\n                  count: { $sum: 1 },\r\n                },\r\n              },\r\n              { $sort: { total: -1 } },\r\n              { $limit: 5 },\r\n              {\r\n                $lookup: {\r\n                  from: \"categories\",\r\n                  localField: \"_id\",\r\n                  foreignField: \"_id\",\r\n                  as: \"categoryDetails\",\r\n                },\r\n              },\r\n              { $unwind: \"$categoryDetails\" },\r\n              {\r\n                $project: {\r\n                  _id: 1,\r\n                  total: 1,\r\n                  count: 1,\r\n                  categoryName: \"$categoryDetails.name\",\r\n                  categoryDescription: \"$categoryDetails.description\",\r\n                },\r\n              },\r\n            ],\r\n            topShops: [\r\n              {\r\n                $group: {\r\n                  _id: \"$shop\",\r\n                  total: { $sum: \"$amount\" },\r\n                  count: { $sum: 1 },\r\n                },\r\n              },\r\n              { $sort: { total: -1 } },\r\n              { $limit: 5 },\r\n              {\r\n                $lookup: {\r\n                  from: \"shops\",\r\n                  localField: \"_id\",\r\n                  foreignField: \"_id\",\r\n                  as: \"shopDetails\",\r\n                },\r\n              },\r\n              { $unwind: \"$shopDetails\" },\r\n              {\r\n                $project: {\r\n                  _id: 1,\r\n                  total: 1,\r\n                  count: 1,\r\n                  shopName: \"$shopDetails.shopName\",\r\n                  shopNo: \"$shopDetails.shopNo\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      ]);\r\n\r\n      res\r\n        .status(200)\r\n        .json(\r\n          new ApiResponse(200, stats[0], \"Bill statistics retrieved successfully\")\r\n        );\r\n    }\r\n  );\r\n\r\nexport const exportBillsToExcel = asyncHandler(\r\n    async (req: Request, res: Response) => {\r\n      const filter: any = {};\r\n\r\n      // Bill type filter\r\n      if (req.query.billType) {\r\n        filter.billType = req.query.billType;\r\n      }\r\n\r\n      // Date range filter\r\n      if (req.query.startDate && req.query.endDate) {\r\n        filter.billDate = {\r\n          $gte: new Date(req.query.startDate as string),\r\n          $lte: new Date(req.query.endDate as string),\r\n        };\r\n      }\r\n\r\n      // Shop filter\r\n      if (req.query.shop) {\r\n        filter.shop = req.query.shop;\r\n      }\r\n\r\n      // Category filter\r\n      if (req.query.category) {\r\n        filter.category = req.query.category;\r\n      }\r\n\r\n      // Payment method filter\r\n      if (req.query.paymentMethod) {\r\n        filter.paymentMethod = req.query.paymentMethod;\r\n      }\r\n\r\n      // Vehicle filter\r\n      if (req.query.vehicle) {\r\n        filter.$or = [\r\n          { vehicle: req.query.vehicle },\r\n          { vehicles: req.query.vehicle },\r\n        ];\r\n      }\r\n\r\n      // Amount range filter\r\n      if (req.query.minAmount || req.query.maxAmount) {\r\n        filter.amount = {};\r\n        if (req.query.minAmount) {\r\n          filter.amount.$gte = parseFloat(req.query.minAmount as string);\r\n        }\r\n        if (req.query.maxAmount) {\r\n          filter.amount.$lte = parseFloat(req.query.maxAmount as string);\r\n        }\r\n      }\r\n\r\n      // Search filter\r\n      if (req.query.search) {\r\n        filter.$or = [\r\n          { invoiceNo: { $regex: req.query.search, $options: \"i\" } },\r\n          { description: { $regex: req.query.search, $options: \"i\" } },\r\n          { purpose: { $regex: req.query.search, $options: \"i\" } },\r\n        ];\r\n      }\r\n\r\n      // Get all bills matching the filter with proper typing for populated fields\r\n      const bills = await Bill.find(filter)\r\n        .sort({ billDate: -1 })\r\n        .populate<{ \r\n          category: { name: string } | null,\r\n          shop: { shopName: string, shopNo: string } | null,\r\n          vehicle: { vehicleNumber: string } | null,\r\n          vehicles: { vehicleNumber: string }[],\r\n          createdBy: { firstName: string, lastName: string } | null\r\n        }>([\r\n          { path: 'category', select: 'name' },\r\n          { path: 'shop', select: 'shopName shopNo' },\r\n          { path: 'vehicle', select: 'vehicleNumber' },\r\n          { path: 'vehicles', select: 'vehicleNumber' },\r\n          { path: 'createdBy', select: 'firstName lastName' }\r\n        ]);\r\n\r\n      // Create a new workbook\r\n      const workbook = new ExcelJS.Workbook();\r\n      const worksheet = workbook.addWorksheet(\"Bills\");\r\n\r\n      // Define columns for each bill type\r\n      const billTypeColumns: Record<BillType, any[]> = {\r\n        general: [\r\n          { header: \"SNO\", key: \"sno\", width: 5 },\r\n          { header: \"DATE\", key: \"billDate\", width: 12, style: { numFmt: \"dd-mm-yyyy\" } },\r\n          { header: \"CATEGORY\", key: \"category\", width: 20 },\r\n          { header: \"SHOP NAME\", key: \"shopName\", width: 25 },\r\n          { header: \"SHOP NUMBER\", key: \"shopNo\", width: 15 },\r\n          { header: \"INVOICE NO\", key: \"invoiceNo\", width: 15 },\r\n          { header: \"PAYMENT METHOD\", key: \"paymentMethod\", width: 15 },\r\n          { header: \"AMOUNT\", key: \"amount\", width: 12, style: { numFmt: \"#,##0.00\" } },\r\n          { header: \"REMARKS\", key: \"remarks\", width: 30 }\r\n        ],\r\n        mess: [\r\n          { header: \"SNO\", key: \"sno\", width: 5 },\r\n          { header: \"DATE\", key: \"billDate\", width: 12, style: { numFmt: \"dd-mm-yyyy\" } },\r\n          { header: \"SHOP NAME\", key: \"shopName\", width: 25 },\r\n          { header: \"SHOP NUMBER\", key: \"shopNo\", width: 15 },\r\n          { header: \"INVOICE NO\", key: \"invoiceNo\", width: 15 },\r\n          { header: \"PAYMENT METHOD\", key: \"paymentMethod\", width: 15 },\r\n          { header: \"AMOUNT\", key: \"amount\", width: 12, style: { numFmt: \"#,##0.00\" } },\r\n          { header: \"REMARKS\", key: \"remarks\", width: 30 }\r\n        ],\r\n        accommodation: [\r\n          { header: \"SNO\", key: \"sno\", width: 5 },\r\n          { header: \"DATE\", key: \"billDate\", width: 12, style: { numFmt: \"dd-mm-yyyy\" } },\r\n          { header: \"CATEGORY\", key: \"category\", width: 20 },\r\n          { header: \"COMPANY NAME\", key: \"shopName\", width: 25 },\r\n          { header: \"ROOM NO\", key: \"roomNo\", width: 10 },\r\n          { header: \"INVOICE NO\", key: \"invoiceNo\", width: 15 },\r\n          { header: \"PAYMENT METHOD\", key: \"paymentMethod\", width: 15 },\r\n          { header: \"AMOUNT\", key: \"amount\", width: 12, style: { numFmt: \"#,##0.00\" } },\r\n          { header: \"NOTE\", key: \"note\", width: 30 },\r\n          { header: \"REMARKS\", key: \"remarks\", width: 30 }\r\n        ],\r\n        fuel: [\r\n          { header: \"SNO\", key: \"sno\", width: 5 },\r\n          { header: \"DATE\", key: \"billDate\", width: 12, style: { numFmt: \"dd-mm-yyyy\" } },\r\n          { header: \"DESCRIPTION\", key: \"description\", width: 30 },\r\n          { header: \"VEHICLE NO\", key: \"vehicle\", width: 15 },\r\n          { header: \"PAYMENT METHOD\", key: \"paymentMethod\", width: 15 },\r\n          { header: \"AMOUNT\", key: \"amount\", width: 12, style: { numFmt: \"#,##0.00\" } },\r\n          { header: \"KILO METERS\", key: \"kilometer\", width: 10 },\r\n          { header: \"LITER\", key: \"liter\", width: 10 },\r\n          { header: \"REMARKS\", key: \"remarks\", width: 30 }\r\n        ],\r\n        vehicle: [\r\n          { header: \"SNO\", key: \"sno\", width: 5 },\r\n          { header: \"DATE\", key: \"billDate\", width: 12, style: { numFmt: \"dd-mm-yyyy\" } },\r\n          { header: \"PURPOSE OF USE\", key: \"purpose\", width: 20 },\r\n          { header: \"VEHICLE NO\", key: \"vehicles\", width: 20 },\r\n          { header: \"INVOICE NO\", key: \"invoiceNo\", width: 15 },\r\n          { header: \"PAYMENT METHOD\", key: \"paymentMethod\", width: 15 },\r\n          { header: \"AMOUNT\", key: \"amount\", width: 12, style: { numFmt: \"#,##0.00\" } },\r\n          { header: \"SHOP NAME\", key: \"shopName\", width: 25 },\r\n          { header: \"LITER\", key: \"liter\", width: 10 },\r\n          { header: \"REMARKS\", key: \"remarks\", width: 30 }\r\n        ],\r\n        commission: [\r\n          { header: \"SNO\", key: \"sno\", width: 5 },\r\n          { header: \"DATE\", key: \"billDate\", width: 12, style: { numFmt: \"dd-mm-yyyy\" } },\r\n          { header: \"AMOUNT\", key: \"amount\", width: 12, style: { numFmt: \"#,##0.00\" } }\r\n        ]\r\n      };\r\n\r\n      // Determine which columns to use based on bill type filter\r\n      let columns: any[] = [];\r\n      if (req.query.billType && typeof req.query.billType === \"string\") {\r\n        const billType = req.query.billType as BillType;\r\n        columns = billTypeColumns[billType];\r\n      } else {\r\n        // If no bill type specified, use all possible columns (with unique keys)\r\n        const allColumns = Object.values(billTypeColumns).flat();\r\n        const uniqueColumns = allColumns.filter(\r\n          (col, index, self) => index === self.findIndex((c) => c.key === col.key)\r\n        );\r\n        columns = uniqueColumns;\r\n      }\r\n\r\n      // Set the worksheet columns\r\n      worksheet.columns = columns;\r\n\r\n      // Add data rows with proper typing for populated fields\r\n      bills.forEach((bill, index) => {\r\n        const rowData: any = {\r\n          sno: index + 1,\r\n          billDate: bill.billDate,\r\n          amount: bill.amount,\r\n          paymentMethod: bill.paymentMethod,\r\n          remarks: bill.remarks || \"\",\r\n        };\r\n\r\n        // Common fields\r\n        if (bill.shop && typeof bill.shop === 'object') {\r\n          rowData.shopName = bill.shop.shopName;\r\n          rowData.shopNo = bill.shop.shopNo;\r\n        }\r\n\r\n        // Type-specific fields\r\n        switch (bill.billType) {\r\n          case \"general\":\r\n            rowData.category = bill.category && typeof bill.category === 'object' \r\n              ? bill.category.name \r\n              : \"\";\r\n            rowData.invoiceNo = bill.invoiceNo || \"\";\r\n            break;\r\n          case \"mess\":\r\n            rowData.invoiceNo = bill.invoiceNo || \"\";\r\n            break;\r\n          case \"accommodation\":\r\n            rowData.category = bill.category && typeof bill.category === 'object' \r\n              ? bill.category.name \r\n              : \"\";\r\n            rowData.roomNo = bill.roomNo || \"\";\r\n            rowData.note = bill.note || \"\";\r\n            rowData.invoiceNo = bill.invoiceNo || \"\";\r\n            break;\r\n          case \"fuel\":\r\n            rowData.description = bill.description || \"\";\r\n            rowData.vehicle = bill.vehicle && typeof bill.vehicle === 'object'\r\n              ? bill.vehicle.vehicleNumber\r\n              : \"\";\r\n            rowData.kilometer = bill.kilometer || \"\";\r\n            rowData.liter = bill.liter || \"\";\r\n            break;\r\n          case \"vehicle\":\r\n            rowData.purpose = bill.purpose || \"\";\r\n            rowData.vehicles = bill.vehicles && Array.isArray(bill.vehicles)\r\n              ? bill.vehicles.map(v => typeof v === 'object' ? v.vehicleNumber : \"\").join(\", \")\r\n              : \"\";\r\n            rowData.invoiceNo = bill.invoiceNo || \"\";\r\n            rowData.liter = bill.liter || \"\";\r\n            break;\r\n          case \"commission\":\r\n            // Only basic fields needed\r\n            break;\r\n        }\r\n\r\n        worksheet.addRow(rowData);\r\n      });\r\n\r\n      // Style the header row\r\n      worksheet.getRow(1).eachCell((cell) => {\r\n        cell.font = { bold: true };\r\n        cell.fill = {\r\n          type: \"pattern\",\r\n          pattern: \"solid\",\r\n          fgColor: { argb: \"FFD3D3D3\" },\r\n        };\r\n        cell.border = {\r\n          top: { style: \"thin\" },\r\n          left: { style: \"thin\" },\r\n          bottom: { style: \"thin\" },\r\n          right: { style: \"thin\" },\r\n        };\r\n      });\r\n\r\n      // Freeze the header row\r\n      worksheet.views = [{ state: \"frozen\", ySplit: 1 }];\r\n\r\n      // Set response headers for Excel file download\r\n      res.setHeader(\r\n        \"Content-Type\",\r\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n      );\r\n      res.setHeader(\r\n        \"Content-Disposition\",\r\n        `attachment; filename=bills_export_${\r\n          new Date().toISOString().split(\"T\")[0]\r\n        }.xlsx`\r\n      );\r\n\r\n      // Write the workbook to the response\r\n      await workbook.xlsx.write(res);\r\n      res.end();\r\n    }\r\n  );"]}