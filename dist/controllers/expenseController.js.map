{"version":3,"file":"expenseController.js","sourceRoot":"","sources":["../../src/controllers/expenseController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { asyncHandler } from \"../utils/asyncHandler\";\r\nimport { ApiResponse } from \"../utils/apiHandlerHelpers\";\r\nimport { ApiError } from \"../utils/apiHandlerHelpers\";\r\nimport {\r\n  Expense,\r\n  IDriverLabor,\r\n  IMaterialItem,\r\n  IMiscellaneousExpense,\r\n  IWorkerLabor,\r\n} from \"../models/expenseModel\";\r\nimport { IProject, Project } from \"../models/projectModel\";\r\nimport { Attendance } from \"../models/attendanceModel\";\r\nimport { Types } from \"mongoose\";\r\nimport { deleteFileFromS3, uploadExpenseDocument } from \"../utils/uploadConf\";\r\nimport { Quotation } from \"../models/quotationModel\";\r\nimport { Estimation } from \"../models/estimationModel\";\r\nimport puppeteer from \"puppeteer\";\r\nimport { IUser } from \"../models/userModel\";\r\n\r\ninterface PopulatedUser {\r\n  _id: Types.ObjectId;\r\n  firstName: string;\r\n  lastName: string;\r\n  profileImage?: string;\r\n  salary?: number;\r\n}\r\n\r\ninterface MaterialInput {\r\n  description: string;\r\n  date?: Date;\r\n  invoiceNo: string;\r\n  amount: number;\r\n  supplierName?: string;\r\n  supplierMobile?: string;\r\n  supplierEmail?: string;\r\n  documentUrl?: string;\r\n  documentKey?: string;\r\n}\r\n\r\ninterface MiscellaneousInput {\r\n  description: string;\r\n  quantity: number;\r\n  unitPrice: number;\r\n  total: number;\r\n}\r\n\r\ninterface WorkerLabor {\r\n  user: Types.ObjectId;\r\n  firstName: string;\r\n  lastName: string;\r\n  profileImage?: string;\r\n  daysPresent: number;\r\n  dailySalary: number;\r\n  totalSalary: number;\r\n}\r\n\r\ninterface DriverLabor {\r\n  user: Types.ObjectId;\r\n  firstName: string;\r\n  lastName: string;\r\n  profileImage?: string;\r\n  daysPresent: number;\r\n  dailySalary: number;\r\n  totalSalary: number;\r\n}\r\n\r\nconst calculateLaborDetails = async (projectId: string) => {\r\n  const project = await Project.findById(projectId)\r\n    .populate<{ assignedWorkers: PopulatedUser[] }>(\r\n      \"assignedWorkers\",\r\n      \"firstName lastName profileImage salary\"\r\n    )\r\n    .populate<{ assignedDriver: PopulatedUser }>(\r\n      \"assignedDriver\",\r\n      \"firstName lastName profileImage salary\"\r\n    );\r\n\r\n  if (!project) {\r\n    throw new ApiError(404, \"Project not found\");\r\n  }\r\n\r\n  const workersToProcess = project.assignedWorkers || [];\r\n  const workerIds = workersToProcess.map((worker) => worker._id);\r\n\r\n  const workerAttendanceRecords = await Attendance.find({\r\n    project: projectId,\r\n    present: true,\r\n    user: { $in: workerIds },\r\n  }).populate<{ user: PopulatedUser }>(\"user\", \"firstName lastName\");\r\n\r\n  const workerDaysMap = new Map<string, number>();\r\n  workerAttendanceRecords.forEach((record) => {\r\n    const userIdStr = record.user._id.toString();\r\n    workerDaysMap.set(userIdStr, (workerDaysMap.get(userIdStr) || 0) + 1);\r\n  });\r\n\r\n  const projectAttendanceDates = await Attendance.aggregate([\r\n    {\r\n      $match: {\r\n        project: new Types.ObjectId(projectId),\r\n        present: true,\r\n      },\r\n    },\r\n    {\r\n      $group: {\r\n        _id: {\r\n          $dateToString: { format: \"%Y-%m-%d\", date: \"$date\" },\r\n        },\r\n      },\r\n    },\r\n    {\r\n      $count: \"uniqueDates\",\r\n    },\r\n  ]);\r\n\r\n  const driverDaysPresent = projectAttendanceDates[0]?.uniqueDates || 0;\r\n\r\n  const workers = workersToProcess.map((worker) => ({\r\n    user: worker._id,\r\n    firstName: worker.firstName,\r\n    lastName: worker.lastName,\r\n    profileImage: worker.profileImage,\r\n    daysPresent: workerDaysMap.get(worker._id.toString()) || 0,\r\n    dailySalary: worker.salary || 0,\r\n    totalSalary:\r\n      (workerDaysMap.get(worker._id.toString()) || 0) * (worker.salary || 0),\r\n  }));\r\n\r\n  const driver = project.assignedDriver\r\n    ? {\r\n        user: project.assignedDriver._id,\r\n        firstName: project.assignedDriver.firstName,\r\n        lastName: project.assignedDriver.lastName,\r\n        profileImage: project.assignedDriver.profileImage,\r\n        daysPresent: driverDaysPresent,\r\n        dailySalary: project.assignedDriver.salary || 0,\r\n        totalSalary: driverDaysPresent * (project.assignedDriver.salary || 0),\r\n      }\r\n    : {\r\n        user: new Types.ObjectId(),\r\n        firstName: \"No\",\r\n        lastName: \"Driver\",\r\n        daysPresent: 0,\r\n        dailySalary: 0,\r\n        totalSalary: 0,\r\n      };\r\n\r\n  const totalLaborCost =\r\n    workers.reduce((sum, worker) => sum + worker.totalSalary, 0) +\r\n    driver.totalSalary;\r\n\r\n  return {\r\n    workers,\r\n    driver,\r\n    totalLaborCost,\r\n  };\r\n};\r\n\r\nexport const getProjectLaborData = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { projectId } = req.params;\r\n    try {\r\n      const laborData = await calculateLaborDetails(projectId);\r\n      res\r\n        .status(200)\r\n        .json(\r\n          new ApiResponse(200, laborData, \"Labor data fetched successfully\")\r\n        );\r\n    } catch (error) {\r\n      throw new ApiError(500, \"Failed to fetch labor data\");\r\n    }\r\n  }\r\n);\r\n\r\nasync function processMaterialsWithFiles(\r\n  materials: MaterialInput[],\r\n  files: Express.Multer.File[],\r\n  prefix: string\r\n) {\r\n  const fileMap = new Map<number, Express.Multer.File>();\r\n  files.forEach((file) => {\r\n    const indexMatch = file.originalname.match(new RegExp(`${prefix}(\\\\d+)`));\r\n    if (indexMatch) {\r\n      fileMap.set(parseInt(indexMatch[1], 10), file);\r\n    }\r\n  });\r\n\r\n  return await Promise.all(\r\n    materials.map(async (material, index) => {\r\n      const processedMaterial = { ...material };\r\n\r\n      if (fileMap.has(index)) {\r\n        try {\r\n          const uploadResult = await uploadExpenseDocument(fileMap.get(index)!);\r\n          if (uploadResult.success) {\r\n            processedMaterial.documentUrl = uploadResult.uploadData?.url;\r\n            processedMaterial.documentKey = uploadResult.uploadData?.key;\r\n          }\r\n        } catch (uploadError) {\r\n          console.error(\r\n            `File upload error for material ${index}:`,\r\n            uploadError\r\n          );\r\n        }\r\n      }\r\n\r\n      return processedMaterial;\r\n    })\r\n  );\r\n}\r\n\r\nexport const createExpense = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { projectId } = req.params;\r\n    const userId = req.user?.userId;\r\n\r\n    if (!userId) {\r\n      throw new ApiError(401, \"Unauthorized\");\r\n    }\r\n\r\n    if (!req.body.materials || !req.body.miscellaneous) {\r\n      throw new ApiError(400, \"Materials and miscellaneous data are required\");\r\n    }\r\n\r\n    let materials: MaterialInput[];\r\n    let miscellaneous: MiscellaneousInput[];\r\n    try {\r\n      materials =\r\n        typeof req.body.materials === \"string\"\r\n          ? JSON.parse(req.body.materials)\r\n          : req.body.materials;\r\n      miscellaneous =\r\n        typeof req.body.miscellaneous === \"string\"\r\n          ? JSON.parse(req.body.miscellaneous)\r\n          : req.body.miscellaneous;\r\n    } catch (err) {\r\n      throw new ApiError(\r\n        400,\r\n        \"Invalid JSON format for materials or miscellaneous\"\r\n      );\r\n    }\r\n\r\n    const files = req.files as\r\n      | { [fieldname: string]: Express.Multer.File[] }\r\n      | undefined;\r\n    const materialFiles = files?.materialFiles ? [...files.materialFiles] : [];\r\n\r\n    try {\r\n      const laborDetails = await calculateLaborDetails(projectId);\r\n\r\n      const processedMaterials = await processMaterialsWithFiles(\r\n        materials,\r\n        materialFiles,\r\n        \"material-\"\r\n      );\r\n\r\n      const expense = await Expense.create({\r\n        project: projectId,\r\n        materials: processedMaterials,\r\n        miscellaneous,\r\n        laborDetails,\r\n        createdBy: new Types.ObjectId(userId),\r\n      });\r\n\r\n      return res\r\n        .status(201)\r\n        .json(new ApiResponse(201, expense, \"Expense created successfully\"));\r\n    } catch (error: any) {\r\n      console.error(\"Expense creation error:\", error);\r\n      const status = error instanceof ApiError ? error.statusCode : 500;\r\n      const message =\r\n        error instanceof Error ? error.message : \"Failed to create expense\";\r\n      throw new ApiError(status, message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getProjectExpenses = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { projectId } = req.params;\r\n    const page = parseInt(req.query.page as string) || 1;\r\n    const limit = parseInt(req.query.limit as string) || 10;\r\n    const skip = (page - 1) * limit;\r\n\r\n    const total = await Expense.countDocuments({ project: projectId });\r\n\r\n    const expenses = await Expense.find({ project: projectId })\r\n      .populate(\r\n        \"laborDetails.workers.user\",\r\n        \"firstName lastName profileImage salary\"\r\n      )\r\n      .populate(\r\n        \"laborDetails.driver.user\",\r\n        \"firstName lastName profileImage salary\"\r\n      )\r\n      .populate(\"createdBy\", \"firstName lastName\")\r\n      .skip(skip)\r\n      .limit(limit)\r\n      .sort({ createdAt: -1 });\r\n\r\n    const expensesWithDownloadUrls = expenses.map((expense) => ({\r\n      ...expense.toObject(),\r\n      materials: expense.materials.map((material) => ({\r\n        ...material,\r\n        documentDownloadUrl: material.documentKey\r\n          ? `${req.protocol}://${req.get(\"host\")}/api/expenses/document/${\r\n              material.documentKey\r\n            }`\r\n          : null,\r\n      })),\r\n    }));\r\n\r\n    res.status(200).json(\r\n      new ApiResponse(\r\n        200,\r\n        {\r\n          expenses: expensesWithDownloadUrls,\r\n          pagination: {\r\n            total,\r\n            page,\r\n            limit,\r\n            totalPages: Math.ceil(total / limit),\r\n            hasNextPage: page * limit < total,\r\n            hasPreviousPage: page > 1,\r\n          },\r\n        },\r\n        \"Expenses fetched successfully\"\r\n      )\r\n    );\r\n  }\r\n);\r\n\r\nexport const getExpenseById = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { expenseId } = req.params;\r\n\r\n    const expense = await Expense.findById(expenseId)\r\n      .populate(\r\n        \"laborDetails.workers.user\",\r\n        \"firstName lastName profileImage salary\"\r\n      )\r\n      .populate(\r\n        \"laborDetails.driver.user\",\r\n        \"firstName lastName profileImage salary\"\r\n      )\r\n      .populate(\"createdBy\", \"firstName lastName\")\r\n      .populate(\"project\", \"projectName projectNumber\");\r\n\r\n    if (!expense) {\r\n      throw new ApiError(404, \"Expense not found\");\r\n    }\r\n\r\n    const estimation = await Estimation.findOne({ project: expense.project });\r\n\r\n    const expenseWithDownloadUrls = {\r\n      ...expense.toObject(),\r\n      materials: expense.materials.map((material) => ({\r\n        ...material,\r\n        documentDownloadUrl: material.documentKey\r\n          ? `${req.protocol}://${req.get(\"host\")}/api/expenses/document/${\r\n              material.documentKey\r\n            }`\r\n          : null,\r\n      })),\r\n      quotation: await Quotation.findOne({ project: expense.project }).select(\r\n        \"netAmount\"\r\n      ),\r\n      commissionAmount: estimation?.commissionAmount || 0,\r\n    };\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(\r\n          200,\r\n          expenseWithDownloadUrls,\r\n          \"Expense fetched successfully\"\r\n        )\r\n      );\r\n  }\r\n);\r\n\r\nexport const updateExpense = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { expenseId } = req.params;\r\n    const { materials, miscellaneous } = req.body as {\r\n      materials: MaterialInput[];\r\n      miscellaneous: MiscellaneousInput[];\r\n    };\r\n    const files = req.files as {\r\n      materialFiles?: Express.Multer.File[];\r\n    };\r\n\r\n    if (\r\n      !materials ||\r\n      !Array.isArray(materials) ||\r\n      !miscellaneous ||\r\n      !Array.isArray(miscellaneous)\r\n    ) {\r\n      throw new ApiError(\r\n        400,\r\n        \"Materials and miscellaneous arrays are required\"\r\n      );\r\n    }\r\n\r\n    const existingExpense = await Expense.findById(expenseId);\r\n    if (!existingExpense) {\r\n      throw new ApiError(404, \"Expense not found\");\r\n    }\r\n\r\n    const laborDetails = await calculateLaborDetails(\r\n      existingExpense.project.toString()\r\n    );\r\n\r\n    // Process materials with documents\r\n    const processedMaterials = await Promise.all(\r\n      materials.map(async (material, index) => {\r\n        const materialData: any = {\r\n          description: material.description,\r\n          date: material.date || new Date(),\r\n          invoiceNo: material.invoiceNo,\r\n          amount: material.amount,\r\n          supplierName: material.supplierName || \"\",\r\n          supplierMobile: material.supplierMobile || \"\",\r\n          supplierEmail: material.supplierEmail || \"\",\r\n        };\r\n\r\n        if (files?.materialFiles?.[index]) {\r\n          if (existingExpense.materials[index]?.documentKey) {\r\n            await deleteFileFromS3(\r\n              existingExpense.materials[index].documentKey!\r\n            );\r\n          }\r\n\r\n          const uploadResult = await uploadExpenseDocument(\r\n            files.materialFiles[index]\r\n          );\r\n          if (!uploadResult.success) {\r\n            throw new ApiError(\r\n              500,\r\n              `Failed to upload document for material item ${index + 1}`\r\n            );\r\n          }\r\n          materialData.documentUrl = uploadResult.uploadData?.url;\r\n          materialData.documentKey = uploadResult.uploadData?.key;\r\n        } else if (existingExpense.materials[index]?.documentKey) {\r\n          materialData.documentUrl =\r\n            existingExpense.materials[index].documentUrl;\r\n          materialData.documentKey =\r\n            existingExpense.materials[index].documentKey;\r\n        }\r\n\r\n        return materialData;\r\n      })\r\n    );\r\n\r\n    const updatedExpense = await Expense.findByIdAndUpdate(\r\n      expenseId,\r\n      {\r\n        materials: processedMaterials,\r\n        miscellaneous,\r\n        laborDetails,\r\n        updatedAt: new Date(),\r\n      },\r\n      { new: true }\r\n    )\r\n      .populate(\r\n        \"laborDetails.workers.user\",\r\n        \"firstName lastName profileImage salary\"\r\n      )\r\n      .populate(\r\n        \"laborDetails.driver.user\",\r\n        \"firstName lastName profileImage salary\"\r\n      )\r\n      .populate(\"createdBy\", \"firstName lastName\");\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(200, updatedExpense, \"Expense updated successfully\")\r\n      );\r\n  }\r\n);\r\n\r\nexport const deleteExpense = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { expenseId } = req.params;\r\n\r\n    const expense = await Expense.findById(expenseId);\r\n    if (!expense) {\r\n      throw new ApiError(404, \"Expense not found\");\r\n    }\r\n\r\n    await Promise.all([\r\n      ...expense.materials.map(async (material) => {\r\n        if (material.documentKey) {\r\n          await deleteFileFromS3(material.documentKey);\r\n        }\r\n      }),\r\n    ]);\r\n\r\n    await Expense.findByIdAndDelete(expenseId);\r\n\r\n    res\r\n      .status(200)\r\n      .json(new ApiResponse(200, null, \"Expense deleted successfully\"));\r\n  }\r\n);\r\n\r\nexport const getExpenseSummary = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { projectId } = req.params;\r\n\r\n    const expenses = await Expense.find({ project: projectId });\r\n    const estimation = await Estimation.findOne({ project: projectId });\r\n\r\n    const summary = {\r\n      totalMaterialCost: expenses.reduce(\r\n        (sum, e) => sum + e.totalMaterialCost,\r\n        0\r\n      ),\r\n      totalMiscellaneousCost: expenses.reduce(\r\n        (sum, e) => sum + (e.totalMiscellaneousCost || 0),\r\n        0\r\n      ),\r\n      totalLaborCost: expenses.reduce(\r\n        (sum, e) => sum + e.laborDetails.totalLaborCost,\r\n        0\r\n      ),\r\n      workersCost: expenses.reduce(\r\n        (sum, e) =>\r\n          sum +\r\n          e.laborDetails.workers.reduce((wSum, w) => wSum + w.totalSalary, 0),\r\n        0\r\n      ),\r\n      driverCost: expenses.reduce(\r\n        (sum, e) => sum + e.laborDetails.driver.totalSalary,\r\n        0\r\n      ),\r\n      commissionAmount: estimation?.commissionAmount || 0,\r\n      totalExpenses: expenses.reduce(\r\n        (sum, e) =>\r\n          sum +\r\n          e.totalMaterialCost +\r\n          (e.totalMiscellaneousCost || 0) +\r\n          e.laborDetails.totalLaborCost,\r\n        0\r\n      ),\r\n    };\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(200, summary, \"Expense summary fetched successfully\")\r\n      );\r\n  }\r\n);\r\n\r\n\r\n\r\nexport const generateExpensePdf = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n\r\n    interface PopulatedExpense extends Document {\r\n      project: {\r\n        projectName: string;\r\n        projectNumber: string;\r\n      };\r\n      materials: {\r\n        description: string;\r\n        date: Date;\r\n        invoiceNo: string;\r\n        amount: number;\r\n        supplierName?: string;\r\n        supplierMobile?: string;\r\n        supplierEmail?: string;\r\n        documentUrl?: string;\r\n      }[];\r\n      totalMaterialCost: number;\r\n      miscellaneous: {\r\n        description: string;\r\n        quantity: number;\r\n        unitPrice: number;\r\n        total: number;\r\n      }[];\r\n      totalMiscellaneousCost: number;\r\n      laborDetails: {\r\n        workers: {\r\n          user: {\r\n            firstName: string;\r\n            lastName: string;\r\n          };\r\n          daysPresent: number;\r\n          dailySalary: number;\r\n          totalSalary: number;\r\n        }[];\r\n        driver: {\r\n          user: {\r\n            firstName: string;\r\n            lastName: string;\r\n          };\r\n          daysPresent: number;\r\n          dailySalary: number;\r\n          totalSalary: number;\r\n        };\r\n        totalLaborCost: number;\r\n      };\r\n      createdBy: {\r\n        firstName: string;\r\n        lastName: string;\r\n      };\r\n      createdAt?: Date;\r\n      updatedAt?: Date;\r\n    }\r\n\r\n    const expense = (await Expense.findById(id)\r\n      .populate<{ project: { projectName: string; projectNumber: string } }>(\r\n        \"project\",\r\n        \"projectName projectNumber\"\r\n      )\r\n      .populate<{ createdBy: { firstName: string; lastName: string } }>(\r\n        \"createdBy\",\r\n        \"firstName lastName\"\r\n      )\r\n      .populate(\"laborDetails.workers.user\", \"firstName lastName\")\r\n      .populate(\r\n        \"laborDetails.driver.user\",\r\n        \"firstName lastName\"\r\n      )) as unknown as PopulatedExpense;\r\n\r\n    if (!expense) {\r\n      throw new ApiError(404, \"Expense not found\");\r\n    }\r\n\r\n    const quotation = await Quotation.findOne({ project: expense.project });\r\n    const estimation = await Estimation.findOne({ project: expense.project });\r\n\r\n    const formatDate = (dateString: string | Date) => {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString(\"en-GB\", {\r\n        day: \"2-digit\",\r\n        month: \"short\",\r\n        year: \"numeric\",\r\n      });\r\n    };\r\n\r\n    const totalMaterialCost = expense.totalMaterialCost;\r\n    const totalMiscellaneousCost = expense.totalMiscellaneousCost || 0;\r\n    const totalLaborCost = expense.laborDetails.totalLaborCost;\r\n    const totalExpense =\r\n      totalMaterialCost + totalMiscellaneousCost + totalLaborCost;\r\n    const quotationAmount = quotation?.netAmount || 0;\r\n    const commissionAmount = estimation?.commissionAmount || 0;\r\n    const profit = quotationAmount - totalExpense - commissionAmount;\r\n    const profitPercentage = quotationAmount\r\n      ? (profit / quotationAmount) * 100\r\n      : 0;\r\n\r\n    let htmlContent = `\r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n      <style type=\"text/css\">\r\n        @page {\r\n          size: A4;\r\n          margin: 1cm;\r\n        }\r\n        body {\r\n          font-family: 'Arial', sans-serif;\r\n          font-size: 10pt;\r\n          line-height: 1.4;\r\n          color: #333;\r\n          margin: 0;\r\n          padding: 0;\r\n        }\r\n        .header {\r\n          text-align: center;\r\n          margin-bottom: 15px;\r\n        }\r\n        .logo {\r\n          height: 70px;\r\n          width: auto;\r\n        }\r\n        .document-title {\r\n          font-size: 14pt;\r\n          font-weight: bold;\r\n          margin: 5px 0;\r\n        }\r\n        .project-info {\r\n          font-size: 11pt;\r\n          margin-bottom: 10px;\r\n        }\r\n        .section {\r\n          margin-bottom: 15px;\r\n          page-break-inside: avoid;\r\n        }\r\n        .section-title {\r\n          font-size: 11pt;\r\n          font-weight: bold;\r\n          padding: 5px 0;\r\n          margin: 10px 0 5px 0;\r\n          border-bottom: 1px solid #ddd;\r\n        }\r\n        table {\r\n          width: 100%;\r\n          border-collapse: collapse;\r\n          margin-bottom: 15px;\r\n          page-break-inside: avoid;\r\n        }\r\n        th {\r\n          background-color: #f5f5f5;\r\n          font-weight: bold;\r\n          padding: 6px 8px;\r\n          text-align: left;\r\n          border: 1px solid #ddd;\r\n        }\r\n        td {\r\n          padding: 6px 8px;\r\n          border: 1px solid #ddd;\r\n          vertical-align: top;\r\n        }\r\n        .total-row {\r\n          font-weight: bold;\r\n        }\r\n        .text-right {\r\n          text-align: right;\r\n        }\r\n        .footer {\r\n          margin-top: 20px;\r\n          font-size: 9pt;\r\n          color: #777;\r\n          text-align: center;\r\n        }\r\n      </style>\r\n    </head>\r\n    <body>\r\n      <div class=\"header\">\r\n        <img class=\"logo\" src=\"https://agats.s3.ap-south-1.amazonaws.com/logo/logo.jpeg\" alt=\"Company Logo\">\r\n        <div class=\"document-title\">EXPENSE REPORT</div>\r\n        <div class=\"project-info\">${expense.project.projectName} (${\r\n      expense.project.projectNumber\r\n    })</div>\r\n      </div>\r\n\r\n      <div class=\"section\">\r\n        <div class=\"section-title\">MATERIAL EXPENSES</div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th width=\"5%\">No.</th>\r\n              <th width=\"25%\">Description</th>\r\n              <th width=\"12%\">Date</th>\r\n              <th width=\"15%\">Invoice No</th>\r\n              <th width=\"18%\">Supplier Name</th>\r\n              <th width=\"15%\">Supplier Mobile</th>\r\n              <th width=\"10%\" class=\"text-right\">Amount (AED)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            ${expense.materials\r\n              .map(\r\n                (material, index) => `\r\n              <tr>\r\n                <td>${index + 1}</td>\r\n                <td>${material.description}</td>\r\n                <td>${formatDate(material.date)}</td>\r\n                <td>${material.invoiceNo}</td>\r\n                <td>${material.supplierName || \"N/A\"}</td>\r\n                <td>${material.supplierMobile || \"N/A\"}</td>\r\n                <td class=\"text-right\">${material.amount.toFixed(2)}</td>\r\n              </tr>\r\n            `\r\n              )\r\n              .join(\"\")}\r\n            <tr class=\"total-row\">\r\n              <td colspan=\"6\">TOTAL MATERIAL COST</td>\r\n              <td class=\"text-right\">${totalMaterialCost.toFixed(2)}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div class=\"section\">\r\n        <div class=\"section-title\">MISCELLANEOUS EXPENSES</div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th width=\"5%\">No.</th>\r\n              <th width=\"40%\">Description</th>\r\n              <th width=\"15%\">Qty</th>\r\n              <th width=\"15%\">Unit Price</th>\r\n              <th width=\"25%\" class=\"text-right\">Amount (AED)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            ${expense.miscellaneous\r\n              .map(\r\n                (item, index) => `\r\n              <tr>\r\n                <td>${index + 1}</td>\r\n                <td>${item.description}</td>\r\n                <td>${item.quantity}</td>\r\n                <td>${item.unitPrice.toFixed(2)}</td>\r\n                <td class=\"text-right\">${item.total.toFixed(2)}</td>\r\n              </tr>\r\n            `\r\n              )\r\n              .join(\"\")}\r\n            <tr class=\"total-row\">\r\n              <td colspan=\"4\">TOTAL MISCELLANEOUS COST</td>\r\n              <td class=\"text-right\">${totalMiscellaneousCost.toFixed(2)}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div class=\"section\">\r\n        <div class=\"section-title\">LABOR DETAILS</div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th width=\"5%\">No.</th>\r\n              <th width=\"65%\">Description</th>\r\n              <th width=\"30%\" class=\"text-right\">Amount (AED)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>Technicians Expenses</td>\r\n              <td class=\"text-right\">${expense.laborDetails.workers\r\n                .reduce((sum, worker) => sum + worker.totalSalary, 0)\r\n                .toFixed(2)}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>2</td>\r\n              <td>Driver Expenses</td>\r\n              <td class=\"text-right\">${expense.laborDetails.driver.totalSalary.toFixed(\r\n                2\r\n              )}</td>\r\n            </tr>\r\n            <tr class=\"total-row\">\r\n              <td colspan=\"2\">TOTAL LABOR COST</td>\r\n              <td class=\"text-right\">${totalLaborCost.toFixed(2)}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div class=\"section\">\r\n        <div class=\"section-title\">SUMMARY</div>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Total Material Cost</td>\r\n              <td class=\"text-right\">${totalMaterialCost.toFixed(2)}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Total Miscellaneous Cost</td>\r\n              <td class=\"text-right\">${totalMiscellaneousCost.toFixed(2)}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Total Labor Cost</td>\r\n              <td class=\"text-right\">${totalLaborCost.toFixed(2)}</td>\r\n            </tr>\r\n            <tr class=\"total-row\">\r\n              <td>TOTAL EXPENSES</td>\r\n              <td class=\"text-right\">${totalExpense.toFixed(2)}</td>\r\n            </tr>\r\n            ${\r\n              quotation\r\n                ? `\r\n              <tr>\r\n                <td>Project Quotation Amount</td>\r\n                <td class=\"text-right\">${quotationAmount.toFixed(2)}</td>\r\n              </tr>\r\n              ${\r\n                commissionAmount > 0\r\n                  ? `<tr>\r\n                      <td>Commission Amount</td>\r\n                      <td class=\"text-right\">${commissionAmount.toFixed(2)}</td>\r\n                    </tr>`\r\n                  : \"\"\r\n              }\r\n              <tr class=\"total-row\">\r\n                <td>${profit >= 0 ? \"PROFIT\" : \"LOSS\"}</td>\r\n                <td class=\"text-right\">${profit.toFixed(\r\n                  2\r\n                )} (${profitPercentage.toFixed(2)}%)</td>\r\n              </tr>\r\n            `\r\n                : \"\"\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div class=\"footer\">\r\n        <p>Generated on ${formatDate(new Date())} by ${\r\n      expense.createdBy.firstName\r\n    } ${expense.createdBy.lastName}</p>\r\n      </div>\r\n    </body>\r\n    </html>\r\n    `;\r\n\r\n    const browser = await puppeteer.launch({\r\n      headless: \"shell\",\r\n      args: [\"--no-sandbox\", \"--disable-setuid-sandbox\"],\r\n    });\r\n\r\n    try {\r\n      const page = await browser.newPage();\r\n      await page.setContent(htmlContent, {\r\n        waitUntil: [\"load\", \"networkidle0\", \"domcontentloaded\"],\r\n        timeout: 30000,\r\n      });\r\n\r\n      const pdfBuffer = await page.pdf({\r\n        format: \"A4\",\r\n        printBackground: true,\r\n        margin: {\r\n          top: \"1cm\",\r\n          right: \"1cm\",\r\n          bottom: \"1cm\",\r\n          left: \"1cm\",\r\n        },\r\n      });\r\n\r\n      res.setHeader(\"Content-Type\", \"application/pdf\");\r\n      res.setHeader(\r\n        \"Content-Disposition\",\r\n        `attachment; filename=expense-report-${expense.project.projectNumber}.pdf`\r\n      );\r\n      res.send(pdfBuffer);\r\n    } catch (error) {\r\n      console.error(\"PDF generation error:\", error);\r\n      throw new ApiError(500, \"Failed to generate PDF\");\r\n    } finally {\r\n      await browser.close();\r\n    }\r\n  }\r\n);\r\n"]}