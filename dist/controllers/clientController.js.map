{"version":3,"file":"clientController.js","sourceRoot":"","sources":["../../src/controllers/clientController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { asyncHandler } from \"../utils/asyncHandler\";\r\nimport { ApiResponse } from \"../utils/apiHandlerHelpers\";\r\nimport { ApiError } from \"../utils/apiHandlerHelpers\";\r\nimport { Client } from \"../models/clientModel\";\r\n\r\nexport const createClient = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const {\r\n      clientName,\r\n      clientAddress,\r\n      pincode,\r\n      mobileNumber,\r\n      telephoneNumber,\r\n      trnNumber,\r\n      email,\r\n      accountNumber,\r\n      locations,\r\n    } = req.body;\r\n\r\n    // Validate required fields - only clientName is required\r\n    if (!clientName) {\r\n      throw new ApiError(400, \"Client name is required\");\r\n    }\r\n\r\n    // Check if TRN already exists (only if TRN is provided)\r\n    if (trnNumber) {\r\n      const existingClient = await Client.findOne({ trnNumber });\r\n      if (existingClient) {\r\n        throw new ApiError(400, \"Client with this TRN already exists\");\r\n      }\r\n    }\r\n\r\n    const client = await Client.create({\r\n      clientName,\r\n      clientAddress,\r\n      pincode,\r\n      mobileNumber,\r\n      telephoneNumber,\r\n      trnNumber,\r\n      email,\r\n      accountNumber,\r\n      locations,\r\n      createdBy: req.user?.userId,\r\n    });\r\n\r\n    res\r\n      .status(201)\r\n      .json(new ApiResponse(201, client, \"Client created successfully\"));\r\n  }\r\n);\r\n\r\nexport const getClients = asyncHandler(async (req: Request, res: Response) => {\r\n  const page = parseInt(req.query.page as string) || 1;\r\n  const limit = parseInt(req.query.limit as string) || 10;\r\n  const skip = (page - 1) * limit;\r\n\r\n  const filter: any = {};\r\n\r\n  // Search functionality\r\n  if (req.query.search) {\r\n    filter.$or = [\r\n      { clientName: { $regex: req.query.search, $options: \"i\" } },\r\n      { trnNumber: { $regex: req.query.search, $options: \"i\" } },\r\n      { mobileNumber: { $regex: req.query.search, $options: \"i\" } },\r\n      { pincode: { $regex: req.query.search, $options: \"i\" } },\r\n      { accountNumber: { $regex: req.query.search, $options: \"i\" } },\r\n    ];\r\n  }\r\n\r\n  // Filter by pincode if provided\r\n  if (req.query.pincode) {\r\n    filter.pincode = req.query.pincode;\r\n  }\r\n\r\n  const total = await Client.countDocuments(filter);\r\n  const clients = await Client.find(filter)\r\n    .skip(skip)\r\n    .limit(limit)\r\n    .sort({ createdAt: -1 })\r\n    .populate(\"createdBy\", \"firstName lastName email\");\r\n\r\n  res.status(200).json(\r\n    new ApiResponse(\r\n      200,\r\n      {\r\n        clients,\r\n        pagination: {\r\n          total,\r\n          page,\r\n          limit,\r\n          totalPages: Math.ceil(total / limit),\r\n          hasNextPage: page * limit < total,\r\n          hasPreviousPage: page > 1,\r\n        },\r\n      },\r\n      \"Clients retrieved successfully\"\r\n    )\r\n  );\r\n});\r\n\r\nexport const getClient = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n\r\n  const client = await Client.findById(id).populate(\r\n    \"createdBy\",\r\n    \"firstName lastName email\"\r\n  );\r\n  if (!client) {\r\n    throw new ApiError(404, \"Client not found\");\r\n  }\r\n\r\n  res\r\n    .status(200)\r\n    .json(new ApiResponse(200, client, \"Client retrieved successfully\"));\r\n});\r\n\r\nexport const updateClient = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n    const {\r\n      clientName,\r\n      clientAddress,\r\n      pincode,\r\n      mobileNumber,\r\n      telephoneNumber,\r\n      trnNumber,\r\n      email,\r\n      accountNumber,\r\n      locations,\r\n    } = req.body;\r\n\r\n    const client = await Client.findById(id);\r\n    if (!client) {\r\n      throw new ApiError(404, \"Client not found\");\r\n    }\r\n\r\n    // Validate pincode format if provided\r\n    if (pincode && !/^[0-9]{6}$/.test(pincode)) {\r\n      throw new ApiError(400, \"Pincode must be 6 digits\");\r\n    }\r\n\r\n    // Check if TRN is being updated and conflicts with other clients\r\n    if (trnNumber && trnNumber !== client.trnNumber) {\r\n      const existingClient = await Client.findOne({\r\n        trnNumber,\r\n        _id: { $ne: id },\r\n      });\r\n\r\n      if (existingClient) {\r\n        throw new ApiError(400, \"Another client already uses this TRN\");\r\n      }\r\n    }\r\n\r\n    const updatedClient = await Client.findByIdAndUpdate(\r\n      id,\r\n      {\r\n        clientName: clientName || client.clientName,\r\n        clientAddress: clientAddress || client.clientAddress,\r\n        pincode: pincode || client.pincode,\r\n        mobileNumber: mobileNumber || client.mobileNumber,\r\n        telephoneNumber:\r\n          telephoneNumber !== undefined\r\n            ? telephoneNumber\r\n            : client.telephoneNumber,\r\n        trnNumber: trnNumber || client.trnNumber,\r\n        email: email || client.email,\r\n        accountNumber:\r\n          accountNumber !== undefined ? accountNumber : client.accountNumber,\r\n        locations: locations !== undefined ? locations : client.locations,\r\n      },\r\n      { new: true }\r\n    );\r\n\r\n    res\r\n      .status(200)\r\n      .json(new ApiResponse(200, updatedClient, \"Client updated successfully\"));\r\n  }\r\n);\r\n\r\nexport const deleteClient = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n\r\n    const client = await Client.findByIdAndDelete(id);\r\n    if (!client) {\r\n      throw new ApiError(404, \"Client not found\");\r\n    }\r\n\r\n    res\r\n      .status(200)\r\n      .json(new ApiResponse(200, null, \"Client deleted successfully\"));\r\n  }\r\n);\r\n\r\nexport const getClientByTrn = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { trnNumber } = req.params;\r\n\r\n    const client = await Client.findOne({ trnNumber }).populate(\r\n      \"createdBy\",\r\n      \"firstName lastName email\"\r\n    );\r\n    if (!client) {\r\n      throw new ApiError(404, \"Client not found\");\r\n    }\r\n\r\n    res\r\n      .status(200)\r\n      .json(new ApiResponse(200, client, \"Client retrieved successfully\"));\r\n  }\r\n);\r\n\r\nexport const getClientsByPincode = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { pincode } = req.params;\r\n    const page = parseInt(req.query.page as string) || 1;\r\n    const limit = parseInt(req.query.limit as string) || 10;\r\n    const skip = (page - 1) * limit;\r\n\r\n    if (!/^[0-9]{6}$/.test(pincode)) {\r\n      throw new ApiError(400, \"Invalid pincode format\");\r\n    }\r\n\r\n    const total = await Client.countDocuments({ pincode });\r\n    const clients = await Client.find({ pincode })\r\n      .skip(skip)\r\n      .limit(limit)\r\n      .sort({ clientName: 1 })\r\n      .populate(\"createdBy\", \"firstName lastName email\");\r\n\r\n    res.status(200).json(\r\n      new ApiResponse(\r\n        200,\r\n        {\r\n          clients,\r\n          pagination: {\r\n            total,\r\n            page,\r\n            limit,\r\n            totalPages: Math.ceil(total / limit),\r\n            hasNextPage: page * limit < total,\r\n            hasPreviousPage: page > 1,\r\n          },\r\n        },\r\n        \"Clients retrieved successfully\"\r\n      )\r\n    );\r\n  }\r\n);\r\n\r\n// Additional helper functions for locations/buildings/apartments\r\nexport const addLocationToClient = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n    const { name } = req.body;\r\n\r\n    if (!name) {\r\n      throw new ApiError(400, \"Location name is required\");\r\n    }\r\n\r\n    const client = await Client.findByIdAndUpdate(\r\n      id,\r\n      { $push: { locations: { name } } },\r\n      { new: true }\r\n    );\r\n\r\n    if (!client) {\r\n      throw new ApiError(404, \"Client not found\");\r\n    }\r\n\r\n    res\r\n      .status(200)\r\n      .json(new ApiResponse(200, client, \"Location added successfully\"));\r\n  }\r\n);\r\n\r\nexport const addBuildingToLocation = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { clientId, locationId } = req.params;\r\n    const { name } = req.body;\r\n\r\n    if (!name) {\r\n      throw new ApiError(400, \"Building name is required\");\r\n    }\r\n\r\n    const client = await Client.findById(clientId);\r\n    if (!client) {\r\n      throw new ApiError(404, \"Client not found\");\r\n    }\r\n\r\n    const location = client.locations.id(locationId);\r\n    if (!location) {\r\n      throw new ApiError(404, \"Location not found\");\r\n    }\r\n\r\n    location.buildings.push({ name, apartments: [] });\r\n    await client.save();\r\n\r\n    res\r\n      .status(200)\r\n      .json(new ApiResponse(200, client, \"Building added successfully\"));\r\n  }\r\n);\r\n\r\nexport const addApartmentToBuilding = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { clientId, locationId, buildingId } = req.params;\r\n    const { number } = req.body;\r\n\r\n    if (!number) {\r\n      throw new ApiError(400, \"Apartment number is required\");\r\n    }\r\n\r\n    const client = await Client.findById(clientId);\r\n    if (!client) {\r\n      throw new ApiError(404, \"Client not found\");\r\n    }\r\n\r\n    const location = client.locations.id(locationId);\r\n    if (!location) {\r\n      throw new ApiError(404, \"Location not found\");\r\n    }\r\n\r\n    const building = location.buildings.id(buildingId);\r\n    if (!building) {\r\n      throw new ApiError(404, \"Building not found\");\r\n    }\r\n\r\n    building.apartments.push({ number });\r\n    await client.save();\r\n\r\n    res\r\n      .status(200)\r\n      .json(new ApiResponse(200, client, \"Apartment added successfully\"));\r\n  }\r\n);"]}