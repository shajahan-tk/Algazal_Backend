{"version":3,"file":"estimationController.js","sourceRoot":"","sources":["../../src/controllers/estimationController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { asyncHandler } from \"../utils/asyncHandler\";\r\nimport { ApiResponse } from \"../utils/apiHandlerHelpers\";\r\nimport { ApiError } from \"../utils/apiHandlerHelpers\";\r\nimport { Estimation, IEstimation } from \"../models/estimationModel\";\r\nimport { IProject, Project } from \"../models/projectModel\";\r\nimport { Types } from \"mongoose\";\r\nimport puppeteer from \"puppeteer\";\r\nimport { Client, IClient } from \"../models/clientModel\";\r\nimport { Comment } from \"../models/commentModel\";\r\nimport { IUser, User } from \"../models/userModel\";\r\nimport { mailer } from \"../utils/mailer\";\r\nimport { generateRelatedDocumentNumber } from \"../utils/documentNumbers\";\r\nimport { EstimationTemplateParams } from \"../template/estimationCheckedEmailTemplate\";\r\nimport { FRONTEND_URL } from \"../config/constant\";\r\nimport { Quotation } from \"../models/quotationModel\";\r\n\r\nexport const createEstimation = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const {\r\n      project,\r\n      workStartDate,\r\n      workEndDate,\r\n      validUntil,\r\n      paymentDueBy,\r\n      materials,\r\n      labour,\r\n      termsAndConditions,\r\n      commissionAmount,\r\n      subject,\r\n    } = req.body;\r\n\r\n    // Validate required fields\r\n    if (\r\n      !project ||\r\n      !workStartDate ||\r\n      !workEndDate ||\r\n      !validUntil ||\r\n      !paymentDueBy\r\n    ) {\r\n      throw new ApiError(400, \"Required fields are missing\");\r\n    }\r\n\r\n    // Check if an estimation already exists for this project\r\n    const existingEstimation = await Estimation.findOne({ project });\r\n    if (existingEstimation) {\r\n      throw new ApiError(\r\n        400,\r\n        \"Only one estimation is allowed per project. Update the existing estimation instead.\"\r\n      );\r\n    }\r\n\r\n    // Validate materials (now with UOM)\r\n    if (materials && materials.length > 0) {\r\n      for (const item of materials) {\r\n        if (\r\n          !item.description ||\r\n          !item.uom ||\r\n          item.quantity == null ||\r\n          item.unitPrice == null\r\n        ) {\r\n          throw new ApiError(\r\n            400,\r\n            \"Material items require description, uom, quantity, and unitPrice\"\r\n          );\r\n        }\r\n        item.total = item.quantity * item.unitPrice;\r\n      }\r\n    }\r\n\r\n    // Validate labour\r\n    if (labour && labour.length > 0) {\r\n      for (const item of labour) {\r\n        if (!item.designation || item.days == null || item.price == null) {\r\n          throw new ApiError(\r\n            400,\r\n            \"Labour items require designation, days, and price\"\r\n          );\r\n        }\r\n        item.total = item.days * item.price;\r\n      }\r\n    }\r\n\r\n    // Validate terms (now with UOM)\r\n    if (termsAndConditions && termsAndConditions.length > 0) {\r\n      for (const item of termsAndConditions) {\r\n        if (\r\n          !item.description ||\r\n          item.quantity == null ||\r\n          item.unitPrice == null\r\n        ) {\r\n          throw new ApiError(\r\n            400,\r\n            \"Terms items require description, uom, quantity, and unitPrice\"\r\n          );\r\n        }\r\n        item.total = item.quantity * item.unitPrice;\r\n      }\r\n    }\r\n\r\n    // At least one item is required\r\n    if (\r\n      (!materials || materials.length === 0) &&\r\n      (!labour || labour.length === 0) &&\r\n      (!termsAndConditions || termsAndConditions.length === 0)\r\n    ) {\r\n      throw new ApiError(\r\n        400,\r\n        \"At least one item (materials, labour, or terms) is required\"\r\n      );\r\n    }\r\n\r\n    const estimation = await Estimation.create({\r\n      project,\r\n      estimationNumber: await generateRelatedDocumentNumber(project, \"EST\"),\r\n      workStartDate: new Date(workStartDate),\r\n      workEndDate: new Date(workEndDate),\r\n      validUntil: new Date(validUntil),\r\n      paymentDueBy,\r\n      materials: materials || [],\r\n      labour: labour || [],\r\n      termsAndConditions: termsAndConditions || [],\r\n      commissionAmount,\r\n      preparedBy: req.user?.userId,\r\n      subject: subject,\r\n    });\r\n\r\n    await Project.findByIdAndUpdate(project, {\r\n      status: \"estimation_prepared\",\r\n    });\r\n\r\n    res\r\n      .status(201)\r\n      .json(\r\n        new ApiResponse(201, estimation, \"Estimation created successfully\")\r\n      );\r\n  }\r\n);\r\n\r\nexport const approveEstimation = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n    const { comment, isApproved } = req.body;\r\n    const userId = req.user?.userId;\r\n\r\n    // Validate input\r\n    if (!userId) throw new ApiError(401, \"Unauthorized\");\r\n    if (typeof isApproved !== \"boolean\") {\r\n      throw new ApiError(400, \"isApproved must be a boolean\");\r\n    }\r\n\r\n    // Convert userId to ObjectId\r\n    const userIdObject = new Types.ObjectId(userId);\r\n\r\n    // Define populated types\r\n    type PopulatedEstimation = Omit<IEstimation, \"project\"> & {\r\n      project: IProject;\r\n    };\r\n\r\n    type PopulatedProject = Omit<IProject, \"assignedTo\"> & {\r\n      assignedTo?: {\r\n        _id: Types.ObjectId;\r\n        email?: string;\r\n        firstName?: string;\r\n        lastName?: string;\r\n      };\r\n    };\r\n\r\n    const estimation = await Estimation.findById(id).populate<{\r\n      project: IProject;\r\n    }>(\"project\");\r\n    if (!estimation) throw new ApiError(404, \"Estimation not found\");\r\n\r\n    // Check prerequisites\r\n    if (!estimation.isChecked) {\r\n      throw new ApiError(\r\n        400,\r\n        \"Estimation must be checked before approval/rejection\"\r\n      );\r\n    }\r\n    if (estimation.isApproved && isApproved) {\r\n      throw new ApiError(400, \"Estimation is already approved\");\r\n    }\r\n\r\n    // Create activity log\r\n    await Comment.create({\r\n      content: comment || `Estimation ${isApproved ? \"approved\" : \"rejected\"}`,\r\n      user: userIdObject,\r\n      project: estimation.project,\r\n      actionType: isApproved ? \"approval\" : \"rejection\",\r\n    });\r\n\r\n    // Update estimation\r\n    estimation.isApproved = isApproved;\r\n    estimation.approvedBy = isApproved ? userIdObject : undefined;\r\n    estimation.approvalComment = comment;\r\n    await estimation.save();\r\n\r\n    // Update project status\r\n    await Project.findByIdAndUpdate(estimation.project, {\r\n      status: isApproved ? \"quotation_approved\" : \"quotation_rejected\",\r\n      updatedBy: userIdObject,\r\n    });\r\n\r\n    try {\r\n      // Get all recipients (assigned engineer + admins + super_admins)\r\n      const project = await Project.findById(estimation.project).populate<{\r\n        assignedTo: Pick<IUser, \"_id\" | \"email\" | \"firstName\" | \"lastName\">;\r\n      }>(\"assignedTo\", \"email firstName lastName\");\r\n\r\n      const assignedEngineer = project?.assignedTo;\r\n\r\n      const admins = await User.find({\r\n        role: { $in: [\"admin\", \"super_admin\"] },\r\n        email: { $exists: true, $ne: \"\" },\r\n      });\r\n\r\n      // Get the user who performed the approval\r\n      const approver = await User.findById(userIdObject);\r\n\r\n      // Prepare recipient list\r\n      const recipients = [];\r\n\r\n      // Add assigned engineer if exists\r\n      if (assignedEngineer?.email) {\r\n        recipients.push({\r\n          email: assignedEngineer.email,\r\n          name: assignedEngineer.firstName || \"Engineer\",\r\n        });\r\n      }\r\n\r\n      // Add admins and super admins\r\n      admins.forEach((admin) => {\r\n        recipients.push({\r\n          email: admin.email,\r\n          name: admin.firstName || \"Admin\",\r\n        });\r\n      });\r\n\r\n      // Remove duplicates\r\n      const uniqueRecipients = recipients.filter(\r\n        (recipient, index, self) =>\r\n          index === self.findIndex((r) => r.email === recipient.email)\r\n      );\r\n\r\n      // Prepare email content\r\n      const templateParams: EstimationTemplateParams = {\r\n        userName: \"Team\",\r\n        actionUrl: `${FRONTEND_URL}/app/project-view/${estimation.project._id}`,\r\n        contactEmail: \"info@alghzal.ae\",\r\n        logoUrl:\r\n          \"https://krishnadas-test-1.s3.ap-south-1.amazonaws.com/alghazal/logo+alghazal.png\",\r\n        estimationNumber: estimation.estimationNumber,\r\n        checkerName: approver\r\n          ? `${approver.firstName} ${approver.lastName}`\r\n          : \"an approver\",\r\n        projectName: estimation.project.projectName || \"the project\",\r\n        dueDate: estimation.validUntil?.toLocaleDateString(),\r\n      };\r\n\r\n      // Send email to all recipients\r\n      await mailer.sendEmail({\r\n        to: process.env.NOTIFICATION_INBOX || \"notifications@company.com\",\r\n        bcc: uniqueRecipients.map((r) => r.email).join(\",\"),\r\n        subject: `Estimation ${isApproved ? \"Approved\" : \"Rejected\"}: ${\r\n          estimation.estimationNumber\r\n        }`,\r\n        templateParams: templateParams, // Just pass the templateParams without content\r\n        text: `Dear Team,\\n\\nEstimation ${\r\n          estimation.estimationNumber\r\n        } for project ${templateParams.projectName} has been ${\r\n          isApproved ? \"approved\" : \"rejected\"\r\n        } by ${templateParams.checkerName}.\\n\\nView project: ${\r\n          templateParams.actionUrl\r\n        }\\n\\nBest regards,\\nTECHNICAL SERVICE TEAM`,\r\n        headers: {\r\n          \"X-Priority\": \"1\",\r\n          Importance: \"high\",\r\n        },\r\n      });\r\n    } catch (emailError) {\r\n      console.error(\"Failed to send notification emails:\", emailError);\r\n      // Continue even if email fails\r\n    }\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(\r\n          200,\r\n          estimation,\r\n          `Estimation ${isApproved ? \"approved\" : \"rejected\"} successfully`\r\n        )\r\n      );\r\n  }\r\n);\r\n\r\nexport const markAsChecked = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n    const { comment, isChecked } = req.body;\r\n    const userId = req.user?.userId;\r\n\r\n    // Validate input\r\n    if (!userId) throw new ApiError(401, \"Unauthorized\");\r\n    if (typeof isChecked !== \"boolean\") {\r\n      throw new ApiError(400, \"isChecked must be a boolean\");\r\n    }\r\n\r\n    const estimation = await Estimation.findById(id).populate(\"project\");\r\n    if (!estimation) throw new ApiError(404, \"Estimation not found\");\r\n\r\n    // Check prerequisites\r\n    if (estimation.isChecked && isChecked) {\r\n      throw new ApiError(400, \"Estimation is already checked\");\r\n    }\r\n\r\n    // Convert userId to ObjectId\r\n    const userIdObject = new Types.ObjectId(userId);\r\n\r\n    // Create activity log\r\n    await Comment.create({\r\n      content:\r\n        comment ||\r\n        `Estimation ${isChecked ? \"checked\" : \"rejected during check\"}`,\r\n      user: userIdObject,\r\n      project: estimation.project,\r\n      actionType: isChecked ? \"check\" : \"rejection\",\r\n    });\r\n\r\n    // Update estimation\r\n    estimation.isChecked = isChecked;\r\n    estimation.checkedBy = isChecked ? userIdObject : undefined;\r\n    if (comment) estimation.approvalComment = comment;\r\n    await estimation.save();\r\n\r\n    // Update project status if rejected\r\n    if (!isChecked) {\r\n      await Project.findByIdAndUpdate(estimation.project, {\r\n        status: \"draft\",\r\n        updatedBy: userIdObject,\r\n      });\r\n    }\r\n\r\n    // Send email to admins if checked\r\n    if (isChecked) {\r\n      try {\r\n        // Find all admin and super_admin users\r\n        const admins = await User.find({\r\n          role: { $in: [\"admin\", \"super_admin\"] },\r\n          email: { $exists: true, $ne: \"\" },\r\n        });\r\n\r\n        // Get the user who performed the check\r\n        const checkedByUser = await User.findById(userIdObject);\r\n\r\n        // Prepare common email content\r\n        const project = estimation.project as any;\r\n        const templateParams: EstimationTemplateParams = {\r\n          userName: \"Team\",\r\n          actionUrl: `${FRONTEND_URL}/app/project-view/${estimation.project._id}`,\r\n          contactEmail: \"info@alghazal.ae\",\r\n          logoUrl:\r\n            \"https://krishnadas-test-1.s3.ap-south-1.amazonaws.com/alghazal/logo+alghazal.png\",\r\n          estimationNumber: estimation.estimationNumber,\r\n          checkerName: checkedByUser\r\n            ? `${checkedByUser.firstName} ${checkedByUser.lastName}`\r\n            : \"a team member\",\r\n          projectName: project?.projectName || \"the project\",\r\n          dueDate: estimation.validUntil?.toLocaleDateString(),\r\n        };\r\n\r\n        // Send single email to all admins (BCC to hide recipient list)\r\n        await mailer.sendEmail({\r\n          to: process.env.NOTIFICATION_INBOX || \"notifications@company.com\",\r\n          bcc: admins.map((admin) => admin.email).join(\",\"),\r\n          subject: `Estimation Checked: ${estimation.estimationNumber}`,\r\n          templateParams,\r\n          text: `Dear Team,\\n\\nEstimation ${estimation.estimationNumber} for project ${templateParams.projectName} has been checked by ${templateParams.checkerName}.\\n\\nView project: ${templateParams.actionUrl}\\n\\nBest regards,\\nTECHNICAL SERVICE TEAM`,\r\n          headers: {\r\n            \"X-Priority\": \"1\",\r\n            Importance: \"high\",\r\n          },\r\n        });\r\n      } catch (emailError) {\r\n        console.error(\"Failed to send notification emails:\", emailError);\r\n        // Continue even if email fails\r\n      }\r\n    }\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(\r\n          200,\r\n          estimation,\r\n          `Estimation ${isChecked ? \"checked\" : \"rejected\"} successfully`\r\n        )\r\n      );\r\n  }\r\n);\r\nexport const getEstimationsByProject = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { projectId } = req.params;\r\n    const { status } = req.query;\r\n\r\n    const filter: any = { project: projectId };\r\n    if (status === \"checked\") filter.isChecked = true;\r\n    if (status === \"approved\") filter.isApproved = true;\r\n    if (status === \"pending\") filter.isChecked = false;\r\n\r\n    const estimations = await Estimation.find(filter)\r\n      .populate(\"preparedBy\", \"firstName lastName\")\r\n      .populate(\"checkedBy\", \"firstName lastName\")\r\n      .populate(\"approvedBy\", \"firstName lastName\")\r\n      .sort({ createdAt: -1 });\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(200, estimations, \"Estimations retrieved successfully\")\r\n      );\r\n  }\r\n);\r\n\r\nexport const getEstimationDetails = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n\r\n    // Define types for populated fields\r\n    type PopulatedEstimation = Omit<\r\n      IEstimation,\r\n      \"project\" | \"preparedBy\" | \"checkedBy\" | \"approvedBy\"\r\n    > & {\r\n      project: {\r\n        _id: Types.ObjectId;\r\n        projectName: string;\r\n        client: Types.ObjectId | IClient;\r\n      };\r\n      preparedBy?: {\r\n        _id: Types.ObjectId;\r\n        firstName: string;\r\n        lastName: string;\r\n      };\r\n      checkedBy?: {\r\n        _id: Types.ObjectId;\r\n        firstName: string;\r\n        lastName: string;\r\n      };\r\n      approvedBy?: {\r\n        _id: Types.ObjectId;\r\n        firstName: string;\r\n        lastName: string;\r\n      };\r\n    };\r\n\r\n    const estimationE = await Estimation.findById(id)\r\n      .populate<{\r\n        project: { projectName: string; client: Types.ObjectId | IClient };\r\n      }>(\"project\", \"projectName client\")\r\n      .populate<{ preparedBy: { firstName: string; lastName: string } }>(\r\n        \"preparedBy\",\r\n        \"firstName lastName\"\r\n      )\r\n      .populate<{ checkedBy: { firstName: string; lastName: string } }>(\r\n        \"checkedBy\",\r\n        \"firstName lastName\"\r\n      )\r\n      .populate<{ approvedBy: { firstName: string; lastName: string } }>(\r\n        \"approvedBy\",\r\n        \"firstName lastName\"\r\n      );\r\n\r\n    if (!estimationE) {\r\n      throw new ApiError(404, \"Estimation not found\");\r\n    }\r\n\r\n    // Type assertion for the populated estimation\r\n    const populatedEstimation = estimationE as unknown as PopulatedEstimation &\r\n      Document;\r\n\r\n    // Get client ID safely\r\n    const clientId = populatedEstimation.project?.client;\r\n    if (!clientId) {\r\n      throw new ApiError(400, \"Client information not found\");\r\n    }\r\n\r\n    const client = await Client.findById(clientId);\r\n\r\n    // Prepare response object maintaining the same structure as before\r\n    const estimation = {\r\n      ...populatedEstimation.toObject(), // Using toObject() instead of _doc\r\n      client,\r\n    };\r\n\r\n    res\r\n      .status(200)\r\n      .json(new ApiResponse(200, estimation, \"Estimation details retrieved\"));\r\n  }\r\n);\r\n\r\nexport const updateEstimation = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n    const updateData = req.body;\r\n    console.log(req.body);\r\n    const estimation = await Estimation.findById(id);\r\n    if (!estimation) {\r\n      throw new ApiError(404, \"Estimation not found\");\r\n    }\r\n\r\n    if (estimation.isApproved) {\r\n      throw new ApiError(400, \"Cannot update approved estimation\");\r\n    }\r\n\r\n    // Reset checked status if updating\r\n    if (estimation.isChecked) {\r\n      estimation.isChecked = false;\r\n      estimation.checkedBy = undefined;\r\n      estimation.approvalComment = undefined;\r\n    }\r\n\r\n    // Don't allow changing these fields directly\r\n    delete updateData.isApproved;\r\n    delete updateData.approvedBy;\r\n    delete updateData.estimatedAmount;\r\n    delete updateData.profit;\r\n\r\n    // Update materials with UOM if present\r\n    if (updateData.materials) {\r\n      for (const item of updateData.materials) {\r\n        if (!item.uom) {\r\n          throw new ApiError(400, \"UOM is required for material items\");\r\n        }\r\n        if (item.quantity && item.unitPrice) {\r\n          item.total = item.quantity * item.unitPrice;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Update labour if present\r\n    if (updateData.labour) {\r\n      for (const item of updateData.labour) {\r\n        if (item.days && item.price) {\r\n          item.total = item.days * item.price;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Update fields\r\n    estimation.set(updateData);\r\n    await estimation.save();\r\n\r\n    res\r\n      .status(200)\r\n      .json(\r\n        new ApiResponse(200, estimation, \"Estimation updated successfully\")\r\n      );\r\n  }\r\n);\r\n\r\nexport const deleteEstimation = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n\r\n    const estimation = await Estimation.findById(id);\r\n    if (!estimation) {\r\n      throw new ApiError(404, \"Estimation not found\");\r\n    }\r\n\r\n    if (estimation.isApproved) {\r\n      throw new ApiError(400, \"Cannot delete approved estimation\");\r\n    }\r\n\r\n    await Estimation.findByIdAndDelete(id);\r\n\r\n    res\r\n      .status(200)\r\n      .json(new ApiResponse(200, null, \"Estimation deleted successfully\"));\r\n  }\r\n);\r\n\r\ninterface PopulatedEstimationItem {\r\n  description: string;\r\n  uom: string;\r\n  quantity: number;\r\n  unitPrice: number;\r\n  total: number;\r\n}\r\n\r\ninterface PopulatedLabourItem {\r\n  designation: string;\r\n  days: number;\r\n  price: number;\r\n  total: number;\r\n}\r\n\r\ninterface PopulatedTermsItem {\r\n  description: string;\r\n  quantity: number;\r\n  unitPrice: number;\r\n  total: number;\r\n}\r\n\r\ninterface PopulatedClient {\r\n  _id: string;\r\n  clientName: string;\r\n  clientAddress: string;\r\n  email: string;\r\n  mobileNumber: string;\r\n  telephoneNumber: string;\r\n}\r\n\r\ninterface PopulatedProject {\r\n  _id: string;\r\n  projectName: string;\r\n  client: PopulatedClient;\r\n  location: string;\r\n  building: string;\r\n  apartmentNumber: string;\r\n}\r\n\r\ninterface PopulatedEstimation extends Document {\r\n  project: PopulatedProject;\r\n  estimationNumber: string;\r\n  workStartDate: Date;\r\n  workEndDate: Date;\r\n  validUntil: Date;\r\n  paymentDueBy: number;\r\n  subject?: string;\r\n  materials: PopulatedEstimationItem[];\r\n  labour: PopulatedLabourItem[];\r\n  termsAndConditions: PopulatedTermsItem[];\r\n  estimatedAmount: number;\r\n  commissionAmount?: number;\r\n  profit?: number;\r\n  preparedBy: Pick<IUser, \"firstName\" | \"signatureImage\"> | Types.ObjectId;\r\n  checkedBy?: Pick<IUser, \"firstName\" | \"signatureImage\"> | Types.ObjectId;\r\n  approvedBy?: Pick<IUser, \"firstName\" | \"signatureImage\"> | Types.ObjectId;\r\n  isChecked: boolean;\r\n  isApproved: boolean;\r\n  approvalComment?: string;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nexport const generateEstimationPdf = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { id } = req.params;\r\n\r\n    const estimation = await Estimation.findById(id)\r\n      .populate<PopulatedEstimation>({\r\n        path: \"project\",\r\n        select: \"projectName client location building apartmentNumber\",\r\n        populate: {\r\n          path: \"client\",\r\n          select: \"clientName clientAddress email mobileNumber telephoneNumber\",\r\n        },\r\n      })\r\n      .populate(\"preparedBy\", \"firstName signatureImage\")\r\n      .populate(\"checkedBy\", \"firstName signatureImage\")\r\n      .populate(\"approvedBy\", \"firstName signatureImage\");\r\n\r\n    if (!estimation) {\r\n      throw new ApiError(404, \"Estimation not found\");\r\n    }\r\n    const quotation = await Quotation.findOne({ estimation: estimation._id });\r\n\r\n    // Verify populated data exists\r\n    if (!estimation.project || !estimation.project.client) {\r\n      throw new ApiError(400, \"Client information not found\");\r\n    }\r\n\r\n    // Type guard to check if populated fields are IUser objects\r\n    const isPopulatedUser = (\r\n      user: any\r\n    ): user is Pick<IUser, \"firstName\" | \"signatureImage\"> => {\r\n      return user && typeof user === \"object\" && \"firstName\" in user;\r\n    };\r\n\r\n    // Get user data with proper typing\r\n    const preparedBy = isPopulatedUser(estimation.preparedBy)\r\n      ? estimation.preparedBy\r\n      : null;\r\n    const checkedBy = isPopulatedUser(estimation.checkedBy)\r\n      ? estimation.checkedBy\r\n      : null;\r\n    const approvedBy = isPopulatedUser(estimation.approvedBy)\r\n      ? estimation.approvedBy\r\n      : null;\r\n\r\n    // Calculate totals\r\n    const materialsTotal = estimation.materials.reduce(\r\n      (sum, item) => sum + item.total,\r\n      0\r\n    );\r\n    const labourTotal = estimation.labour.reduce(\r\n      (sum, item) => sum + item.total,\r\n      0\r\n    );\r\n    const termsTotal = estimation.termsAndConditions.reduce(\r\n      (sum, item) => sum + item.total,\r\n      0\r\n    );\r\n    const estimatedAmount = materialsTotal + labourTotal + termsTotal;\r\n    const netAmount = quotation?.netAmount ?? 0;\r\n    const commissionAmount = estimation?.commissionAmount ?? 0;\r\n\r\n    let profit = netAmount - estimatedAmount - commissionAmount;\r\n    if (profit < 0) {\r\n      profit = 0;\r\n    }\r\n\r\n    // Format dates\r\n    const formatDate = (date?: Date) => {\r\n      return date ? new Date(date).toLocaleDateString(\"en-GB\") : \"\";\r\n    };\r\n\r\n    // Prepare HTML content\r\n    let htmlContent = `\r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n      <meta charset=\"utf-8\">\r\n      <style>\r\n        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\r\n        \r\n        * {\r\n          margin: 0;\r\n          padding: 0;\r\n          box-sizing: border-box;\r\n        }\r\n        \r\n        body {\r\n          font-family: 'Inter', sans-serif;\r\n          color: #333;\r\n          background-color: #fff;\r\n          line-height: 1.5;\r\n          padding: 20px;\r\n        }\r\n        \r\n        .container {\r\n          max-width: 1000px;\r\n          margin: 0 auto;\r\n          border: 1px solid #e0e0e0;\r\n          border-radius: 8px;\r\n          overflow: hidden;\r\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n        }\r\n        \r\n        .header {\r\n          background: linear-gradient(135deg, #0a3041 0%, #1a4d70 100%);\r\n          color: white;\r\n          padding: 25px 30px;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: flex-start;\r\n        }\r\n        \r\n        .logo-container {\r\n          flex: 1;\r\n        }\r\n        \r\n        .logo {\r\n          max-width: 180px;\r\n          height: auto;\r\n        }\r\n        \r\n        .document-info {\r\n          text-align: right;\r\n        }\r\n        \r\n        .document-title {\r\n          font-size: 28px;\r\n          font-weight: 700;\r\n          margin-bottom: 5px;\r\n        }\r\n        \r\n        .document-number {\r\n          font-size: 16px;\r\n          font-weight: 500;\r\n          opacity: 0.9;\r\n        }\r\n        \r\n        .content {\r\n          padding: 30px;\r\n        }\r\n        \r\n        .section {\r\n          margin-bottom: 30px;\r\n        }\r\n        \r\n        .section-title {\r\n          font-size: 18px;\r\n          font-weight: 600;\r\n          color: #0a3041;\r\n          padding-bottom: 10px;\r\n          border-bottom: 2px solid #0a3041;\r\n          margin-bottom: 20px;\r\n        }\r\n        \r\n        .client-info {\r\n          display: grid;\r\n          grid-template-columns: 1fr 1fr;\r\n          gap: 30px;\r\n          margin-bottom: 30px;\r\n        }\r\n        \r\n        .info-card {\r\n          background-color: #f9fafb;\r\n          border-radius: 6px;\r\n          padding: 20px;\r\n          border-left: 4px solid #0a3041;\r\n        }\r\n        \r\n        .info-card h3 {\r\n          font-size: 16px;\r\n          font-weight: 600;\r\n          color: #0a3041;\r\n          margin-bottom: 15px;\r\n        }\r\n        \r\n        .info-item {\r\n          margin-bottom: 8px;\r\n          display: flex;\r\n        }\r\n        \r\n        .info-label {\r\n          font-weight: 500;\r\n          min-width: 120px;\r\n          color: #666;\r\n        }\r\n        \r\n        .info-value {\r\n          font-weight: 400;\r\n          color: #333;\r\n        }\r\n        \r\n        table {\r\n          width: 100%;\r\n          border-collapse: collapse;\r\n          margin-bottom: 20px;\r\n        }\r\n        \r\n        th {\r\n          background-color: #f3f4f6;\r\n          text-align: left;\r\n          padding: 12px 15px;\r\n          font-weight: 600;\r\n          color: #0a3041;\r\n          border-bottom: 2px solid #e5e7eb;\r\n        }\r\n        \r\n        td {\r\n          padding: 12px 15px;\r\n          border-bottom: 1px solid #e5e7eb;\r\n        }\r\n        \r\n        tr:last-child td {\r\n          border-bottom: none;\r\n        }\r\n        \r\n        .text-right {\r\n          text-align: right;\r\n        }\r\n        \r\n        .text-center {\r\n          text-align: center;\r\n        }\r\n        \r\n        .summary-table {\r\n          width: 60%;\r\n          margin-left: auto;\r\n        }\r\n        \r\n        .summary-table td {\r\n          padding: 10px 15px;\r\n        }\r\n        \r\n        .summary-table tr:last-child td {\r\n          border-bottom: 1px solid #e5e7eb;\r\n        }\r\n        \r\n        .total-row {\r\n          font-weight: 600;\r\n          background-color: #f8f9fa;\r\n        }\r\n        \r\n        .profit-row {\r\n          font-weight: 700;\r\n          background-color: #e8f5e9;\r\n          color: #2e7d32;\r\n        }\r\n        \r\n        .signatures {\r\n          display: grid;\r\n          grid-template-columns: repeat(3, 1fr);\r\n          gap: 20px;\r\n          margin-top: 40px;\r\n          padding-top: 30px;\r\n          border-top: 1px dashed #ccc;\r\n        }\r\n        \r\n        .signature-box {\r\n          text-align: center;\r\n        }\r\n        \r\n        .signature-line {\r\n          height: 1px;\r\n          background-color: #ccc;\r\n          margin: 40px 0 10px;\r\n        }\r\n        \r\n        .signature-name {\r\n          font-weight: 600;\r\n          color: #0a3041;\r\n        }\r\n        \r\n        .signature-role {\r\n          font-size: 14px;\r\n          color: #666;\r\n        }\r\n        \r\n        .footer {\r\n          margin-top: 40px;\r\n          text-align: center;\r\n          font-size: 14px;\r\n          color: #666;\r\n          padding: 20px;\r\n          border-top: 1px solid #e5e7eb;\r\n        }\r\n        \r\n        .company-info {\r\n          margin-top: 10px;\r\n          font-size: 13px;\r\n        }\r\n        \r\n        .notes {\r\n          background-color: #f9fafb;\r\n          padding: 15px;\r\n          border-radius: 6px;\r\n          margin-top: 30px;\r\n          font-size: 14px;\r\n        }\r\n        \r\n        .notes-title {\r\n          font-weight: 600;\r\n          margin-bottom: 10px;\r\n          color: #0a3041;\r\n        }\r\n      </style>\r\n    </head>\r\n    <body>\r\n      <div class=\"container\">\r\n        <div class=\"header\">\r\n          <div class=\"logo-container\">\r\n            <img class=\"logo\" src=\"https://agats.s3.ap-south-1.amazonaws.com/logo/logo.jpeg\" alt=\"Company Logo\">\r\n          </div>\r\n          <div class=\"document-info\">\r\n            <div class=\"document-title\">ESTIMATION</div>\r\n            <div class=\"document-number\">Ref: ${estimation.estimationNumber}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"content\">\r\n          <div class=\"client-info\">\r\n            <div class=\"info-card\">\r\n              <h3>CLIENT INFORMATION</h3>\r\n              <div class=\"info-item\">\r\n                <span class=\"info-label\">Name:</span>\r\n                <span class=\"info-value\">${estimation.project.client.clientName}</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <span class=\"info-label\">Address:</span>\r\n                <span class=\"info-value\">${estimation.project.client.clientAddress}</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <span class=\"info-label\">Project:</span>\r\n                <span class=\"info-value\">${estimation.project.location}, ${estimation.project.building}, ${estimation.project.apartmentNumber}</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <span class=\"info-label\">Email:</span>\r\n                <span class=\"info-value\">${estimation.project.client.email}</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <span class=\"info-label\">Phone:</span>\r\n                <span class=\"info-value\">${estimation.project.client.mobileNumber} ${estimation.project.client.telephoneNumber ? '/ ' + estimation.project.client.telephoneNumber : ''}</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"info-card\">\r\n              <h3>ESTIMATION DETAILS</h3>\r\n              <div class=\"info-item\">\r\n                <span class=\"info-label\">Date:</span>\r\n                <span class=\"info-value\">${formatDate(new Date())}</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <span class=\"info-label\">Estimation #:</span>\r\n                <span class=\"info-value\">${estimation.estimationNumber}</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <span class=\"info-label\">Payment Terms:</span>\r\n                <span class=\"info-value\">${estimation.paymentDueBy} Days</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <span class=\"info-label\">Subject:</span>\r\n                <span class=\"info-value\">${estimation.subject}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"section\">\r\n            <h2 class=\"section-title\">MATERIALS</h2>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Description</th>\r\n                  <th>UOM</th>\r\n                  <th class=\"text-right\">Quantity</th>\r\n                  <th class=\"text-right\">Unit Price</th>\r\n                  <th class=\"text-right\">Total</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                ${estimation.materials\r\n                  .map(\r\n                    (material) => `\r\n                  <tr>\r\n                    <td>${material.description}</td>\r\n                    <td>${material.uom}</td>\r\n                    <td class=\"text-right\">${material.quantity.toFixed(2)}</td>\r\n                    <td class=\"text-right\">${material.unitPrice.toFixed(2)}</td>\r\n                    <td class=\"text-right\">${material.total.toFixed(2)}</td>\r\n                  </tr>\r\n                `\r\n                  )\r\n                  .join(\"\")}\r\n                <tr class=\"total-row\">\r\n                  <td colspan=\"4\" class=\"text-right\">TOTAL MATERIALS</td>\r\n                  <td class=\"text-right\">${materialsTotal.toFixed(2)}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          \r\n          <div class=\"section\">\r\n            <h2 class=\"section-title\">LABOR CHARGES</h2>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Designation</th>\r\n                  <th class=\"text-right\">Qty/Days</th>\r\n                  <th class=\"text-right\">Price</th>\r\n                  <th class=\"text-right\">Total</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                ${estimation.labour\r\n                  .map(\r\n                    (labour) => `\r\n                  <tr>\r\n                    <td>${labour.designation}</td>\r\n                    <td class=\"text-right\">${labour.days.toFixed(2)}</td>\r\n                    <td class=\"text-right\">${labour.price.toFixed(2)}</td>\r\n                    <td class=\"text-right\">${labour.total.toFixed(2)}</td>\r\n                  </tr>\r\n                `\r\n                  )\r\n                  .join(\"\")}\r\n                <tr class=\"total-row\">\r\n                  <td colspan=\"3\" class=\"text-right\">TOTAL LABOR</td>\r\n                  <td class=\"text-right\">${labourTotal.toFixed(2)}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          \r\n          <div class=\"section\">\r\n            <h2 class=\"section-title\">MISCELLANEOUS CHARGES</h2>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Description</th>\r\n                  <th class=\"text-right\">Quantity</th>\r\n                  <th class=\"text-right\">Unit Price</th>\r\n                  <th class=\"text-right\">Total</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                ${estimation.termsAndConditions\r\n                  .map(\r\n                    (term) => `\r\n                  <tr>\r\n                    <td>${term.description}</td>\r\n                    <td class=\"text-right\">${term.quantity.toFixed(2)}</td>\r\n                    <td class=\"text-right\">${term.unitPrice.toFixed(2)}</td>\r\n                    <td class=\"text-right\">${term.total.toFixed(2)}</td>\r\n                  </tr>\r\n                `\r\n                  )\r\n                  .join(\"\")}\r\n                <tr class=\"total-row\">\r\n                  <td colspan=\"3\" class=\"text-right\">TOTAL MISCELLANEOUS</td>\r\n                  <td class=\"text-right\">${termsTotal.toFixed(2)}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          \r\n          <div class=\"section\">\r\n            <h2 class=\"section-title\">SUMMARY</h2>\r\n            <table class=\"summary-table\">\r\n              <tr class=\"total-row\">\r\n                <td>Estimated Amount</td>\r\n                <td class=\"text-right\">${estimatedAmount.toFixed(2)}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Quotation Amount</td>\r\n                <td class=\"text-right\">${quotation?.netAmount?.toFixed(2) || \"0.00\"}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Commission Amount</td>\r\n                <td class=\"text-right\">${estimation.commissionAmount?.toFixed(2) || \"0.00\"}</td>\r\n              </tr>\r\n              <tr class=\"profit-row\">\r\n                <td>PROFIT</td>\r\n                <td class=\"text-right\">${profit.toFixed(2)}</td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n          \r\n          <div class=\"signatures\">\r\n            <div class=\"signature-box\">\r\n              <div class=\"signature-role\">Prepared By</div>\r\n              <div class=\"signature-line\"></div>\r\n              <div class=\"signature-name\">${preparedBy?.firstName || \"N/A\"}</div>\r\n            </div>\r\n            <div class=\"signature-box\">\r\n              <div class=\"signature-role\">Checked By</div>\r\n              <div class=\"signature-line\"></div>\r\n              <div class=\"signature-name\">${checkedBy?.firstName || \"N/A\"}</div>\r\n            </div>\r\n            <div class=\"signature-box\">\r\n              <div class=\"signature-role\">Approved By</div>\r\n              <div class=\"signature-line\"></div>\r\n              <div class=\"signature-name\">${approvedBy?.firstName || \"N/A\"}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"notes\">\r\n            <div class=\"notes-title\">Notes:</div>\r\n            <div>This estimation is valid for 30 days from the date of issue. Prices are subject to change without prior notice.</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"footer\">\r\n          Thank you for your business!\r\n          <div class=\"company-info\">\r\n            AGATS SOFTWARE CO. LTD. | support@agatsoftware.com | +94 77 123 4567\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </body>\r\n    </html>\r\n  `;\r\n\r\n    // Generate PDF\r\n    const browser = await puppeteer.launch({\r\n      headless: \"shell\",\r\n      args: [\"--no-sandbox\", \"--disable-setuid-sandbox\"],\r\n    });\r\n\r\n    try {\r\n      const page = await browser.newPage();\r\n\r\n      await page.setViewport({\r\n        width: 1200,\r\n        height: 1800,\r\n        deviceScaleFactor: 1,\r\n      });\r\n\r\n      await page.setContent(htmlContent, {\r\n        waitUntil: [\"load\", \"networkidle0\", \"domcontentloaded\"],\r\n        timeout: 30000,\r\n      });\r\n\r\n      // Additional wait for dynamic content\r\n      await page.waitForSelector(\"body\", { timeout: 5000 });\r\n\r\n      const pdfBuffer = await page.pdf({\r\n        format: \"A4\",\r\n        printBackground: true,\r\n        margin: {\r\n          top: \"0.5in\",\r\n          right: \"0.5in\",\r\n          bottom: \"0.5in\",\r\n          left: \"0.5in\",\r\n        },\r\n        preferCSSPageSize: true,\r\n      });\r\n\r\n      res.setHeader(\"Content-Type\", \"application/pdf\");\r\n      res.setHeader(\r\n        \"Content-Disposition\",\r\n        `attachment; filename=estimation-${estimation.estimationNumber}.pdf`\r\n      );\r\n      res.send(pdfBuffer);\r\n    } finally {\r\n      await browser.close();\r\n    }\r\n  }\r\n);"]}