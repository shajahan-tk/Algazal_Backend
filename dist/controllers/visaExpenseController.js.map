{"version":3,"file":"visaExpenseController.js","sourceRoot":"","sources":["../../src/controllers/visaExpenseController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { asyncHandler } from \"../utils/asyncHandler\";\r\nimport { ApiResponse } from \"../utils/apiHandlerHelpers\";\r\nimport { ApiError } from \"../utils/apiHandlerHelpers\";\r\nimport { VisaExpense } from \"../models/visaExpenseModel\";\r\nimport { User } from \"../models/userModel\";\r\nimport ExcelJS from \"exceljs\";\r\nimport { Types } from \"mongoose\";\r\n\r\nexport const createVisaExpense = asyncHandler(async (req: Request, res: Response) => {\r\n  const {\r\n    employee,\r\n    iBan,\r\n    passportNumber,\r\n    passportExpireDate,\r\n    emirateIdNumber,\r\n    emirateIdExpireDate,\r\n    labourCardPersonalNumber,\r\n    workPermitNumber,\r\n    labourExpireDate,\r\n    offerLetterTyping = 0,\r\n    labourInsurance = 0,\r\n    labourCardPayment = 0,\r\n    statusChangeInOut = 0,\r\n    insideEntry = 0,\r\n    medicalSharjah = 0,\r\n    tajweehSubmission = 0,\r\n    iloeInsurance = 0,\r\n    healthInsurance = 0,\r\n    emirateId = 0,\r\n    residenceStamping = 0,\r\n    srilankaCouncilHead = 0,\r\n    upscoding = 0,\r\n    labourFinePayment = 0,\r\n    labourCardRenewalPayment = 0,\r\n    servicePayment = 0,\r\n    visaStamping = 0,\r\n    twoMonthVisitingVisa = 0,\r\n    finePayment = 0,\r\n    entryPermitOutside = 0,\r\n    complaintEmployee = 0,\r\n    arabicLetter = 0,\r\n    violationCommittee = 0,\r\n    quotaModification = 0,\r\n    others = 0,\r\n  } = req.body;\r\n\r\n  // Validate required fields\r\n  if (!employee) {\r\n    throw new ApiError(400, \"Employee is a required field\");\r\n  }\r\n\r\n  // Check if employee exists\r\n  const employeeExists = await User.findById(employee);\r\n  if (!employeeExists) {\r\n    throw new ApiError(404, \"Employee not found\");\r\n  }\r\n\r\n  // Calculate total safely by converting to numbers first\r\n  const total = Number(offerLetterTyping) +\r\n    Number(labourInsurance) +\r\n    Number(labourCardPayment) +\r\n    Number(statusChangeInOut) +\r\n    Number(insideEntry) +\r\n    Number(medicalSharjah) +\r\n    Number(tajweehSubmission) +\r\n    Number(iloeInsurance) +\r\n    Number(healthInsurance) +\r\n    Number(emirateId) +\r\n    Number(residenceStamping) +\r\n    Number(srilankaCouncilHead) +\r\n    Number(upscoding) +\r\n    Number(labourFinePayment) +\r\n    Number(labourCardRenewalPayment) +\r\n    Number(servicePayment) +\r\n    Number(visaStamping) +\r\n    Number(twoMonthVisitingVisa) +\r\n    Number(finePayment) +\r\n    Number(entryPermitOutside) +\r\n    Number(complaintEmployee) +\r\n    Number(arabicLetter) +\r\n    Number(violationCommittee) +\r\n    Number(quotaModification) +\r\n    Number(others);\r\n\r\n  // Create visa expense\r\n  const visaExpense = await VisaExpense.create({\r\n    employee,\r\n    iBan,\r\n    passportNumber,\r\n    passportExpireDate: passportExpireDate ? new Date(passportExpireDate) : undefined,\r\n    emirateIdNumber,\r\n    emirateIdExpireDate: emirateIdExpireDate ? new Date(emirateIdExpireDate) : undefined,\r\n    labourCardPersonalNumber,\r\n    workPermitNumber,\r\n    labourExpireDate: labourExpireDate ? new Date(labourExpireDate) : undefined,\r\n    offerLetterTyping: Number(offerLetterTyping),\r\n    labourInsurance: Number(labourInsurance),\r\n    labourCardPayment: Number(labourCardPayment),\r\n    statusChangeInOut: Number(statusChangeInOut),\r\n    insideEntry: Number(insideEntry),\r\n    medicalSharjah: Number(medicalSharjah),\r\n    tajweehSubmission: Number(tajweehSubmission),\r\n    iloeInsurance: Number(iloeInsurance),\r\n    healthInsurance: Number(healthInsurance),\r\n    emirateId: Number(emirateId),\r\n    residenceStamping: Number(residenceStamping),\r\n    srilankaCouncilHead: Number(srilankaCouncilHead),\r\n    upscoding: Number(upscoding),\r\n    labourFinePayment: Number(labourFinePayment),\r\n    labourCardRenewalPayment: Number(labourCardRenewalPayment),\r\n    servicePayment: Number(servicePayment),\r\n    visaStamping: Number(visaStamping),\r\n    twoMonthVisitingVisa: Number(twoMonthVisitingVisa),\r\n    finePayment: Number(finePayment),\r\n    entryPermitOutside: Number(entryPermitOutside),\r\n    complaintEmployee: Number(complaintEmployee),\r\n    arabicLetter: Number(arabicLetter),\r\n    violationCommittee: Number(violationCommittee),\r\n    quotaModification: Number(quotaModification),\r\n    others: Number(others),\r\n    total: Number(total.toFixed(2)), // Ensure we store as a proper number with 2 decimal places\r\n    createdBy: req.user?.userId,\r\n  });\r\n\r\n  res.status(201).json(new ApiResponse(201, visaExpense, \"Visa expense created successfully\"));\r\n});\r\n\r\n// Interface for query parameters\r\ninterface VisaExpenseQuery {\r\n  page?: string;\r\n  limit?: string;\r\n  employee?: string;\r\n  startDate?: string;\r\n  endDate?: string;\r\n  month?: string;\r\n  year?: string;\r\n  search?: string;\r\n  minTotal?: string;\r\n  maxTotal?: string;\r\n  status?: string;\r\n  sortBy?: string;\r\n  sortOrder?: 'asc' | 'desc';\r\n}\r\n\r\nexport const getVisaExpenses = asyncHandler(async (req: Request<{}, {}, {}, VisaExpenseQuery>, res: Response) => {\r\n  // Input validation and sanitization\r\n  const page = Math.max(1, parseInt(req.query.page as string) || 1);\r\n  const limit = Math.min(100, Math.max(1, parseInt(req.query.limit as string) || 10));\r\n  const skip = (page - 1) * limit;\r\n\r\n  // Sorting options\r\n  const sortBy = req.query.sortBy || 'createdAt';\r\n  const sortOrder = req.query.sortOrder === 'asc' ? 1 : -1;\r\n  const sortOptions: Record<string, 1 | -1> = { [sortBy]: sortOrder };\r\n\r\n  const filter: any = {};\r\n\r\n  try {\r\n    // Employee filter\r\n    if (req.query.employee) {\r\n      if (!Types.ObjectId.isValid(req.query.employee)) {\r\n        throw new ApiError(400, \"Invalid employee ID format\");\r\n      }\r\n      filter.employee = new Types.ObjectId(req.query.employee);\r\n    }\r\n\r\n    // Date range filter (takes priority over month/year filter)\r\n    if (req.query.startDate && req.query.endDate) {\r\n      const startDate = new Date(req.query.startDate);\r\n      const endDate = new Date(req.query.endDate);\r\n      \r\n      if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {\r\n        throw new ApiError(400, \"Invalid date format. Use YYYY-MM-DD format\");\r\n      }\r\n\r\n      if (startDate > endDate) {\r\n        throw new ApiError(400, \"Start date cannot be later than end date\");\r\n      }\r\n\r\n      // Set time to start and end of day\r\n      startDate.setHours(0, 0, 0, 0);\r\n      endDate.setHours(23, 59, 59, 999);\r\n\r\n      filter.createdAt = {\r\n        $gte: startDate,\r\n        $lte: endDate,\r\n      };\r\n    }\r\n    // Month/Year filter (only if date range is not provided)\r\n    else if (req.query.month && req.query.year) {\r\n      const year = parseInt(req.query.year);\r\n      const month = parseInt(req.query.month);\r\n\r\n      if (isNaN(year) || isNaN(month) || month < 1 || month > 12) {\r\n        throw new ApiError(400, \"Invalid month or year. Month should be 1-12\");\r\n      }\r\n\r\n      // Create date range for the specific month\r\n      const startOfMonth = new Date(year, month - 1, 1); // MongoDB months are 0-indexed\r\n      const endOfMonth = new Date(year, month, 0, 23, 59, 59, 999); // Last day of month\r\n\r\n      filter.createdAt = {\r\n        $gte: startOfMonth,\r\n        $lte: endOfMonth,\r\n      };\r\n    }\r\n    // Year only filter\r\n    else if (req.query.year) {\r\n      const year = parseInt(req.query.year);\r\n      if (isNaN(year)) {\r\n        throw new ApiError(400, \"Invalid year format\");\r\n      }\r\n\r\n      filter.createdAt = {\r\n        $gte: new Date(year, 0, 1), // Start of year\r\n        $lte: new Date(year, 11, 31, 23, 59, 59, 999), // End of year\r\n      };\r\n    }\r\n\r\n    // Total amount range filter\r\n    if (req.query.minTotal || req.query.maxTotal) {\r\n      filter.total = {};\r\n      \r\n      if (req.query.minTotal) {\r\n        const minTotal = parseFloat(req.query.minTotal);\r\n        if (isNaN(minTotal) || minTotal < 0) {\r\n          throw new ApiError(400, \"Invalid minimum total amount\");\r\n        }\r\n        filter.total.$gte = minTotal;\r\n      }\r\n      \r\n      if (req.query.maxTotal) {\r\n        const maxTotal = parseFloat(req.query.maxTotal);\r\n        if (isNaN(maxTotal) || maxTotal < 0) {\r\n          throw new ApiError(400, \"Invalid maximum total amount\");\r\n        }\r\n        filter.total.$lte = maxTotal;\r\n      }\r\n\r\n      // Validate range\r\n      if (req.query.minTotal && req.query.maxTotal) {\r\n        const minTotal = parseFloat(req.query.minTotal);\r\n        const maxTotal = parseFloat(req.query.maxTotal);\r\n        if (minTotal > maxTotal) {\r\n          throw new ApiError(400, \"Minimum total cannot be greater than maximum total\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // Search functionality\r\n    if (req.query.search && req.query.search.trim()) {\r\n      const searchTerm = req.query.search.trim();\r\n      \r\n      // Search in multiple fields\r\n      filter.$or = [\r\n        { passportNumber: { $regex: searchTerm, $options: 'i' } },\r\n        { emirateIdNumber: { $regex: searchTerm, $options: 'i' } },\r\n        { labourCardPersonalNumber: { $regex: searchTerm, $options: 'i' } },\r\n        { workPermitNumber: { $regex: searchTerm, $options: 'i' } },\r\n        { iBan: { $regex: searchTerm, $options: 'i' } },\r\n      ];\r\n\r\n      // If search term is a number, also search in total field\r\n      if (!isNaN(Number(searchTerm))) {\r\n        filter.$or.push({ total: Number(searchTerm) });\r\n      }\r\n    }\r\n\r\n    // Get total count for pagination\r\n    const total = await VisaExpense.countDocuments(filter);\r\n\r\n    // Fetch visa expenses with populated data\r\n    const visaExpenses = await VisaExpense.find(filter)\r\n      .skip(skip)\r\n      .limit(limit)\r\n      .sort(sortOptions)\r\n      .populate(\"employee\", \"firstName lastName email phoneNumbers role department\")\r\n      .populate(\"createdBy\", \"firstName lastName email\")\r\n      .lean(); // Use lean() for better performance\r\n\r\n    // Calculate pagination metadata\r\n    const totalPages = Math.ceil(total / limit);\r\n    const hasNextPage = page < totalPages;\r\n    const hasPreviousPage = page > 1;\r\n\r\n    // Calculate aggregated data for the current page\r\n    const pageTotal = visaExpenses.reduce((sum, expense) => sum + expense.total, 0);\r\n\r\n    // Calculate overall totals based on current filter\r\n    const aggregatedData = await VisaExpense.aggregate([\r\n      { $match: filter },\r\n      {\r\n        $group: {\r\n          _id: null,\r\n          totalAmount: { $sum: '$total' },\r\n          averageAmount: { $avg: '$total' },\r\n          maxAmount: { $max: '$total' },\r\n          minAmount: { $min: '$total' },\r\n          count: { $sum: 1 }\r\n        }\r\n      }\r\n    ]);\r\n\r\n    const summary = aggregatedData.length > 0 ? aggregatedData[0] : {\r\n      totalAmount: 0,\r\n      averageAmount: 0,\r\n      maxAmount: 0,\r\n      minAmount: 0,\r\n      count: 0\r\n    };\r\n\r\n    // Response data\r\n    const responseData = {\r\n      visaExpenses,\r\n      pagination: {\r\n        total,\r\n        page,\r\n        limit,\r\n        totalPages,\r\n        hasNextPage,\r\n        hasPreviousPage,\r\n        pageTotal, // Total amount for current page\r\n      },\r\n      summary: {\r\n        totalAmount: summary.totalAmount,\r\n        averageAmount: Math.round(summary.averageAmount * 100) / 100, // Round to 2 decimal places\r\n        maxAmount: summary.maxAmount,\r\n        minAmount: summary.minAmount,\r\n        totalRecords: summary.count\r\n      },\r\n      filters: {\r\n        employee: req.query.employee,\r\n        startDate: req.query.startDate,\r\n        endDate: req.query.endDate,\r\n        month: req.query.month,\r\n        year: req.query.year,\r\n        search: req.query.search,\r\n        minTotal: req.query.minTotal,\r\n        maxTotal: req.query.maxTotal,\r\n        sortBy,\r\n        sortOrder: req.query.sortOrder\r\n      }\r\n    };\r\n\r\n    res.status(200).json(\r\n      new ApiResponse(\r\n        200,\r\n        responseData,\r\n        `${total} visa expense${total === 1 ? '' : 's'} retrieved successfully`\r\n      )\r\n    );\r\n\r\n  } catch (error) {\r\n    if (error instanceof ApiError) {\r\n      throw error;\r\n    }\r\n    \r\n    // Handle MongoDB errors\r\n    if (error instanceof Error) {\r\n      if (error.message.includes('Cast to ObjectId failed')) {\r\n        throw new ApiError(400, \"Invalid ID format provided\");\r\n      }\r\n      throw new ApiError(500, `Database error: ${error.message}`);\r\n    }\r\n    \r\n    throw new ApiError(500, \"An unexpected error occurred while fetching visa expenses\");\r\n  }\r\n});\r\n\r\n// Additional helper function to get visa expense statistics\r\nexport const getVisaExpenseStats = asyncHandler(async (req: Request, res: Response) => {\r\n  try {\r\n    const stats = await VisaExpense.aggregate([\r\n      {\r\n        $group: {\r\n          _id: null,\r\n          totalExpenses: { $sum: '$total' },\r\n          averageExpense: { $avg: '$total' },\r\n          maxExpense: { $max: '$total' },\r\n          minExpense: { $min: '$total' },\r\n          totalRecords: { $sum: 1 }\r\n        }\r\n      },\r\n      {\r\n        $project: {\r\n          _id: 0,\r\n          totalExpenses: 1,\r\n          averageExpense: { $round: ['$averageExpense', 2] },\r\n          maxExpense: 1,\r\n          minExpense: 1,\r\n          totalRecords: 1\r\n        }\r\n      }\r\n    ]);\r\n\r\n    // Monthly breakdown for the current year\r\n    const currentYear = new Date().getFullYear();\r\n    const monthlyStats = await VisaExpense.aggregate([\r\n      {\r\n        $match: {\r\n          createdAt: {\r\n            $gte: new Date(currentYear, 0, 1),\r\n            $lte: new Date(currentYear, 11, 31, 23, 59, 59, 999)\r\n          }\r\n        }\r\n      },\r\n      {\r\n        $group: {\r\n          _id: { $month: '$createdAt' },\r\n          totalAmount: { $sum: '$total' },\r\n          count: { $sum: 1 }\r\n        }\r\n      },\r\n      {\r\n        $sort: { '_id': 1 }\r\n      }\r\n    ]);\r\n\r\n    const responseData = {\r\n      overall: stats[0] || {\r\n        totalExpenses: 0,\r\n        averageExpense: 0,\r\n        maxExpense: 0,\r\n        minExpense: 0,\r\n        totalRecords: 0\r\n      },\r\n      monthlyBreakdown: monthlyStats,\r\n      year: currentYear\r\n    };\r\n\r\n    res.status(200).json(\r\n      new ApiResponse(200, responseData, \"Visa expense statistics retrieved successfully\")\r\n    );\r\n\r\n  } catch (error) {\r\n    throw new ApiError(500, \"Error retrieving visa expense statistics\");\r\n  }\r\n});\r\n\r\nexport const getVisaExpense = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n\r\n  const visaExpense = await VisaExpense.findById(id)\r\n    .populate(\"employee\", \"firstName lastName email phoneNumbers role\")\r\n    .populate(\"createdBy\", \"firstName lastName\");\r\n\r\n  if (!visaExpense) {\r\n    throw new ApiError(404, \"Visa expense not found\");\r\n  }\r\n\r\n  res.status(200).json(new ApiResponse(200, visaExpense, \"Visa expense retrieved successfully\"));\r\n});\r\n\r\nexport const updateVisaExpense = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n  const updateData = req.body;\r\n\r\n  // Check if employee exists if being updated\r\n  if (updateData.employee) {\r\n    const employeeExists = await User.findById(updateData.employee);\r\n    if (!employeeExists) {\r\n      throw new ApiError(404, \"Employee not found\");\r\n    }\r\n  }\r\n\r\n  // Convert date fields if they exist in updateData\r\n  if (updateData.passportExpireDate) {\r\n    updateData.passportExpireDate = new Date(updateData.passportExpireDate);\r\n  }\r\n  if (updateData.emirateIdExpireDate) {\r\n    updateData.emirateIdExpireDate = new Date(updateData.emirateIdExpireDate);\r\n  }\r\n  if (updateData.labourExpireDate) {\r\n    updateData.labourExpireDate = new Date(updateData.labourExpireDate);\r\n  }\r\n\r\n  // If any expense fields are being updated, recalculate the total\r\n  const expenseFields = [\r\n    'offerLetterTyping', 'labourInsurance', 'labourCardPayment', 'statusChangeInOut',\r\n    'insideEntry', 'medicalSharjah', 'tajweehSubmission', 'iloeInsurance',\r\n    'healthInsurance', 'emirateId', 'residenceStamping', 'srilankaCouncilHead',\r\n    'upscoding', 'labourFinePayment', 'labourCardRenewalPayment', 'servicePayment',\r\n    'visaStamping', 'twoMonthVisitingVisa', 'finePayment', 'entryPermitOutside',\r\n    'complaintEmployee', 'arabicLetter', 'violationCommittee', 'quotaModification',\r\n    'others'\r\n  ];\r\n\r\n  const shouldRecalculateTotal = expenseFields.some(field => field in updateData);\r\n\r\n  if (shouldRecalculateTotal) {\r\n    // Get the current document\r\n    const currentExpense:any = await VisaExpense.findById(id);\r\n    if (!currentExpense) {\r\n      throw new ApiError(404, \"Visa expense not found\");\r\n    }\r\n    \r\n\r\n    // Calculate new total based on updated values or existing values\r\n    const total = expenseFields.reduce((sum, field) => {\r\n      const value = field in updateData ? Number(updateData[field]) : Number(currentExpense[field]);\r\n      return sum + (isNaN(value) ? 0 : value);\r\n    }, 0);\r\n\r\n    updateData.total = Number(total.toFixed(2));\r\n  }\r\n\r\n  const updatedVisaExpense = await VisaExpense.findByIdAndUpdate(id, updateData, {\r\n    new: true,\r\n  })\r\n    .populate(\"employee\", \"firstName lastName email phoneNumbers role\")\r\n    .populate(\"createdBy\", \"firstName lastName\");\r\n\r\n  if (!updatedVisaExpense) {\r\n    throw new ApiError(404, \"Visa expense not found or update failed\");\r\n  }\r\n\r\n  res.status(200).json(new ApiResponse(200, updatedVisaExpense, \"Visa expense updated successfully\"));\r\n});\r\nexport const deleteVisaExpense = asyncHandler(async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n\r\n  const visaExpense = await VisaExpense.findByIdAndDelete(id);\r\n\r\n  if (!visaExpense) {\r\n    throw new ApiError(404, \"Visa expense not found\");\r\n  }\r\n\r\n  res.status(200).json(new ApiResponse(200, null, \"Visa expense deleted successfully\"));\r\n});\r\ninterface ExportQuery {\r\n  employee?: string;\r\n  startDate?: string;\r\n  endDate?: string;\r\n  month?: string;\r\n  year?: string;\r\n  search?: string;\r\n  minTotal?: string;\r\n  maxTotal?: string;\r\n  format?: 'xlsx' | 'csv';\r\n  includeStats?: 'true' | 'false';\r\n}\r\n\r\n\r\nexport const exportVisaExpensesToExcel = asyncHandler(async (req: Request<{}, {}, {}, ExportQuery>, res: Response) => {\r\n  try {\r\n    const filter: any = {};\r\n    const format = req.query.format || 'xlsx';\r\n    const includeStats = req.query.includeStats === 'true';\r\n\r\n    // Employee filter\r\n    if (req.query.employee) {\r\n      if (!Types.ObjectId.isValid(req.query.employee)) {\r\n        throw new ApiError(400, \"Invalid employee ID format\");\r\n      }\r\n      filter.employee = new Types.ObjectId(req.query.employee);\r\n    }\r\n\r\n    // Date range filter (takes priority over month/year filter)\r\n    if (req.query.startDate && req.query.endDate) {\r\n      const startDate = new Date(req.query.startDate);\r\n      const endDate = new Date(req.query.endDate);\r\n      \r\n      if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {\r\n        throw new ApiError(400, \"Invalid date format. Use YYYY-MM-DD format\");\r\n      }\r\n\r\n      if (startDate > endDate) {\r\n        throw new ApiError(400, \"Start date cannot be later than end date\");\r\n      }\r\n\r\n      // Set time to start and end of day\r\n      startDate.setHours(0, 0, 0, 0);\r\n      endDate.setHours(23, 59, 59, 999);\r\n\r\n      filter.createdAt = {\r\n        $gte: startDate,\r\n        $lte: endDate,\r\n      };\r\n    }\r\n    // Month/Year filter\r\n    else if (req.query.month && req.query.year) {\r\n      const year = parseInt(req.query.year);\r\n      const month = parseInt(req.query.month);\r\n\r\n      if (isNaN(year) || isNaN(month) || month < 1 || month > 12) {\r\n        throw new ApiError(400, \"Invalid month or year. Month should be 1-12\");\r\n      }\r\n\r\n      const startOfMonth = new Date(year, month - 1, 1);\r\n      const endOfMonth = new Date(year, month, 0, 23, 59, 59, 999);\r\n\r\n      filter.createdAt = {\r\n        $gte: startOfMonth,\r\n        $lte: endOfMonth,\r\n      };\r\n    }\r\n    // Year only filter\r\n    else if (req.query.year) {\r\n      const year = parseInt(req.query.year);\r\n      if (isNaN(year)) {\r\n        throw new ApiError(400, \"Invalid year format\");\r\n      }\r\n\r\n      filter.createdAt = {\r\n        $gte: new Date(year, 0, 1),\r\n        $lte: new Date(year, 11, 31, 23, 59, 59, 999),\r\n      };\r\n    }\r\n\r\n    // Total amount range filter\r\n    if (req.query.minTotal || req.query.maxTotal) {\r\n      filter.total = {};\r\n      \r\n      if (req.query.minTotal) {\r\n        const minTotal = parseFloat(req.query.minTotal);\r\n        if (isNaN(minTotal) || minTotal < 0) {\r\n          throw new ApiError(400, \"Invalid minimum total amount\");\r\n        }\r\n        filter.total.$gte = minTotal;\r\n      }\r\n      \r\n      if (req.query.maxTotal) {\r\n        const maxTotal = parseFloat(req.query.maxTotal);\r\n        if (isNaN(maxTotal) || maxTotal < 0) {\r\n          throw new ApiError(400, \"Invalid maximum total amount\");\r\n        }\r\n        filter.total.$lte = maxTotal;\r\n      }\r\n    }\r\n\r\n    // Search functionality\r\n    if (req.query.search && req.query.search.trim()) {\r\n      const searchTerm = req.query.search.trim();\r\n      \r\n      filter.$or = [\r\n        { passportNumber: { $regex: searchTerm, $options: 'i' } },\r\n        { emirateIdNumber: { $regex: searchTerm, $options: 'i' } },\r\n        { labourCardPersonalNumber: { $regex: searchTerm, $options: 'i' } },\r\n        { workPermitNumber: { $regex: searchTerm, $options: 'i' } },\r\n        { iBan: { $regex: searchTerm, $options: 'i' } },\r\n      ];\r\n\r\n      if (!isNaN(Number(searchTerm))) {\r\n        filter.$or.push({ total: Number(searchTerm) });\r\n      }\r\n    }\r\n\r\n    // Get all visa expenses with employee details\r\n    const visaExpenses = await VisaExpense.find(filter)\r\n      .sort({ createdAt: -1 })\r\n      .populate<{\r\n        employee: {\r\n          firstName: string;\r\n          lastName: string;\r\n          phoneNumbers: string[];\r\n          role: string;\r\n          department?: string;\r\n          country?: string;\r\n          bankNumber?: string;\r\n        };\r\n      }>(\"employee\", \"firstName lastName phoneNumbers role department country bankNumber\")\r\n      .populate(\"createdBy\", \"firstName lastName\")\r\n      .lean();\r\n\r\n    if (visaExpenses.length === 0) {\r\n      throw new ApiError(404, \"No visa expenses found matching the criteria\");\r\n    }\r\n\r\n    // Create a new workbook\r\n    const workbook = new ExcelJS.Workbook();\r\n    const worksheet = workbook.addWorksheet(\"Visa Expenses\");\r\n\r\n    // Define columns with improved headers and formatting\r\n    const columns = [\r\n      { header: \"S.No\", key: \"serialNumber\", width: 8 },\r\n      { header: \"Employee Name\", key: \"name\", width: 25 },\r\n      { header: \"Country\", key: \"country\", width: 15 },\r\n      { header: \"Department\", key: \"department\", width: 20 },\r\n      { header: \"Designation\", key: \"designation\", width: 20 },\r\n      { header: \"Phone Number\", key: \"phoneNumber\", width: 18 },\r\n      { header: \"Bank Number\", key: \"bankNumber\", width: 20 },\r\n      { header: \"IBAN\", key: \"iBan\", width: 25 },\r\n      { header: \"Passport Number\", key: \"passportNumber\", width: 20 },\r\n      { header: \"Passport Expire Date\", key: \"passportExpireDate\", width: 18, style: { numFmt: \"dd/mm/yyyy\" } },\r\n      { header: \"Emirates ID Number\", key: \"emirateIdNumber\", width: 20 },\r\n      { header: \"Emirates ID Expire Date\", key: \"emirateIdExpireDate\", width: 20, style: { numFmt: \"dd/mm/yyyy\" } },\r\n      { header: \"Labour Card Personal Number\", key: \"labourCardPersonalNumber\", width: 25 },\r\n      { header: \"Work Permit Number\", key: \"workPermitNumber\", width: 20 },\r\n      { header: \"Labour Expire Date\", key: \"labourExpireDate\", width: 18, style: { numFmt: \"dd/mm/yyyy\" } },\r\n      { header: \"Offer Letter Typing\", key: \"offerLetterTyping\", width: 18, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Labour Insurance\", key: \"labourInsurance\", width: 18, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Labour Card Payment\", key: \"labourCardPayment\", width: 20, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Status Change In/Out\", key: \"statusChangeInOut\", width: 20, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Inside Entry\", key: \"insideEntry\", width: 15, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Medical Sharjah\", key: \"medicalSharjah\", width: 18, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Tajweeh Submission\", key: \"tajweehSubmission\", width: 18, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"ILOE Insurance\", key: \"iloeInsurance\", width: 18, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Health Insurance\", key: \"healthInsurance\", width: 18, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Emirates ID\", key: \"emirateId\", width: 15, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Residence Stamping\", key: \"residenceStamping\", width: 20, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Sri Lanka Council Head\", key: \"srilankaCouncilHead\", width: 20, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Upscoding\", key: \"upscoding\", width: 15, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Labour Fine Payment\", key: \"labourFinePayment\", width: 20, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Labour Card Renewal Payment\", key: \"labourCardRenewalPayment\", width: 25, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Service Payment\", key: \"servicePayment\", width: 18, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Visa Stamping\", key: \"visaStamping\", width: 18, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"2 Month Visiting Visa\", key: \"twoMonthVisitingVisa\", width: 20, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Fine Payment\", key: \"finePayment\", width: 15, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Entry Permit Outside\", key: \"entryPermitOutside\", width: 20, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Complaint Employee\", key: \"complaintEmployee\", width: 20, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Arabic Letter\", key: \"arabicLetter\", width: 15, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Violation Committee\", key: \"violationCommittee\", width: 20, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Quota Modification\", key: \"quotaModification\", width: 20, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Others\", key: \"others\", width: 15, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Total Amount\", key: \"total\", width: 18, style: { numFmt: \"#,##0.00\" } },\r\n      { header: \"Created Date\", key: \"createdDate\", width: 18, style: { numFmt: \"dd/mm/yyyy hh:mm\" } },\r\n      { header: \"Created By\", key: \"createdBy\", width: 20 },\r\n    ];\r\n\r\n    // Set the worksheet columns\r\n    worksheet.columns = columns;\r\n\r\n    // Add data rows\r\n    let totalAmount = 0;\r\n    visaExpenses.forEach((expense, index) => {\r\n      const employee = expense.employee as any;\r\n      const createdBy = expense.createdBy as any;\r\n      \r\n      const rowData = {\r\n        serialNumber: index + 1,\r\n        name: `${employee.firstName} ${employee.lastName}`,\r\n        country: employee.country || \"N/A\",\r\n        department: employee.department || \"N/A\",\r\n        designation: employee.role || \"N/A\",\r\n        phoneNumber: employee.phoneNumbers?.join(\", \") || \"N/A\",\r\n        bankNumber: employee.bankNumber || \"N/A\",\r\n        iBan: expense.iBan || \"N/A\",\r\n        passportNumber: expense.passportNumber || \"N/A\",\r\n        passportExpireDate: expense.passportExpireDate || null,\r\n        emirateIdNumber: expense.emirateIdNumber || \"N/A\",\r\n        emirateIdExpireDate: expense.emirateIdExpireDate || null,\r\n        labourCardPersonalNumber: expense.labourCardPersonalNumber || \"N/A\",\r\n        workPermitNumber: expense.workPermitNumber || \"N/A\",\r\n        labourExpireDate: expense.labourExpireDate || null,\r\n        offerLetterTyping: expense.offerLetterTyping || 0,\r\n        labourInsurance: expense.labourInsurance || 0,\r\n        labourCardPayment: expense.labourCardPayment || 0,\r\n        statusChangeInOut: expense.statusChangeInOut || 0,\r\n        insideEntry: expense.insideEntry || 0,\r\n        medicalSharjah: expense.medicalSharjah || 0,\r\n        tajweehSubmission: expense.tajweehSubmission || 0,\r\n        iloeInsurance: expense.iloeInsurance || 0,\r\n        healthInsurance: expense.healthInsurance || 0,\r\n        emirateId: expense.emirateId || 0,\r\n        residenceStamping: expense.residenceStamping || 0,\r\n        srilankaCouncilHead: expense.srilankaCouncilHead || 0,\r\n        upscoding: expense.upscoding || 0,\r\n        labourFinePayment: expense.labourFinePayment || 0,\r\n        labourCardRenewalPayment: expense.labourCardRenewalPayment || 0,\r\n        servicePayment: expense.servicePayment || 0,\r\n        visaStamping: expense.visaStamping || 0,\r\n        twoMonthVisitingVisa: expense.twoMonthVisitingVisa || 0,\r\n        finePayment: expense.finePayment || 0,\r\n        entryPermitOutside: expense.entryPermitOutside || 0,\r\n        complaintEmployee: expense.complaintEmployee || 0,\r\n        arabicLetter: expense.arabicLetter || 0,\r\n        violationCommittee: expense.violationCommittee || 0,\r\n        quotaModification: expense.quotaModification || 0,\r\n        others: expense.others || 0,\r\n        total: expense.total || 0,\r\n        createdDate: expense.createdAt || new Date(),\r\n        createdBy: createdBy ? `${createdBy.firstName} ${createdBy.lastName}` : \"N/A\",\r\n      };\r\n\r\n      totalAmount += expense.total || 0;\r\n      worksheet.addRow(rowData);\r\n    });\r\n\r\n    // Style the header row\r\n    worksheet.getRow(1).eachCell((cell) => {\r\n      cell.font = { bold: true, color: { argb: 'FFFFFFFF' } };\r\n      cell.fill = {\r\n        type: \"pattern\",\r\n        pattern: \"solid\",\r\n        fgColor: { argb: \"FF4472C4\" }, // Blue header\r\n      };\r\n      cell.border = {\r\n        top: { style: \"thin\", color: { argb: \"FF000000\" } },\r\n        left: { style: \"thin\", color: { argb: \"FF000000\" } },\r\n        bottom: { style: \"thin\", color: { argb: \"FF000000\" } },\r\n        right: { style: \"thin\", color: { argb: \"FF000000\" } },\r\n      };\r\n      cell.alignment = { horizontal: 'center', vertical: 'middle' };\r\n    });\r\n\r\n    // Add alternating row colors for better readability\r\n    for (let i = 2; i <= visaExpenses.length + 1; i++) {\r\n      if (i % 2 === 0) {\r\n        worksheet.getRow(i).eachCell((cell) => {\r\n          if (!cell.fill || cell.fill.type !== 'pattern') {\r\n            cell.fill = {\r\n              type: \"pattern\",\r\n              pattern: \"solid\",\r\n              fgColor: { argb: \"FFF2F2F2\" }, // Light gray for even rows\r\n            };\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // Add summary statistics if requested\r\n    if (includeStats) {\r\n      const summaryStartRow = visaExpenses.length + 3;\r\n      \r\n      // Add summary title\r\n      const summaryTitleCell = worksheet.getCell(`A${summaryStartRow}`);\r\n      summaryTitleCell.value = \"SUMMARY STATISTICS\";\r\n      summaryTitleCell.font = { bold: true, size: 14 };\r\n      summaryTitleCell.fill = {\r\n        type: \"pattern\",\r\n        pattern: \"solid\",\r\n        fgColor: { argb: \"FFFF9900\" },\r\n      };\r\n      \r\n      // Merge cells for title\r\n      worksheet.mergeCells(`A${summaryStartRow}:D${summaryStartRow}`);\r\n      \r\n      // Add statistics\r\n      const stats = [\r\n        [`Total Records:`, visaExpenses.length],\r\n        [`Total Amount:`, totalAmount],\r\n        [`Average Amount:`, Math.round((totalAmount / visaExpenses.length) * 100) / 100],\r\n        [`Export Date:`, new Date().toLocaleString()],\r\n      ];\r\n      \r\n      stats.forEach((stat, index) => {\r\n        const row = summaryStartRow + index + 1;\r\n        worksheet.getCell(`A${row}`).value = stat[0];\r\n        worksheet.getCell(`A${row}`).font = { bold: true };\r\n        worksheet.getCell(`B${row}`).value = stat[1];\r\n        \r\n        if (typeof stat[1] === 'number' && index > 0) {\r\n          worksheet.getCell(`B${row}`).numFmt = '#,##0.00';\r\n        }\r\n      });\r\n    }\r\n\r\n    // Freeze the header row\r\n    worksheet.views = [{ state: \"frozen\", ySplit: 1 }];\r\n\r\n    // Auto-filter for the data\r\n    worksheet.autoFilter = {\r\n      from: 'A1',\r\n      to: `AO${visaExpenses.length + 1}` // Adjust based on number of columns\r\n    };\r\n\r\n    // Generate filename with current date and filter info\r\n    const dateStr = new Date().toISOString().split(\"T\")[0];\r\n    let filename = `visa_expenses_export_${dateStr}`;\r\n    \r\n    if (req.query.employee) filename += '_employee_filtered';\r\n    if (req.query.startDate && req.query.endDate) {\r\n      filename += `_${req.query.startDate}_to_${req.query.endDate}`;\r\n    } else if (req.query.month && req.query.year) {\r\n      filename += `_${req.query.year}_${req.query.month.padStart(2, '0')}`;\r\n    }\r\n    \r\n    filename += `.${format}`;\r\n\r\n    // Set response headers based on format\r\n    if (format === 'csv') {\r\n      res.setHeader(\"Content-Type\", \"text/csv\");\r\n      res.setHeader(\"Content-Disposition\", `attachment; filename=${filename}`);\r\n      \r\n      // Write as CSV\r\n      await workbook.csv.write(res);\r\n    } else {\r\n      res.setHeader(\r\n        \"Content-Type\",\r\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n      );\r\n      res.setHeader(\"Content-Disposition\", `attachment; filename=${filename}`);\r\n      \r\n      // Write as Excel\r\n      await workbook.xlsx.write(res);\r\n    }\r\n    \r\n    res.end();\r\n\r\n  } catch (error) {\r\n    if (error instanceof ApiError) {\r\n      throw error;\r\n    }\r\n    \r\n    if (error instanceof Error) {\r\n      if (error.message.includes('Cast to ObjectId failed')) {\r\n        throw new ApiError(400, \"Invalid ID format provided\");\r\n      }\r\n      throw new ApiError(500, `Export error: ${error.message}`);\r\n    }\r\n    \r\n    throw new ApiError(500, \"An unexpected error occurred during export\");\r\n  }\r\n});\r\n\r\n"]}