{"version":3,"file":"estimationModel.js","sourceRoot":"","sources":["../../src/models/estimationModel.ts"],"names":[],"mappings":"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","sourcesContent":["import { Document, Schema, model, Types } from \"mongoose\";\r\nimport { IProject } from \"./projectModel\";\r\nimport { IUser } from \"./userModel\";\r\n\r\ninterface IEstimationItem {\r\n  description: string;\r\n  uom: string; // Added UOM field\r\n  quantity: number;\r\n  unitPrice: number;\r\n  total: number;\r\n}\r\ninterface ITermsITem {\r\n  description: string;\r\n  quantity: number;\r\n  unitPrice: number;\r\n  total: number;\r\n}\r\n\r\ninterface ILabourItem {\r\n  designation: string;\r\n  days: number;\r\n  price: number;\r\n  total: number;\r\n}\r\n\r\nexport interface IEstimation extends Document {\r\n  project: Types.ObjectId | IProject;\r\n  estimationNumber: string;\r\n  workStartDate: Date;\r\n  workEndDate: Date;\r\n  validUntil: Date;\r\n  paymentDueBy: number;\r\n\r\n  subject?: string;\r\n  materials: IEstimationItem[];\r\n  labour: ILabourItem[];\r\n  termsAndConditions: ITermsITem[];\r\n\r\n  estimatedAmount: number;\r\n  quotationAmount?: number;\r\n  commissionAmount?: number;\r\n  profit?: number;\r\n\r\n  preparedBy: Types.ObjectId | IUser;\r\n  checkedBy?: Types.ObjectId | IUser;\r\n  approvedBy?: Types.ObjectId | IUser;\r\n\r\n  isChecked: boolean;\r\n  isApproved: boolean;\r\n  approvalComment?: string;\r\n\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nconst estimationItemSchema = new Schema<IEstimationItem>({\r\n  description: { type: String, required: true },\r\n  uom: { type: String, required: true }, // Added UOM field\r\n  quantity: { type: Number, required: true, min: 0 },\r\n  unitPrice: { type: Number, required: true, min: 0 },\r\n  total: { type: Number, required: true, min: 0 },\r\n});\r\nconst termItemSchema = new Schema<ITermsITem>({\r\n  description: { type: String, required: true },\r\n  quantity: { type: Number, required: true, min: 0 },\r\n  unitPrice: { type: Number, required: true, min: 0 },\r\n  total: { type: Number, required: true, min: 0 },\r\n});\r\n\r\nconst labourItemSchema = new Schema<ILabourItem>({\r\n  designation: { type: String, required: true },\r\n  days: { type: Number, required: true, min: 0 },\r\n  price: { type: Number, required: true, min: 0 },\r\n  total: { type: Number, required: true, min: 0 },\r\n});\r\n\r\nconst estimationSchema = new Schema<IEstimation>(\r\n  {\r\n    project: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"Project\",\r\n      required: true,\r\n    },\r\n    estimationNumber: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    workStartDate: {\r\n      type: Date,\r\n      required: true,\r\n    },\r\n    workEndDate: {\r\n      type: Date,\r\n      required: true,\r\n      validate: {\r\n        validator: function (this: IEstimation, value: Date) {\r\n          return value > this.workStartDate;\r\n        },\r\n        message: \"Work end date must be after start date\",\r\n      },\r\n    },\r\n    validUntil: {\r\n      type: Date,\r\n      required: true,\r\n    },\r\n    paymentDueBy: {\r\n      type: Number,\r\n      required: true,\r\n      min: 0,\r\n    },\r\n    subject: {\r\n      type: String,\r\n    },\r\n    materials: [estimationItemSchema],\r\n    labour: [labourItemSchema],\r\n    termsAndConditions: [termItemSchema],\r\n    estimatedAmount: {\r\n      type: Number,\r\n      required: true,\r\n      min: 0,\r\n      default: 0,\r\n    },\r\n    quotationAmount: {\r\n      type: Number,\r\n      min: 0,\r\n    },\r\n    commissionAmount: {\r\n      type: Number,\r\n      min: 0,\r\n    },\r\n    profit: {\r\n      type: Number,\r\n    },\r\n    preparedBy: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n    checkedBy: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n    },\r\n    approvedBy: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n    },\r\n    isChecked: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    isApproved: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    approvalComment: {\r\n      type: String,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nestimationSchema.pre<IEstimation>(\"save\", function (next) {\r\n  const materialsTotal = this.materials.reduce(\r\n    (sum, item) => sum + (item.total || 0),\r\n    0\r\n  );\r\n  const labourTotal = this.labour.reduce(\r\n    (sum, item) => sum + (item.total || 0),\r\n    0\r\n  );\r\n  const termsTotal = this.termsAndConditions.reduce(\r\n    (sum, item) => sum + (item.total || 0),\r\n    0\r\n  );\r\n\r\n  this.estimatedAmount = materialsTotal + labourTotal + termsTotal;\r\n\r\n  if (this.quotationAmount) {\r\n    this.profit =\r\n      this.quotationAmount -\r\n      this.estimatedAmount -\r\n      (this.commissionAmount || 0);\r\n  }\r\n\r\n  next();\r\n});\r\n\r\nestimationSchema.index({ project: 1 });\r\nestimationSchema.index({ estimationNumber: 1 });\r\nestimationSchema.index({ isApproved: 1 });\r\nestimationSchema.index({ isChecked: 1 });\r\nestimationSchema.index({ workStartDate: 1 });\r\nestimationSchema.index({ workEndDate: 1 });\r\n\r\nexport const Estimation = model<IEstimation>(\"Estimation\", estimationSchema);\r\n"]}