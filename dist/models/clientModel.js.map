{"version":3,"file":"clientModel.js","sourceRoot":"","sources":["../../src/models/clientModel.ts"],"names":[],"mappings":"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","sourcesContent":["import { Document, Schema, model, Types } from \"mongoose\";\r\n\r\nexport interface IApartment extends Document {\r\n  number: string;\r\n}\r\n\r\nexport interface IBuilding extends Document {\r\n  name: string;\r\n  apartments: Types.DocumentArray<IApartment>;\r\n}\r\n\r\nexport interface ILocation extends Document {\r\n  name: string;\r\n  buildings: Types.DocumentArray<IBuilding>;\r\n}\r\n\r\nexport interface IClient extends Document {\r\n  clientName: string;\r\n  clientAddress?: string;\r\n  pincode?: string;\r\n  mobileNumber?: string;\r\n  telephoneNumber?: string;\r\n  trnNumber?: string;\r\n  email?: string;\r\n  accountNumber?: string;\r\n  locations: Types.DocumentArray<ILocation>;\r\n  createdBy: Types.ObjectId;\r\n  createdAt?: Date;\r\n  updatedAt?: Date;\r\n}\r\n\r\nconst apartmentSchema = new Schema<IApartment>({\r\n  number: {\r\n    type: String,\r\n    required: true,\r\n    trim: true,\r\n  },\r\n});\r\n\r\nconst buildingSchema = new Schema<IBuilding>({\r\n  name: {\r\n    type: String,\r\n    required: true,\r\n    trim: true,\r\n  },\r\n  apartments: [apartmentSchema],\r\n});\r\n\r\nconst locationSchema = new Schema<ILocation>({\r\n  name: {\r\n    type: String,\r\n    required: true,\r\n    trim: true,\r\n  },\r\n  buildings: [buildingSchema],\r\n});\r\n\r\nconst clientSchema = new Schema<IClient>(\r\n  {\r\n    clientName: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    clientAddress: {\r\n      type: String,\r\n      required: false,  // Changed from true to false\r\n      trim: true,\r\n    },\r\n    pincode: {\r\n      type: String,\r\n      required: false,  // Changed from true to false\r\n      trim: true,\r\n      validate: {\r\n        validator: function (v: string) {\r\n          // Only validate if value exists\r\n          return !v || /^[0-9]{6}$/.test(v);\r\n        },\r\n        message: (props: any) => `${props.value} is not a valid pincode!`,\r\n      },\r\n    },\r\n    mobileNumber: {\r\n      type: String,\r\n      required: false,  // Changed from true to false\r\n      trim: true,\r\n      validate: {\r\n        validator: function (v: string) {\r\n          // Only validate if value exists\r\n          return !v || /^\\+?[\\d\\s-]{6,}$/.test(v);\r\n        },\r\n        message: (props: any) => `${props.value} is not a valid phone number!`,\r\n      },\r\n    },\r\n    email: {\r\n      type: String,\r\n      required: false,  // Already was false, keeping it explicit\r\n      trim: true,\r\n      validate: {\r\n        validator: function (v: string) {\r\n          // Only validate if value exists\r\n          return !v || /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(v);\r\n        },\r\n        message: (props: any) => `${props.value} is not a valid email!`,\r\n      },\r\n    },\r\n    telephoneNumber: {\r\n      type: String,\r\n      required: false,  // Already was false\r\n      trim: true,\r\n      validate: {\r\n        validator: function (v: string) {\r\n          return !v || /^\\+?[\\d\\s-]{6,}$/.test(v);\r\n        },\r\n        message: (props: any) => `${props.value} is not a valid phone number!`,\r\n      },\r\n    },\r\n    trnNumber: {\r\n      type: String,\r\n      required: false,  // Changed from true to false\r\n      trim: true,\r\n    },\r\n    accountNumber: {\r\n      type: String,\r\n      required: false,  // Already was false\r\n      trim: true,\r\n    },\r\n    locations: {\r\n      type: [locationSchema],\r\n      default: [],  // Provide default empty array\r\n    },\r\n    createdBy: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\n// Indexes\r\nclientSchema.index({ clientName: 1 });\r\nclientSchema.index({ trnNumber: 1 });\r\nclientSchema.index({ pincode: 1 });\r\nclientSchema.index({ accountNumber: 1 });\r\n\r\nexport const Client = model<IClient>(\"Client\", clientSchema);"]}