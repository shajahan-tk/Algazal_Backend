{"version":3,"file":"shopModel.js","sourceRoot":"","sources":["../../src/models/shopModel.ts"],"names":[],"mappings":";;;AAAA,uCAA0D;AAsB1D,MAAM,oBAAoB,GAAG,IAAI,iBAAM,CAAkB;IACvD,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1C,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1C,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;CAC3C,CAAC,CAAC;AAEH,MAAM,UAAU,GAAG,IAAI,iBAAM,CAC3B;IACE,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,IAAI;KACX;IACD,MAAM,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,KAAK,EAAE,gBAAgB;QACjC,IAAI,EAAE,IAAI;QACV,MAAM,EAAE,IAAI;QACZ,MAAM,EAAE,IAAI,EAAE,uCAAuC;KACtD;IACD,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,IAAI;KACX;IACD,GAAG,EAAE;QACH,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,KAAK;QACf,IAAI,EAAE,IAAI;KACX;IACD,SAAS,EAAE;QACT,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,KAAK;QACf,IAAI,EAAE,IAAI;KACX;IACD,UAAU,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,KAAK;QACf,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE;YACR,SAAS,EAAE,UAAU,CAAS;gBAC5B,OAAO,CAAC,CAAC,IAAI,4BAA4B,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpD,CAAC;YACD,OAAO,EAAE,CAAC,KAAU,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,wBAAwB;SAChE;KACF;IACD,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,KAAK,EAAE,gBAAgB;QACjC,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE;YACR,SAAS,EAAE,UAAU,CAAS;gBAC5B,OAAO,CAAC,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1C,CAAC;YACD,OAAO,EAAE,CAAC,KAAU,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,+BAA+B;SACvE;KACF;IACD,eAAe,EAAE,CAAC,oBAAoB,CAAC;IACvC,SAAS,EAAE;QACT,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;QACX,QAAQ,EAAE,IAAI;KACf;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEF,UAAU;AACV,UAAU,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;AAElC,UAAU,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;AAEzB,QAAA,IAAI,GAAG,IAAA,gBAAK,EAAQ,MAAM,EAAE,UAAU,CAAC,CAAC","sourcesContent":["import { Document, Schema, model, Types } from \"mongoose\";\r\n\r\nexport interface IShopAttachment extends Document {\r\n  fileName: string;\r\n  fileType: string;\r\n  filePath: string;\r\n}\r\n\r\nexport interface IShop extends Document {\r\n  shopName: string;\r\n  shopNo?: string; // Made optional\r\n  address: string;\r\n  vat?: string;\r\n  ownerName?: string;\r\n  ownerEmail?: string;\r\n  contact?: string; // Made optional\r\n  shopAttachments: Types.DocumentArray<IShopAttachment>;\r\n  createdBy: Types.ObjectId;\r\n  createdAt?: Date;\r\n  updatedAt?: Date;\r\n}\r\n\r\nconst shopAttachmentSchema = new Schema<IShopAttachment>({\r\n  fileName: { type: String, required: true },\r\n  fileType: { type: String, required: true },\r\n  filePath: { type: String, required: true },\r\n});\r\n\r\nconst shopSchema = new Schema<IShop>(\r\n  {\r\n    shopName: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    shopNo: {\r\n      type: String,\r\n      required: false, // Made optional\r\n      trim: true,\r\n      unique: true,\r\n      sparse: true, // Allow multiple null/undefined values\r\n    },\r\n    address: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    vat: {\r\n      type: String,\r\n      required: false,\r\n      trim: true,\r\n    },\r\n    ownerName: {\r\n      type: String,\r\n      required: false,\r\n      trim: true,\r\n    },\r\n    ownerEmail: {\r\n      type: String,\r\n      required: false,\r\n      trim: true,\r\n      validate: {\r\n        validator: function (v: string) {\r\n          return !v || /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(v);\r\n        },\r\n        message: (props: any) => `${props.value} is not a valid email!`,\r\n      },\r\n    },\r\n    contact: {\r\n      type: String,\r\n      required: false, // Made optional\r\n      trim: true,\r\n      validate: {\r\n        validator: function (v: string) {\r\n          return !v || /^\\+?[\\d\\s-]{6,}$/.test(v);\r\n        },\r\n        message: (props: any) => `${props.value} is not a valid phone number!`,\r\n      },\r\n    },\r\n    shopAttachments: [shopAttachmentSchema],\r\n    createdBy: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\n// Indexes\r\nshopSchema.index({ shopName: 1 });\r\n\r\nshopSchema.index({ address: \"text\" });\r\n\r\nexport const Shop = model<IShop>(\"Shop\", shopSchema);"]}