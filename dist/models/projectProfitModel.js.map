{"version":3,"file":"projectProfitModel.js","sourceRoot":"","sources":["../../src/models/projectProfitModel.ts"],"names":[],"mappings":";;;AAAA,uCAA0D;AAsB1D,MAAM,gBAAgB,GAAG,IAAI,iBAAM,CAAc;IAC/C,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1C,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1C,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;CAC3C,CAAC,CAAC;AAEH,MAAM,mBAAmB,GAAG,IAAI,iBAAM,CACpC;IACE,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC7C,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1C,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE;IACzC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE;IAChD,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE;IAC9D,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE;IACpD,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IAC7B,WAAW,EAAE,CAAC,gBAAgB,CAAC;IAC/B,SAAS,EAAE,EAAE,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;CACxE,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEF,mBAAmB,CAAC,GAAG,CAAiB,MAAM,EAAE,UAAU,IAAI;IAC5D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC1C,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC;AAEH,mBAAmB,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;AAC9C,mBAAmB,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;AAC3C,mBAAmB,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;AAC5C,mBAAmB,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;AACzC,mBAAmB,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;AAE/B,QAAA,aAAa,GAAG,IAAA,gBAAK,EAAiB,eAAe,EAAE,mBAAmB,CAAC,CAAC","sourcesContent":["import { Document, Schema, model, Types } from \"mongoose\";\r\n\r\nexport interface IProjectProfit extends Document {\r\n  projectName: string;\r\n  poNumber: string;\r\n  startDate: Date;\r\n  budget: number;\r\n  expenses: number;\r\n  profit: number;\r\n  description: string;\r\n  attachments: Types.DocumentArray<IAttachment>;\r\n  createdBy: Types.ObjectId;\r\n  createdAt?: Date;\r\n  updatedAt?: Date;\r\n}\r\n\r\nexport interface IAttachment extends Document {\r\n  fileName: string;\r\n  fileType: string;\r\n  filePath: string;\r\n}\r\n\r\nconst attachmentSchema = new Schema<IAttachment>({\r\n  fileName: { type: String, required: true },\r\n  fileType: { type: String, required: true },\r\n  filePath: { type: String, required: true },\r\n});\r\n\r\nconst projectProfitSchema = new Schema<IProjectProfit>(\r\n  {\r\n    projectName: { type: String, required: true },\r\n    poNumber: { type: String, required: true },\r\n    startDate: { type: Date, required: true },\r\n    budget: { type: Number, required: true, min: 0 },\r\n    expenses: { type: Number, required: true, min: 0, default: 0 },\r\n    profit: { type: Number, required: true, default: 0 },\r\n    description: { type: String },\r\n    attachments: [attachmentSchema],\r\n    createdBy: { type: Schema.Types.ObjectId, ref: \"User\", required: true },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nprojectProfitSchema.pre<IProjectProfit>(\"save\", function (next) {\r\n  this.profit = this.budget - this.expenses;\r\n  next();\r\n});\r\n\r\nprojectProfitSchema.index({ projectName: 1 });\r\nprojectProfitSchema.index({ poNumber: 1 });\r\nprojectProfitSchema.index({ startDate: 1 });\r\nprojectProfitSchema.index({ profit: 1 });\r\nprojectProfitSchema.index({ createdBy: 1 });\r\n\r\nexport const ProjectProfit = model<IProjectProfit>(\"ProjectProfit\", projectProfitSchema);"]}