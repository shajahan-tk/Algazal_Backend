{"version":3,"file":"employeeExpenseModel.js","sourceRoot":"","sources":["../../src/models/employeeExpenseModel.ts"],"names":[],"mappings":"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","sourcesContent":["import { Document, Schema, model, Types } from \"mongoose\";\r\nimport { IUser } from \"./userModel\";\r\n\r\nexport interface ICustomExpense {\r\n  name: string;\r\n  amount: number;\r\n}\r\n\r\nexport interface IEmployeeExpense extends Document {\r\n  employee: Types.ObjectId | IUser;\r\n  designation: string;\r\n  country: string;\r\n  basicSalary: number;\r\n  allowance: number;\r\n  totalSalary: number;\r\n  twoYearSalary: number;\r\n  perYearExpenses: number;\r\n  perMonthExpenses: number;\r\n  perDayExpenses: number;\r\n  totalExpensesPerPerson: number;\r\n  visaExpenses: number;\r\n  twoYearUniform: number;\r\n  shoes: number;\r\n  twoYearAccommodation: number;\r\n  sewaBills: number;\r\n  dewaBills: number;\r\n  insurance: number;\r\n  transport: number;\r\n  water: number;\r\n  thirdPartyLiabilities: number;\r\n  fairmontCertificate: number;\r\n  leaveSalary: number;\r\n  ticket: number;\r\n  gratuity: number;\r\n  customExpenses: ICustomExpense[];\r\n  createdBy: Types.ObjectId | IUser;\r\n  createdAt?: Date;\r\n  updatedAt?: Date;\r\n}\r\n\r\nconst customExpenseSchema = new Schema<ICustomExpense>({\r\n  name: { type: String, required: true },\r\n  amount: { type: Number, required: true, min: 0 }\r\n});\r\n\r\nconst employeeExpenseSchema = new Schema<IEmployeeExpense>(\r\n  {\r\n    employee: { \r\n      type: Schema.Types.ObjectId, \r\n      ref: \"User\",\r\n      required: true \r\n    },\r\n    designation: { type: String, required: true },\r\n    country: { type: String, required: true },\r\n    basicSalary: { type: Number, required: true, min: 0 },\r\n    allowance: { type: Number, required: true, min: 0 },\r\n    totalSalary: { type: Number, required: true, min: 0 },\r\n    twoYearSalary: { type: Number, required: true, min: 0 },\r\n    perYearExpenses: { type: Number, required: true, min: 0 },\r\n    perMonthExpenses: { type: Number, required: true, min: 0 },\r\n    perDayExpenses: { type: Number, required: true, min: 0 },\r\n    totalExpensesPerPerson: { type: Number, required: true, min: 0 },\r\n    visaExpenses: { type: Number, required: true, min: 0 },\r\n    twoYearUniform: { type: Number, required: true, min: 0 },\r\n    shoes: { type: Number, required: true, min: 0 },\r\n    twoYearAccommodation: { type: Number, required: true, min: 0 },\r\n    sewaBills: { type: Number, required: true, min: 0 },\r\n    dewaBills: { type: Number, required: true, min: 0 },\r\n    insurance: { type: Number, required: true, min: 0 },\r\n    transport: { type: Number, required: true, min: 0 },\r\n    water: { type: Number, required: true, min: 0 },\r\n    thirdPartyLiabilities: { type: Number, required: true, min: 0 },\r\n    fairmontCertificate: { type: Number, required: true, min: 0 },\r\n    leaveSalary: { type: Number, required: true, min: 0 },\r\n    ticket: { type: Number, required: true, min: 0 },\r\n    gratuity: { type: Number, required: true, min: 0 },\r\n    customExpenses: [customExpenseSchema],\r\n    createdBy: { \r\n      type: Schema.Types.ObjectId, \r\n      ref: \"User\",\r\n      required: true \r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\n// Indexes for better query performance\r\nemployeeExpenseSchema.index({ employee: 1 });\r\nemployeeExpenseSchema.index({ designation: 1 });\r\nemployeeExpenseSchema.index({ country: 1 });\r\nemployeeExpenseSchema.index({ createdAt: -1 });\r\n\r\n// Middleware to calculate derived fields before saving\r\nemployeeExpenseSchema.pre<IEmployeeExpense>(\"save\", function(next) {\r\n  // Calculate total salary if not provided\r\n  if (this.isModified(\"basicSalary\") || this.isModified(\"allowance\")) {\r\n    this.totalSalary = this.basicSalary + this.allowance;\r\n  }\r\n  \r\n  // You can add more automatic calculations here if needed\r\n  next();\r\n});\r\n\r\nexport const EmployeeExpense = model<IEmployeeExpense>(\"EmployeeExpense\", employeeExpenseSchema);"]}