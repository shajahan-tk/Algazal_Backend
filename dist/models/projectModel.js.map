{"version":3,"file":"projectModel.js","sourceRoot":"","sources":["../../src/models/projectModel.ts"],"names":[],"mappings":"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","sourcesContent":["import { Document, Schema, model, Types, ObjectId } from \"mongoose\";\r\nimport { IClient } from \"./clientModel\";\r\n\r\n\r\nexport interface IProject extends Document {\r\n  projectName: string;\r\n  _id: ObjectId;\r\n  projectDescription: string;\r\n  client: Types.ObjectId | IClient;\r\n  location: string;\r\n  building: string;\r\n  apartmentNumber: string;\r\n  status:\r\n  | \"draft\"\r\n  | \"estimation_prepared\"\r\n  | \"quotation_sent\"\r\n  | \"quotation_approved\"\r\n  | \"quotation_rejected\"\r\n  | \"lpo_received\"\r\n  | \"team_assigned\"\r\n  | \"work_started\"\r\n  | \"in_progress\"\r\n  | \"work_completed\"\r\n  | \"quality_check\"\r\n  | \"client_handover\"\r\n  | \"final_invoice_sent\"\r\n  | \"payment_received\"\r\n  | \"on_hold\"\r\n  | \"cancelled\"\r\n  | \"project_closed\";\r\n  projectNumber: string;\r\n  progress: number;\r\n  createdBy: Types.ObjectId;\r\n  updatedBy?: Types.ObjectId;\r\n  assignedTo?: Types.ObjectId;\r\n  assignedWorkers?: Types.ObjectId[];\r\n  assignedDriver?: Types.ObjectId;\r\n  // New fields for completion dates\r\n  completionDate?: Date;\r\n  handoverDate?: Date;\r\n  acceptanceDate?: Date;\r\n\r\n  // New work date fields\r\n  workStartDate?: Date;\r\n  workEndDate?: Date;\r\n  //for some customers\r\n  grnNumber?: string;\r\n  createdAt?: Date;\r\n  updatedAt?: Date;\r\n}\r\n\r\nconst projectSchema = new Schema<IProject>(\r\n  {\r\n    projectName: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n      maxlength: [100, \"Project name cannot exceed 100 characters\"],\r\n    },\r\n    projectDescription: {\r\n      type: String,\r\n      trim: true,\r\n      maxlength: [500, \"Description cannot exceed 500 characters\"],\r\n    },\r\n    client: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"Client\",\r\n      required: true,\r\n    },\r\n    location: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    building: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    apartmentNumber: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    status: {\r\n      type: String,\r\n      enum: [\r\n        \"draft\",\r\n        \"estimation_prepared\",\r\n        \"quotation_sent\",\r\n        \"quotation_approved\",\r\n        \"quotation_rejected\",\r\n        \"lpo_received\",\r\n        \"team_assigned\",\r\n        \"work_started\",\r\n        \"in_progress\",\r\n        \"work_completed\",\r\n        \"quality_check\",\r\n        \"client_handover\",\r\n        \"final_invoice_sent\",\r\n        \"payment_received\",\r\n        \"on_hold\",\r\n        \"cancelled\",\r\n        \"project_closed\",\r\n      ],\r\n      default: \"draft\",\r\n    },\r\n    progress: {\r\n      type: Number,\r\n      min: 0,\r\n      max: 100,\r\n      default: 0,\r\n    },\r\n    // New date fields\r\n    completionDate: { type: Date },\r\n    handoverDate: { type: Date },\r\n    acceptanceDate: { type: Date },\r\n    createdBy: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n    updatedBy: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n    },\r\n    assignedTo: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n    },\r\n    projectNumber: {\r\n      type: String,\r\n      required: true,\r\n      unique: true,\r\n      trim: true,\r\n    },\r\n    assignedWorkers: [\r\n      {\r\n        type: Schema.Types.ObjectId,\r\n        ref: \"User\",\r\n      },\r\n    ],\r\n    assignedDriver: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n    },\r\n    grnNumber: {\r\n      type: String,\r\n    },\r\n    workStartDate: { type: Date },\r\n    workEndDate: { type: Date },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nprojectSchema.index({ projectName: 1 });\r\nprojectSchema.index({ client: 1 });\r\nprojectSchema.index({ status: 1 });\r\nprojectSchema.index({ progress: 1 });\r\n\r\nexport const Project = model<IProject>(\"Project\", projectSchema);\r\n"]}