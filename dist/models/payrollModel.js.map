{"version":3,"file":"payrollModel.js","sourceRoot":"","sources":["../../src/models/payrollModel.ts"],"names":[],"mappings":";;;AAAA,uCAA0D;AAkB1D,MAAM,aAAa,GAAG,IAAI,iBAAM,CAC9B;IACE,QAAQ,EAAE;QACR,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;QACX,QAAQ,EAAE,IAAI;KACf;IACD,UAAU,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,IAAI;KACX;IACD,oBAAoB,EAAE;QACpB,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,IAAI;KACX;IACD,MAAM,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,IAAI;KACX;IACD,SAAS,EAAE;QACT,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,CAAC;KACP;IACD,SAAS,EAAE;QACT,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,CAAC;KACP;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,CAAC;KACP;IACD,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,CAAC;KACP;IACD,GAAG,EAAE;QACH,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,MAAM,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI;KACX;IACD,SAAS,EAAE;QACT,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;QACX,QAAQ,EAAE,IAAI;KACf;CACF,EACD;IACE,UAAU,EAAE,IAAI;IAChB,MAAM,EAAE;QACN,QAAQ,EAAE,IAAI;QACd,SAAS,EAAE,UAAS,GAAG,EAAE,GAAG;YAC1B,OAAO,GAAG,CAAC,GAAG,CAAC;YACf,OAAO,GAAG,CAAC;QACb,CAAC;KACF;CACF,CACF,CAAC;AAEF,gCAAgC;AAChC,aAAa,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;AACrC,aAAa,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;AACnC,aAAa,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;AACtC,aAAa,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;AACvC,aAAa,CAAC,KAAK,CAAC,EAAE,oBAAoB,EAAE,CAAC,EAAE,CAAC,CAAC;AAEpC,QAAA,OAAO,GAAG,IAAA,gBAAK,EAAW,SAAS,EAAE,aAAa,CAAC,CAAC","sourcesContent":["import { Document, Schema, model, Types } from \"mongoose\";\r\n\r\nexport interface IPayroll extends Document {\r\n  employee: Types.ObjectId;\r\n  labourCard: string;\r\n  labourCardPersonalNo: string;\r\n  period: string; // Format like \"01-2023\" or \"January 2023\"\r\n  allowance: number;\r\n  deduction: number;\r\n  mess: number;\r\n  advance: number;\r\n  net: number;\r\n  remark?: string;\r\n  createdBy: Types.ObjectId;\r\n  createdAt?: Date;\r\n  updatedAt?: Date;\r\n}\r\n\r\nconst payrollSchema = new Schema<IPayroll>(\r\n  {\r\n    employee: { \r\n      type: Schema.Types.ObjectId, \r\n      ref: \"User\",\r\n      required: true \r\n    },\r\n    labourCard: { \r\n      type: String, \r\n      required: true,\r\n      trim: true\r\n    },\r\n    labourCardPersonalNo: { \r\n      type: String, \r\n      required: true,\r\n      trim: true\r\n    },\r\n    period: { \r\n      type: String, \r\n      required: true,\r\n      trim: true\r\n    },\r\n    allowance: { \r\n      type: Number, \r\n      required: true, \r\n      min: 0 \r\n    },\r\n    deduction: { \r\n      type: Number, \r\n      required: true, \r\n      min: 0 \r\n    },\r\n    mess: { \r\n      type: Number, \r\n      required: true, \r\n      min: 0 \r\n    },\r\n    advance: { \r\n      type: Number, \r\n      required: true, \r\n      min: 0 \r\n    },\r\n    net: { \r\n      type: Number, \r\n      required: true \r\n    },\r\n    remark: { \r\n      type: String,\r\n      trim: true\r\n    },\r\n    createdBy: { \r\n      type: Schema.Types.ObjectId, \r\n      ref: \"User\",\r\n      required: true \r\n    }\r\n  },\r\n  { \r\n    timestamps: true,\r\n    toJSON: {\r\n      virtuals: true,\r\n      transform: function(doc, ret) {\r\n        delete ret.__v;\r\n        return ret;\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\n// Indexes for optimized queries\r\npayrollSchema.index({ employee: 1 });\r\npayrollSchema.index({ period: 1 });\r\npayrollSchema.index({ createdBy: 1 });\r\npayrollSchema.index({ labourCard: 1 });\r\npayrollSchema.index({ labourCardPersonalNo: 1 });\r\n\r\nexport const Payroll = model<IPayroll>(\"Payroll\", payrollSchema);"]}