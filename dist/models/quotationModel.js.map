{"version":3,"file":"quotationModel.js","sourceRoot":"","sources":["../../src/models/quotationModel.ts"],"names":[],"mappings":"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","sourcesContent":["import { Document, Schema, model, Types } from \"mongoose\";\r\nimport { IProject } from \"./projectModel\";\r\nimport { IUser } from \"./userModel\";\r\nimport { IEstimation } from \"./estimationModel\";\r\n\r\ninterface IQuotationItem {\r\n  description: string;\r\n  uom: string;\r\n  image?: {\r\n    url: string;\r\n    key: string;\r\n    mimetype: string;\r\n  };\r\n  quantity: number;\r\n  unitPrice: number;\r\n  totalPrice: number;\r\n}\r\n\r\nexport interface IQuotation extends Document {\r\n  project: Types.ObjectId | IProject;\r\n  estimation: Types.ObjectId | IEstimation;\r\n  quotationNumber: string;\r\n  date: Date;\r\n  validUntil: Date;\r\n  scopeOfWork: string[];\r\n  items: IQuotationItem[];\r\n  subtotal: number;\r\n  vatPercentage: number;\r\n  vatAmount: number;\r\n  netAmount: number;\r\n  termsAndConditions: string[];\r\n  preparedBy: Types.ObjectId | IUser;\r\n  approvedBy?: Types.ObjectId | IUser;\r\n  isApproved: boolean;\r\n  approvalComment?: string;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nconst quotationItemSchema = new Schema<IQuotationItem>({\r\n  description: {\r\n    type: String,\r\n    required: [true, \"Item description is required\"],\r\n    trim: true,\r\n  },\r\n  uom: {\r\n    type: String,\r\n    required: [true, \"Unit of measurement is required\"],\r\n    trim: true,\r\n  },\r\n  image: {\r\n    url: String,\r\n    key: String,\r\n    mimetype: String,\r\n  },\r\n  quantity: {\r\n    type: Number,\r\n    required: true,\r\n    min: 0,\r\n  },\r\n  unitPrice: {\r\n    type: Number,\r\n    required: true,\r\n    min: 0,\r\n  },\r\n  totalPrice: {\r\n    type: Number,\r\n    required: true,\r\n    min: 0,\r\n  },\r\n});\r\n\r\nconst quotationSchema = new Schema<IQuotation>(\r\n  {\r\n    project: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"Project\",\r\n      required: true,\r\n    },\r\n    estimation: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"Estimation\",\r\n      required: true,\r\n    },\r\n    quotationNumber: {\r\n      type: String,\r\n      required: true,\r\n      unique: true,\r\n    },\r\n    date: {\r\n      type: Date,\r\n      default: Date.now,\r\n    },\r\n    validUntil: {\r\n      type: Date,\r\n      required: true,\r\n    },\r\n    scopeOfWork: {\r\n      type: [String],\r\n      required: true,\r\n    },\r\n    items: {\r\n      type: [quotationItemSchema],\r\n      required: true,\r\n      validate: {\r\n        validator: (v: IQuotationItem[]) => v.length > 0,\r\n        message: \"At least one item is required\",\r\n      },\r\n    },\r\n    subtotal: {\r\n      type: Number,\r\n      required: true,\r\n      min: 0,\r\n      default: 0,\r\n    },\r\n    vatPercentage: {\r\n      type: Number,\r\n      default: 5,\r\n      min: 0,\r\n    },\r\n    vatAmount: {\r\n      type: Number,\r\n      required: true,\r\n      min: 0,\r\n      default: 0,\r\n    },\r\n    netAmount: {\r\n      type: Number,\r\n      required: true,\r\n      min: 0,\r\n      default: 0,\r\n    },\r\n    termsAndConditions: {\r\n      type: [String],\r\n      required: true,\r\n    },\r\n    preparedBy: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n    approvedBy: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n    },\r\n    isApproved: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    approvalComment: {\r\n      type: String,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nquotationSchema.pre<IQuotation>(\"save\", function (next) {\r\n  this.subtotal = this.items.reduce((sum, item) => sum + item.totalPrice, 0);\r\n  this.vatAmount = this.subtotal * (this.vatPercentage / 100);\r\n  this.netAmount = this.subtotal + this.vatAmount;\r\n  next();\r\n});\r\n\r\nquotationSchema.index({ project: 1 });\r\nquotationSchema.index({ estimation: 1 });\r\nquotationSchema.index({ isApproved: 1 });\r\n\r\nexport const Quotation = model<IQuotation>(\"Quotation\", quotationSchema);\r\n"]}